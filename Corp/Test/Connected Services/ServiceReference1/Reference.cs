//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.URI.com", ConfigurationName="ServiceReference1.SuperWSPortType")]
    public interface SuperWSPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="www.URI.com#SuperWS:djinn", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.djinnResponse> djinnAsync(ServiceReference1.djinnRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class djinnRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="djinn", Namespace="www.URI.com", Order=0)]
        public ServiceReference1.djinnRequestBody Body;
        
        public djinnRequest()
        {
        }
        
        public djinnRequest(ServiceReference1.djinnRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="www.URI.com")]
    public partial class djinnRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string param1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string param2;
        
        public djinnRequestBody()
        {
        }
        
        public djinnRequestBody(string param1, string param2)
        {
            this.param1 = param1;
            this.param2 = param2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class djinnResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="djinnResponse", Namespace="www.URI.com", Order=0)]
        public ServiceReference1.djinnResponseBody Body;
        
        public djinnResponse()
        {
        }
        
        public djinnResponse(ServiceReference1.djinnResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="www.URI.com")]
    public partial class djinnResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string param2;
        
        public djinnResponseBody()
        {
        }
        
        public djinnResponseBody(string @return, string param2)
        {
            this.@return = @return;
            this.param2 = param2;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface SuperWSPortTypeChannel : ServiceReference1.SuperWSPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class SuperWSPortTypeClient : System.ServiceModel.ClientBase<ServiceReference1.SuperWSPortType>, ServiceReference1.SuperWSPortType
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SuperWSPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(SuperWSPortTypeClient.GetBindingForEndpoint(endpointConfiguration), SuperWSPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperWSPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SuperWSPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperWSPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SuperWSPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SuperWSPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.djinnResponse> ServiceReference1.SuperWSPortType.djinnAsync(ServiceReference1.djinnRequest request)
        {
            return base.Channel.djinnAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.djinnResponse> djinnAsync(string param1, string param2)
        {
            ServiceReference1.djinnRequest inValue = new ServiceReference1.djinnRequest();
            inValue.Body = new ServiceReference1.djinnRequestBody();
            inValue.Body.param1 = param1;
            inValue.Body.param2 = param2;
            return ((ServiceReference1.SuperWSPortType)(this)).djinnAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SuperWSSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SuperWSSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SuperWSSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://1c-cluster.steklodom.local/steklodom/ws/SuperWS.1cws");
            }
            if ((endpointConfiguration == EndpointConfiguration.SuperWSSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://1c-cluster.steklodom.local/steklodom/ws/SuperWS.1cws");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SuperWSSoap,
            
            SuperWSSoap12,
        }
    }
}
