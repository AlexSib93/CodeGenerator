using Microsoft.EntityFrameworkCore;
using DataAccessLayer.Dto;

namespace DataAccessLayer
{
    public class WdContext : DbContext
    {

        public WdContext(string connectionString)
           : base(new DbContextOptionsBuilder<WdContext>().UseSqlServer(connectionString).Options)
        {
        }
        public WdContext()
        {
        }

        public WdContext(DbContextOptions<WdContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Dto.action> Action { get; set; } = null!;
        public virtual DbSet<actiongroup> Actiongroup { get; set; } = null!;
        public virtual DbSet<actionhistory> Actionhistory { get; set; } = null!;
        public virtual DbSet<addarea> Addarea { get; set; } = null!;
        public virtual DbSet<addbuild> Addbuild{ get; set; } = null!;
        public virtual DbSet<addcity> Addcity { get; set; } = null!;
        public virtual DbSet<addcityregion> Addcityregion { get; set; } = null!;
        public virtual DbSet<addclassification> Addclassification { get; set; } = null!;
        public virtual DbSet<addclassificationgroup> Addclassificationgroups { get; set; } = null!;
        public virtual DbSet<addregion> Addregion { get; set; } = null!;
        public virtual DbSet<address> Address { get; set; } = null!;
        public virtual DbSet<addstreet> Addstreet { get; set; } = null!;
        public virtual DbSet<advertisingaction> Advertisingaction { get; set; } = null!;
        public virtual DbSet<advertisingactiongroup> Advertisingactiongroup { get; set; } = null!;
        public virtual DbSet<agree> Agree { get; set; } = null!;
        public virtual DbSet<agreement> Agreements { get; set; } = null!;
        public virtual DbSet<agreementcondition> Agreementcondition { get; set; } = null!;
        public virtual DbSet<agreementconditionrel> Agreementconditionrel { get; set; } = null!;
        public virtual DbSet<agreementgrant> Agreementgrant { get; set; } = null!;
        
        public virtual DbSet<availabilitygroup> Availabilitygroup { get; set; } = null!;
       
        public virtual DbSet<budget> Budget { get; set; } = null!;
        public virtual DbSet<budgetgroup> Budgetgroup { get; set; } = null!;
        public virtual DbSet<calcerror> Calcerror { get; set; } = null!;
        public virtual DbSet<car> Car { get; set; } = null!;
        public virtual DbSet<carmarking> Carmarking { get; set; } = null!;
        public virtual DbSet<carmarkingroute> Carmarkingroute { get; set; } = null!;
        public virtual DbSet<cartariff> Cartariff { get; set; } = null!;
        public virtual DbSet<cashbox> Cashboxe { get; set; } = null!;
        public virtual DbSet<coatdoc> Coatdoc { get; set; } = null!;
        public virtual DbSet<coatdocgroup> Coatdocgroup { get; set; } = null!;
        public virtual DbSet<coatdocsign> Coatdocsign { get; set; } = null!;
        public virtual DbSet<color> Color { get; set; } = null!;
        public virtual DbSet<coloraccordance> Coloraccordance { get; set; } = null!;
        public virtual DbSet<coloraccordancedetail> Coloraccordancedetail { get; set; } = null!;
        public virtual DbSet<colorgroup> Colorgroup { get; set; } = null!;
        public virtual DbSet<colorgroupcustom> Colorgroupcustom { get; set; } = null!;
        public virtual DbSet<colorgroupprice> Colorgroupprice { get; set; } = null!;
        public virtual DbSet<colorgrouppriceitem> Colorgrouppriceitem { get; set; } = null!;
        public virtual DbSet<commongroupgrant> Commongroupgrant { get; set; } = null!;
        public virtual DbSet<connection> Connection { get; set; } = null!;
        public virtual DbSet<connectortype> Connectortype { get; set; } = null!;
        public virtual DbSet<constructiontype> Constructiontype { get; set; } = null!;
        public virtual DbSet<constructiontypedetail> Constructiontypedetail { get; set; } = null!;
        public virtual DbSet<customer> Customer { get; set; } = null!;
        public virtual DbSet<customeraccount> Customeraccount { get; set; } = null!;
        public virtual DbSet<customeraddress> Customeraddress { get; set; } = null!;
        public virtual DbSet<customeragreement> Customeragreement { get; set; } = null!;
        public virtual DbSet<customercategory> Customercategory { get; set; } = null!;
        public virtual DbSet<customerclaim> Customerclaim { get; set; } = null!;
        public virtual DbSet<customerdestanation> Customerdestanation { get; set; } = null!;
        public virtual DbSet<customerdiraction> Customerdiraction { get; set; } = null!;
        public virtual DbSet<customerdiscard> Customerdiscard { get; set; } = null!;
        public virtual DbSet<customerevent> Customerevent { get; set; } = null!;
        public virtual DbSet<customerfile> Customerfile { get; set; } = null!;
        public virtual DbSet<customerform> Customerform { get; set; } = null!;
        public virtual DbSet<customergroup> Customergroup { get; set; } = null!;
        public virtual DbSet<customergroupgrant> Customergroupgrant { get; set; } = null!;
        public virtual DbSet<customerplan> Customerplan { get; set; } = null!;
        public virtual DbSet<customerpricechange> Customerpricechange { get; set; } = null!;
        public virtual DbSet<customerpricechangehistory> Customerpricechangehistory { get; set; } = null!;
        public virtual DbSet<customerpricepolicy> Customerpricepolicy { get; set; } = null!;
        public virtual DbSet<customerpricepolicyhistory> Customerpricepolicyhistory { get; set; } = null!;
        public virtual DbSet<customerrel> Customerrel { get; set; } = null!;
        public virtual DbSet<customerrelation> Customerrelation { get; set; } = null!;
        public virtual DbSet<customersign> Customersign { get; set; } = null!;
        public virtual DbSet<customertyperel> Customertyperel { get; set; } = null!;
        public virtual DbSet<delivdoc> Delivdoc { get; set; } = null!;
        public virtual DbSet<delivdocdiraction> Delivdocdiraction { get; set; } = null!;
        public virtual DbSet<delivdocfile> Delivdocfile { get; set; } = null!;
        public virtual DbSet<delivdocgroup> Delivdocgroup { get; set; } = null!;
        public virtual DbSet<delivdocpos> Delivdocpos { get; set; } = null!;
        public virtual DbSet<delivdocsign> Delivdocsign { get; set; } = null!;
        public virtual DbSet<department> Department { get; set; } = null!;
        public virtual DbSet<departmentmember> Departmentmember { get; set; } = null!;
        public virtual DbSet<designerevent> Designerevent { get; set; } = null!;
        public virtual DbSet<destanation> Destanation { get; set; } = null!;
        public virtual DbSet<destanationcustomer> Destanationcustomer { get; set; } = null!;
        public virtual DbSet<destanationplan> Destanationplan { get; set; } = null!;
        public virtual DbSet<destanationroute> Destanationroute { get; set; } = null!;
        public virtual DbSet<destanationseller> Destanationseller { get; set; } = null!;
        public virtual DbSet<diraction> Diraction { get; set; } = null!;
        public virtual DbSet<diractiongrant> Diractiongrant { get; set; } = null!;
        public virtual DbSet<diractiongroup> Diractiongroup { get; set; } = null!;
        public virtual DbSet<discard> Discard { get; set; } = null!;
        public virtual DbSet<discardgroup> Discardgroup { get; set; } = null!;
        public virtual DbSet<docappearance> Docappearance { get; set; } = null!;
        public virtual DbSet<docgroupgrant> Docgroupgrant { get; set; } = null!;
        public virtual DbSet<doclock> Doclock { get; set; } = null!;
        public virtual DbSet<docoper> Docoper { get; set; } = null!;
        public virtual DbSet<docopergrant> Docopergrant { get; set; } = null!;
        public virtual DbSet<docrelation> Docrelation { get; set; } = null!;
        public virtual DbSet<docscript> Docscript { get; set; } = null!;
        public virtual DbSet<docscriptgrant> Docscriptgrant { get; set; } = null!;
        public virtual DbSet<docscriptgroup> Docscriptgroup { get; set; } = null!;
        public virtual DbSet<docsign> Docsign { get; set; } = null!;
        public virtual DbSet<docstate> Docstate { get; set; } = null!;
        public virtual DbSet<docwork> Docwork { get; set; } = null!;
        public virtual DbSet<docworkpeople> Docworkpeople { get; set; } = null!;
        public virtual DbSet<embrasuretype> Embrasuretype { get; set; } = null!;
        public virtual DbSet<embrasuretypegroup> Embrasuretypegroup { get; set; } = null!;
        public virtual DbSet<equipment> Equipment { get; set; } = null!;
        public virtual DbSet<equipmentdoc> Equipmentdoc { get; set; } = null!;
        public virtual DbSet<equipmentdocfile> Equipmentdocfiles { get; set; } = null!;
        public virtual DbSet<equipmentglass> Equipmentglass { get; set; } = null!;
        public virtual DbSet<equipmentgroup> Equipmentgroup { get; set; } = null!;
        public virtual DbSet<equipmentper> Equipmentper { get; set; } = null!;
        public virtual DbSet<equipmentprofile> Equipmentprofile { get; set; } = null!;
        public virtual DbSet<equipmentprofilein> Equipmentprofilein { get; set; } = null!;
        public virtual DbSet<equipmentprofileout> Equipmentprofileout { get; set; } = null!;
        public virtual DbSet<error> Error { get; set; } = null!;
        public virtual DbSet<errorgroup> Errorgroup { get; set; } = null!;
        public virtual DbSet<errortype> Errortype { get; set; } = null!;
        public virtual DbSet<finparam> Finparam { get; set; } = null!;
        public virtual DbSet<finparamcalc> Finparamcalc { get; set; } = null!;
        public virtual DbSet<finparamgroup> Finparamgroup { get; set; } = null!;
        public virtual DbSet<furniture> Furniture { get; set; } = null!;
        public virtual DbSet<furnituregoodkit> Furnituregoodkit { get; set; } = null!;
        public virtual DbSet<furnituremarking> Furnituremarking { get; set; } = null!;
        public virtual DbSet<ganttchart> Ganttchart { get; set; } = null!;
        public virtual DbSet<generator> Generator { get; set; } = null!;
        public virtual DbSet<glass> Glass { get; set; } = null!;
        public virtual DbSet<glassdetail> Glassdetail { get; set; } = null!;
        public virtual DbSet<glasselement> Glasselement { get; set; } = null!;
        public virtual DbSet<glasselementgroup> Glasselementgroup { get; set; } = null!;
        public virtual DbSet<glassgroup> Glassgroup { get; set; } = null!;
        public virtual DbSet<good> Good { get; set; } = null!;
        public virtual DbSet<goodanalog> Goodanalog { get; set; } = null!;
        public virtual DbSet<goodanalogdetail> Goodanalogdetail { get; set; } = null!;
        public virtual DbSet<goodanaloggroup> Goodanaloggroup { get; set; } = null!;
        public virtual DbSet<goodbuffer> Goodbuffer { get; set; } = null!;
        public virtual DbSet<goodcolorgroupprice> Goodcolorgroupprice { get; set; } = null!;
        public virtual DbSet<goodcolorparam> Goodcolorparam { get; set; } = null!;
        public virtual DbSet<goodgroup> Goodgroup { get; set; } = null!;
        public virtual DbSet<goodkit> Goodkit { get; set; } = null!;
        public virtual DbSet<goodkitdetail> Goodkitdetail { get; set; } = null!;
        public virtual DbSet<goodkitgroup> Goodkitgroup { get; set; } = null!;
        public virtual DbSet<goodmeasure> Goodmeasure { get; set; } = null!;
        public virtual DbSet<goodoptim> Goodoptim { get; set; } = null!;
        public virtual DbSet<goodost> Goodost { get; set; } = null!;
        public virtual DbSet<goodparam> Goodparam { get; set; } = null!;
        public virtual DbSet<goodparamname> Goodparamname { get; set; } = null!;
        public virtual DbSet<goodprice> Goodprice { get; set; } = null!;
        public virtual DbSet<goodpricegroup> Goodpricegroup { get; set; } = null!;
        public virtual DbSet<goodpricehistory> Goodpricehistory { get; set; } = null!;
        public virtual DbSet<goodservice> Goodservice { get; set; } = null!;
        public virtual DbSet<goodservicegroup> Goodservicegroup { get; set; } = null!;
        public virtual DbSet<goodtype> Goodtype { get; set; } = null!;
        public virtual DbSet<insertion> Insertions { get; set; } = null!;
        public virtual DbSet<insertiondetail> Insertiondetail { get; set; } = null!;
        public virtual DbSet<insertionparam> Insertionparam { get; set; } = null!;
        public virtual DbSet<insertionparamdetail> Insertionparamdetail { get; set; } = null!;
        public virtual DbSet<installdoc> Installdoc { get; set; } = null!;
        public virtual DbSet<installdocdiraction> Installdocdiraction { get; set; } = null!;
        public virtual DbSet<installdocfile> Installdocfiles { get; set; } = null!;
        public virtual DbSet<installdocgoodservice> Installdocgoodservice { get; set; } = null!;
        public virtual DbSet<installdocgroup> Installdocgroup { get; set; } = null!;
        public virtual DbSet<installdocpos> Installdocpos { get; set; } = null!;
        public virtual DbSet<installdocsign> Installdocsign { get; set; } = null!;
        public virtual DbSet<localization> Localization { get; set; } = null!;
        public virtual DbSet<localizedstring> Localizedstring { get; set; } = null!;
        public virtual DbSet<mailinglist> Mailingliss { get; set; } = null!;
        public virtual DbSet<mailinglistondemand> Mailinglistondemand { get; set; } = null!;
        public virtual DbSet<manufactdiraction> Manufactdiraction { get; set; } = null!;
        public virtual DbSet<manufactdoc> Manufactdoc { get; set; } = null!;
        public virtual DbSet<manufactdoccar> Manufactdoccar { get; set; } = null!;
        public virtual DbSet<manufactdocgoodin> Manufactdocgoodin { get; set; } = null!;
        public virtual DbSet<manufactdocgroup> Manufactdocgroup { get; set; } = null!;
        public virtual DbSet<manufactdocnopyramid> Manufactdocnopyramid { get; set; } = null!;
        public virtual DbSet<manufactdocorder> Manufactdocorder { get; set; } = null!;
        public virtual DbSet<manufactdocpos> Manufactdocpos { get; set; } = null!;
        public virtual DbSet<manufactdocpyramid> Manufactdocpyramid { get; set; } = null!;
        public virtual DbSet<manufactdocpyramidpos> Manufactdocpyramidpos { get; set; } = null!;
        public virtual DbSet<manufactdocsign> Manufactdocsign { get; set; } = null!;
        public virtual DbSet<manufactsign> Manufactsign { get; set; } = null!;
        public virtual DbSet<markingfilter> Markingfilter { get; set; } = null!;
        public virtual DbSet<markingfilterdetail> Markingfilterdetail { get; set; } = null!;
        public virtual DbSet<markingfiltertype> Markingfiltertype { get; set; } = null!;
        public virtual DbSet<measure> Measure { get; set; } = null!;
        public virtual DbSet<messagetype> Messagetype { get; set; } = null!;
        public virtual DbSet<model> Model { get; set; } = null!;
        public virtual DbSet<modelcalc> Modelcalc { get; set; } = null!;
        public virtual DbSet<modelparam> Modelparam { get; set; } = null!;
        public virtual DbSet<modelparamcalc> Modelparamcalc { get; set; } = null!;
        public virtual DbSet<modelparamcondition> Modelparamcondition { get; set; } = null!;
        public virtual DbSet<modelparamconditiondetail> Modelparamconditiondetail { get; set; } = null!;
        public virtual DbSet<modelparamgroup> Modelparamgroup { get; set; } = null!;
        public virtual DbSet<modelparamvalue> Modelparamvalue { get; set; } = null!;
        public virtual DbSet<modelpart> Modelpart { get; set; } = null!;
        public virtual DbSet<modelpic> Modelpic { get; set; } = null!;
        public virtual DbSet<modelscript> Modelscripts{ get; set; } = null!;
        public virtual DbSet<nopaper> Nopaper { get; set; } = null!;
        public virtual DbSet<optimdoc> Optimdoc { get; set; } = null!;
        public virtual DbSet<optimdocdiraction> Optimdocdiraction { get; set; } = null!;
        public virtual DbSet<optimdocgoodin> Optimdocgoodin { get; set; } = null!;
        public virtual DbSet<optimdocgoodout> Optimdocgoodout { get; set; } = null!;
        public virtual DbSet<optimdocgroup> Optimdocgroup { get; set; } = null!;
        public virtual DbSet<optimdocpic> Optimdocpic { get; set; } = null!;
        public virtual DbSet<optimdocpos> Optimdocpos { get; set; } = null!;
        public virtual DbSet<optimdocsign> Optimdocsign { get; set; } = null!;
        public virtual DbSet<orders> Orders { get; set; } = null!;
        public virtual DbSet<orderbudget> Orderbudget { get; set; } = null!;
        public virtual DbSet<orderdiraction> Orderdiraction { get; set; } = null!;
        public virtual DbSet<orderdiscard> Orderdiscard { get; set; } = null!;
        public virtual DbSet<ordererror> Ordererror { get; set; } = null!;
        public virtual DbSet<orderevent> Orderevent { get; set; } = null!;
        public virtual DbSet<ordereventgroup> Ordereventgroup { get; set; } = null!;
        public virtual DbSet<orderfile> Orderfile { get; set; } = null!;
        public virtual DbSet<ordergood> Ordergood { get; set; } = null!;
        public virtual DbSet<ordergoodservice> Ordergoodservice { get; set; } = null!;
        public virtual DbSet<orderitem> Orderitem { get; set; } = null!;
        public virtual DbSet<orderpricechange> Orderpricechange { get; set; } = null!;
        public virtual DbSet<ordersetting> Ordersetting { get; set; } = null!;
        public virtual DbSet<ordersgroup> Ordersgroup { get; set; } = null!;
        public virtual DbSet<ordersign> Ordersign { get; set; } = null!;
        public virtual DbSet<payment> Payment { get; set; } = null!;
        public virtual DbSet<paymentdoc> Paymentdoc { get; set; } = null!;
        public virtual DbSet<paymentdocgroup> Paymentdocgroup { get; set; } = null!;
        public virtual DbSet<paymentdocsign> Paymentdocsign { get; set; } = null!;
        public virtual DbSet<paymentgroup> Paymentgroup { get; set; } = null!;
        public virtual DbSet<peoplegroup> Peoplegroup { get; set; } = null!;
        public virtual DbSet<peoplegrouplist> Peoplegrouplist { get; set; } = null!;
        public virtual DbSet<peoplepost> Peoplepost { get; set; } = null!;
        public virtual DbSet<peoplepostgroup> Peoplepostgroup { get; set; } = null!;
        public virtual DbSet<people> People { get; set; } = null!;
        public virtual DbSet<picture> Picture { get; set; } = null!;
        public virtual DbSet<poll> Poll { get; set; } = null!;
        public virtual DbSet<pollanswer> Pollanswers { get; set; } = null!;
        public virtual DbSet<pollexecuting> Pollexecutings { get; set; } = null!;
        public virtual DbSet<pollexecutingdiraction> Pollexecutingdiractions { get; set; } = null!;
        public virtual DbSet<pollexecutinggroup> Pollexecutinggroups { get; set; } = null!;
        public virtual DbSet<pollexecutingitem> Pollexecutingitem { get; set; } = null!;
        public virtual DbSet<pollexecutingitemanswer> Pollexecutingitemanswer { get; set; } = null!;
        public virtual DbSet<pollexecutingsign> Pollexecutingsign { get; set; } = null!;
        public virtual DbSet<pollgroup> Pollgroup { get; set; } = null!;
        public virtual DbSet<pollquestion> Pollquestion { get; set; } = null!;
        public virtual DbSet<pollrelation> Pollrelation { get; set; } = null!;
        public virtual DbSet<power> Power { get; set; } = null!;
        public virtual DbSet<powergrant> Powergrant { get; set; } = null!;
        public virtual DbSet<powerplan> Powerplan { get; set; } = null!;
        public virtual DbSet<powerrel> Powerrel { get; set; } = null!;
        public virtual DbSet<preference> Preferences { get; set; } = null!;
        public virtual DbSet<pricechange> Pricechanges { get; set; } = null!;
        public virtual DbSet<pricechangegrant> Pricechangegrants { get; set; } = null!;
        public virtual DbSet<pricechangegroup> Pricechangegroups { get; set; } = null!;
        public virtual DbSet<pricelist> Pricelist { get; set; } = null!;
        public virtual DbSet<pricelistgoodservice> Pricelistgoodservice { get; set; } = null!;
        public virtual DbSet<pricelistgroup> Pricelistgroup { get; set; } = null!;
        public virtual DbSet<pricelistitem> Pricelistitem { get; set; } = null!;
        public virtual DbSet<pricelistmodel> Pricelistmodel { get; set; } = null!;
        public virtual DbSet<pricelistpricechange> Pricelistpricechange { get; set; } = null!;
        public virtual DbSet<productiondoc> Productiondoc { get; set; } = null!;
        public virtual DbSet<productiondocgroup> Productiondocgroups { get; set; } = null!;
        public virtual DbSet<productiondocpos> Productiondocpos { get; set; } = null!;
        public virtual DbSet<productiondocsign> Productiondocsign { get; set; } = null!;
        public virtual DbSet<productionsite> Productionsite { get; set; } = null!;
        public virtual DbSet<productiontype> Productiontype { get; set; } = null!;
        public virtual DbSet<productiontypeconstruction> Productiontypeconstruction { get; set; } = null!;
        public virtual DbSet<productiontypegrant> Productiontypegrant { get; set; } = null!;
        public virtual DbSet<productiontypegroup> Productiontypegroup { get; set; } = null!;
        public virtual DbSet<productiontypeparam> Productiontypeparam { get; set; } = null!;
        public virtual DbSet<productiontypesetting> Productiontypesetting { get; set; } = null!;
        public virtual DbSet<productiontypetemplate> Productiontypetemplate { get; set; } = null!;
        public virtual DbSet<pyramid> Pyramid { get; set; } = null!;
        public virtual DbSet<pyramidfact> Pyramidfacts { get; set; } = null!;
        public virtual DbSet<pyramidfactpos> Pyramidfactpos { get; set; } = null!;
        public virtual DbSet<report> Report { get; set; } = null!;
        public virtual DbSet<reportdocoper> Reportdocoper { get; set; } = null!;
        public virtual DbSet<reportgroup> Reportgroup { get; set; } = null!;
        public virtual DbSet<reportkit> Reportkit { get; set; } = null!;
        public virtual DbSet<reportkitdetail> Reportkitdetail { get; set; } = null!;
        public virtual DbSet<reportsave> Reportsave { get; set; } = null!;
        public virtual DbSet<reportscript> Reportscripts { get; set; } = null!;
        public virtual DbSet<respower> Respower { get; set; } = null!;
        public virtual DbSet<revisiongp> Revisiongp { get; set; } = null!;
        public virtual DbSet<revisiongpitem> Revisiongpitem { get; set; } = null!;
        public virtual DbSet<rightaccess> Rightaccesse { get; set; } = null!;
        public virtual DbSet<rotoxflugel> Rotoxflugel { get; set; } = null!;
        public virtual DbSet<rotoxhouse> Rotoxhouse { get; set; } = null!;
        public virtual DbSet<route> Route { get; set; } = null!;
        public virtual DbSet<seller> Seller { get; set; } = null!;
        public virtual DbSet<sellerdestanation> Sellerdestanation { get; set; } = null!;
        public virtual DbSet<sellergrant> Sellergrants { get; set; } = null!;
        public virtual DbSet<sellergroup> Sellergroups { get; set; } = null!;
        public virtual DbSet<sellerpricechange> Sellerpricechanges { get; set; } = null!;
        public virtual DbSet<servicedepartment> Servicedepartments { get; set; } = null!;
        public virtual DbSet<servicedepartmentpeople> Servicedepartmentpeople { get; set; } = null!;
        public virtual DbSet<servicedoc> Servicedocs { get; set; } = null!;
        public virtual DbSet<servicedocdiraction> Servicedocdiractions { get; set; } = null!;
        public virtual DbSet<servicedocgroup> Servicedocgroups { get; set; } = null!;
        public virtual DbSet<servicedocpos> Servicedocpos { get; set; } = null!;
        public virtual DbSet<servicedocsign> Servicedocsigns { get; set; } = null!;
        public virtual DbSet<servicereason> Servicereasons { get; set; } = null!;
        public virtual DbSet<setting> Settings { get; set; } = null!;
        public virtual DbSet<settinggroup> Settinggroups { get; set; } = null!;
        public virtual DbSet<shtapikgroup> Shtapikgroups { get; set; } = null!;
        public virtual DbSet<shtapikgroupdetail> Shtapikgroupdetails { get; set; } = null!;
        public virtual DbSet<shtapikgroupparamdetail> Shtapikgroupparamdetails { get; set; } = null!;
        public virtual DbSet<shtapikgroupprofile> Shtapikgroupprofiles { get; set; } = null!;
        public virtual DbSet<sign> Sign { get; set; } = null!;
        public virtual DbSet<signgrant> Signgrant { get; set; } = null!;
        public virtual DbSet<signgroup> Signgroup { get; set; } = null!;
        public virtual DbSet<signvalue> Signvalue { get; set; } = null!;
        public virtual DbSet<sizedoc> Sizedoc { get; set; } = null!;
        public virtual DbSet<sizedocconstrtype> Sizedocconstrtype { get; set; } = null!;
        public virtual DbSet<sizedocdiraction> Sizedocdiraction { get; set; } = null!;
        public virtual DbSet<sizedocdiractionpeople> Sizedocdiractionpeople { get; set; } = null!;
        public virtual DbSet<sizedocfile> Sizedocfile { get; set; } = null!;
        public virtual DbSet<sizedocgroup> Sizedocgroup { get; set; } = null!;
        public virtual DbSet<sizedocsign> Sizedocsign { get; set; } = null!;
        public virtual DbSet<sourceinfo> Sourceinfo { get; set; } = null!;
        public virtual DbSet<sourceinfogroup> Sourceinfogroup { get; set; } = null!;
        public virtual DbSet<storagespace> Storagespace { get; set; } = null!;
        public virtual DbSet<storedepart> Storedepart { get; set; } = null!;
        public virtual DbSet<storedepartdocoper> Storedepartdocopers{ get; set; } = null!;
        public virtual DbSet<storedepartrel> Storedepartrel { get; set; } = null!;
        public virtual DbSet<storedoc> Storedoc { get; set; } = null!;
        public virtual DbSet<storedocgroup> Storedocgroups { get; set; } = null!;
        public virtual DbSet<storedocpos> Storedocpos { get; set; } = null!;
        public virtual DbSet<storedocsign> Storedocsign { get; set; } = null!;
        public virtual DbSet<supplydoc> Supplydoc { get; set; } = null!;
        public virtual DbSet<supplydocdiraction> Supplydocdiraction { get; set; } = null!;
        public virtual DbSet<supplydocgoodservice> Supplydocgoodservice { get; set; } = null!;
        public virtual DbSet<supplydocgroup> Supplydocgroup { get; set; } = null!;
        public virtual DbSet<supplydocpos> Supplydocpos { get; set; } = null!;
        public virtual DbSet<supplydocsign> Supplydocsign { get; set; } = null!;
        public virtual DbSet<sysconnect> Sysconnect { get; set; } = null!;
        public virtual DbSet<sysevent> Sysevent { get; set; } = null!;
        public virtual DbSet<sysinfo> Sysinfo { get; set; } = null!;
        public virtual DbSet<DataAccessLayer.Dto.system> System { get; set; } = null!;
        public virtual DbSet<systemdetail> Systemdetail { get; set; } = null!;
        public virtual DbSet<systemdetailrel> Systemdetailrel { get; set; } = null!;
        public virtual DbSet<systemdetailrelationship> Systemdetailrelationship { get; set; } = null!;
        public virtual DbSet<sysupdate> Sysupdate { get; set; } = null!;
        public virtual DbSet<tariff> Tariff { get; set; } = null!;
        public virtual DbSet<techdoc> Techdoc { get; set; } = null!;
        public virtual DbSet<techdocdiraction> Techdocdiraction { get; set; } = null!;
        public virtual DbSet<techdocgroup> Techdocgroup { get; set; } = null!;
        public virtual DbSet<techdocpos> Techdocpos { get; set; } = null!;
        public virtual DbSet<techdocsign> Techdocsign { get; set; } = null!;
        public virtual DbSet<template> Template { get; set; } = null!;
        public virtual DbSet<templategroup> Templategroup { get; set; } = null!;
        public virtual DbSet<templateparam> Templateparam { get; set; } = null!;
        public virtual DbSet<trash> Trash { get; set; } = null!;
        public virtual DbSet<valut> Valut { get; set; } = null!;
        public virtual DbSet<valutrate> Valutrates { get; set; } = null!;
        public virtual DbSet<variant> Variants { get; set; } = null!;
        public virtual DbSet<variantdetail> Variantdetails { get; set; } = null!;
        public virtual DbSet<variantparam> Variantparams { get; set; } = null!;
        public virtual DbSet<variantparamdetail> Variantparamdetails { get; set; } = null!;
        public virtual DbSet<variantparamtype> Variantparamtypes { get; set; } = null!;
        public virtual DbSet<variantparamtypevalue> Variantparamtypevalues { get; set; } = null!;
        public virtual DbSet<varianttype> Varianttypes { get; set; } = null!;
        public virtual DbSet<vectorpicture> Vectorpictures { get; set; } = null!;
        public virtual DbSet<vectorpicturedetail> Vectorpicturedetails { get; set; } = null!;
        public virtual DbSet<work> Works { get; set; } = null!;
        public virtual DbSet<workgroup> Workgroups { get; set; } = null!;
        public virtual DbSet<workoper> Workopers { get; set; } = null!;
        public virtual DbSet<workpeople> Workpeople { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Password=6Sijz5bHA;Persist Security Info=True;User ID=StepanIvanov;Initial Catalog=ecad_plastplus;Data Source=localhost\\SQLSERVER;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            //modelBuilder.Entity<Dto.Action>(entity =>
            //{
            //    entity.HasKey(e => e.Idaction);

            //    entity.ToTable("action");

            //    entity.Property(e => e.Idaction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaction");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Actiongroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idactiongroup);

            //    entity.ToTable("actiongroup");

            //    entity.Property(e => e.Idactiongroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idactiongroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Actionhistory>(entity =>
            //{
            //    entity.HasKey(e => e.Idactionhistory);

            //    entity.ToTable("actionhistory");

            //    entity.Property(e => e.Idactionhistory)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idactionhistory");

            //    entity.Property(e => e.Adddate1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate1");

            //    entity.Property(e => e.Adddate2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate2");

            //    entity.Property(e => e.Adddate3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate3");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addstr1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idaction).HasColumnName("idaction");

            //    entity.Property(e => e.Idactiongroup).HasColumnName("idactiongroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");
            //});

            //modelBuilder.Entity<Addarea>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddarea);

            //    entity.ToTable("addarea");

            //    entity.HasIndex(e => e.Idaddregion, "idx_addarea_idaddregion");

            //    entity.HasIndex(e => e.Kladrcode, "idx_addarea_kladrcode");

            //    entity.Property(e => e.Idaddarea)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddarea");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.HasOne(d => d.IdaddregionNavigation)
            //        .WithMany(p => p.Addareas)
            //        .HasForeignKey(d => d.Idaddregion)
            //        .HasConstraintName("FK_addarea_addregion");
            //});

            //modelBuilder.Entity<Addbuild>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddbuild);

            //    entity.ToTable("addbuild");

            //    entity.HasComment("Таблица зданий");

            //    entity.HasIndex(e => e.Idaddcityregion, "idx_addbuild_idaddcityregion");

            //    entity.HasIndex(e => e.Idaddstreet, "idx_addbuild_idaddstreet");

            //    entity.HasIndex(e => e.Kladrcode, "idx_addbuild_kladrcode");

            //    entity.Property(e => e.Idaddbuild)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddbuild")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddcityregion)
            //        .HasColumnName("idaddcityregion")
            //        .HasComment("Ссылка на район города(в некоторых городах улица может проходить через несколько районов города)");

            //    entity.Property(e => e.Idaddstreet)
            //        .HasColumnName("idaddstreet")
            //        .HasComment("Ссылка на улицу");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Номер здания");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.HasOne(d => d.IdaddcityregionNavigation)
            //        .WithMany(p => p.Addbuilds)
            //        .HasForeignKey(d => d.Idaddcityregion)
            //        .HasConstraintName("FK_addbuild_addcityregion");

            //    entity.HasOne(d => d.IdaddstreetNavigation)
            //        .WithMany(p => p.Addbuilds)
            //        .HasForeignKey(d => d.Idaddstreet)
            //        .HasConstraintName("FK_addbuild_addstreet");
            //});

            //modelBuilder.Entity<Addcity>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddcity);

            //    entity.ToTable("addcity");

            //    entity.HasIndex(e => e.Idaddarea, "idx_addcity_idaddarea");

            //    entity.HasIndex(e => e.Kladrcode, "idx_addcity_kladrcode");

            //    entity.Property(e => e.Idaddcity)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddcity");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname")
            //        .HasComment("Сокращённое наименование");

            //    entity.HasOne(d => d.IdaddareaNavigation)
            //        .WithMany(p => p.Addcities)
            //        .HasForeignKey(d => d.Idaddarea)
            //        .HasConstraintName("FK_addcity_addarea");
            //});

            //modelBuilder.Entity<Addcityregion>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddcityregion);

            //    entity.ToTable("addcityregion");

            //    entity.HasIndex(e => e.Idaddcity, "idx_addcityregion_idaddcity");

            //    entity.HasIndex(e => e.Kladrcode, "idx_addcityregion_kladrcode");

            //    entity.Property(e => e.Idaddcityregion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.HasOne(d => d.IdaddcityNavigation)
            //        .WithMany(p => p.Addcityregions)
            //        .HasForeignKey(d => d.Idaddcity)
            //        .HasConstraintName("FK_addcityregion_addcity");
            //});

            //modelBuilder.Entity<Addclassification>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddclassification);

            //    entity.ToTable("addclassification");

            //    entity.HasIndex(e => e.Idaddclassificationgroup, "idx_addclassification_idaddclassificationgroup");

            //    entity.Property(e => e.Idaddclassification)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddclassification");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idaddclassificationgroup).HasColumnName("idaddclassificationgroup");

            //    entity.Property(e => e.Intval).HasColumnName("intval");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numval)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numval");

            //    entity.Property(e => e.Strval)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strval");

            //    entity.HasOne(d => d.IdaddclassificationgroupNavigation)
            //        .WithMany(p => p.Addclassifications)
            //        .HasForeignKey(d => d.Idaddclassificationgroup)
            //        .HasConstraintName("FK_addclassification_addclassificationgroup");
            //});

            //modelBuilder.Entity<Addclassificationgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddclassificationgroup);

            //    entity.ToTable("addclassificationgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_addclassificationgroup_parentid");

            //    entity.Property(e => e.Idaddclassificationgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddclassificationgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Addregion>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddregion);

            //    entity.ToTable("addregion");

            //    entity.HasIndex(e => e.Kladrcode, "idx_addregion_kladrcode");

            //    entity.Property(e => e.Idaddregion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddregion");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<Address>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddress);

            //    entity.ToTable("address");

            //    entity.HasComment("Справочник адресов");

            //    entity.Property(e => e.Idaddress)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddress")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo")
            //        .HasComment("Дополнительная информация");

            //    entity.Property(e => e.Apartment)
            //        .HasColumnName("apartment")
            //        .HasComment("Квартира");

            //    entity.Property(e => e.Build)
            //        .HasColumnName("build")
            //        .HasComment("№ дома");

            //    entity.Property(e => e.BuildStr)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("build_str");

            //    entity.Property(e => e.Building)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("building")
            //        .HasComment("Корпус, строение, индекс...");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удалённости");

            //    entity.Property(e => e.Doorway)
            //        .HasColumnName("doorway")
            //        .HasComment("Подъезд");

            //    entity.Property(e => e.Floor)
            //        .HasColumnName("floor")
            //        .HasComment("Этаж");

            //    entity.Property(e => e.Freightlift)
            //        .HasColumnName("freightlift")
            //        .HasComment("Наличие грузового лифта");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddarea)
            //        .HasColumnName("idaddarea")
            //        .HasComment("Ссылка на край/область");

            //    entity.Property(e => e.Idaddbuild).HasColumnName("idaddbuild");

            //    entity.Property(e => e.Idaddcity)
            //        .HasColumnName("idaddcity")
            //        .HasComment("Ссылка на город");

            //    entity.Property(e => e.Idaddcityregion)
            //        .HasColumnName("idaddcityregion")
            //        .HasComment("Ссылка на район города");

            //    entity.Property(e => e.Idaddregion)
            //        .HasColumnName("idaddregion")
            //        .HasComment("Ссылка на регион");

            //    entity.Property(e => e.Idaddstreet)
            //        .HasColumnName("idaddstreet")
            //        .HasComment("Ссылка на улицу");

            //    entity.Property(e => e.Passengerlift)
            //        .HasColumnName("passengerlift")
            //        .HasComment("Наличие пассажирского лифта");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Speakerphone)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("speakerphone");
            //});

            //modelBuilder.Entity<Addstreet>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddstreet);

            //    entity.ToTable("addstreet");

            //    entity.HasIndex(e => e.Kladrcode, "addstreet_kladrcode_IDX");

            //    entity.HasIndex(e => e.Idaddcityregion, "idx_addstreet_idaddcityregion");

            //    entity.Property(e => e.Idaddstreet)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddstreet");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.HasOne(d => d.IdaddcityregionNavigation)
            //        .WithMany(p => p.Addstreets)
            //        .HasForeignKey(d => d.Idaddcityregion)
            //        .HasConstraintName("FK_addstreet_addcityregion");
            //});

            //modelBuilder.Entity<Advertisingaction>(entity =>
            //{
            //    entity.HasKey(e => e.Idadvertisingaction);

            //    entity.ToTable("advertisingaction");

            //    entity.HasComment("Справочник рекламных акций");

            //    entity.HasIndex(e => e.Idadvertisingactiongroup, "idx_advertisingaction_idadvertisingactiongroup");

            //    entity.HasIndex(e => e.Idvalut, "idx_advertisingaction_idvalut");

            //    entity.Property(e => e.Idadvertisingaction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idadvertisingaction")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Удалена");

            //    entity.Property(e => e.Dtfinish)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfinish")
            //        .HasComment("Дата окончания");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart")
            //        .HasComment("Дата начала");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idadvertisingactiongroup)
            //        .HasColumnName("idadvertisingactiongroup")
            //        .HasComment("Ссылка на группу");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование акции");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc")
            //        .HasComment("Процент");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm")
            //        .HasComment("Сумма");

            //    entity.HasOne(d => d.IdadvertisingactiongroupNavigation)
            //        .WithMany(p => p.Advertisingactions)
            //        .HasForeignKey(d => d.Idadvertisingactiongroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_advertisingaction_advertisingactiongroup");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Advertisingactions)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_advertisingaction_valut");
            //});

            //modelBuilder.Entity<Advertisingactiongroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idadvertisingactiongroup);

            //    entity.ToTable("advertisingactiongroup");

            //    entity.HasComment("Группы рекламных акций");

            //    entity.HasIndex(e => e.Parentid, "idx_advertisingactiongroup_parentid");

            //    entity.Property(e => e.Idadvertisingactiongroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idadvertisingactiongroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Удалена");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование группы");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родителя");
            //});

            //modelBuilder.Entity<Adwd>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("ADWD");

            //    entity.Property(e => e.Column1)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column3)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column4)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column5)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column6)
            //        .HasMaxLength(512)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Agree>(entity =>
            //{
            //    entity.HasKey(e => e.Idagree);

            //    entity.ToTable("agree");

            //    entity.HasIndex(e => e.Idcustomer, "idx_agree_idcustomer");

            //    entity.HasIndex(e => e.Idpeople, "idx_agree_idpeople");

            //    entity.Property(e => e.Idagree)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idagree");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Agrees)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_agree_customer");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Agrees)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_agree_people");
            //});

            //modelBuilder.Entity<Agreement>(entity =>
            //{
            //    entity.HasKey(e => e.Idagreement);

            //    entity.ToTable("agreement");

            //    entity.HasIndex(e => e.Idseller, "idx_agreement_idseller");

            //    entity.HasIndex(e => e.Idvalut, "idx_agreement_idvalut");

            //    entity.Property(e => e.Idagreement)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idagreement");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Agreements)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_agreement_seller");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Agreements)
            //        .HasForeignKey(d => d.Idvalut)
            //        .HasConstraintName("FK_agreement_valut");
            //});

            //modelBuilder.Entity<Agreementcondition>(entity =>
            //{
            //    entity.HasKey(e => e.Idagreementcondition);

            //    entity.ToTable("agreementcondition");

            //    entity.Property(e => e.Idagreementcondition)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idagreementcondition");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defaultvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("defaultvalue");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Agreementconditionrel>(entity =>
            //{
            //    entity.HasKey(e => e.Idagreementconditionrel);

            //    entity.ToTable("agreementconditionrel");

            //    entity.HasIndex(e => e.Idagreement, "idx_agreementconditionrel_idagreement");

            //    entity.HasIndex(e => e.Idagreementcondition, "idx_agreementconditionrel_idagreementcondition");

            //    entity.Property(e => e.Idagreementconditionrel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idagreementconditionrel");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Flag).HasColumnName("flag");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idagreementcondition).HasColumnName("idagreementcondition");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Value)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value");

            //    entity.HasOne(d => d.IdagreementNavigation)
            //        .WithMany(p => p.Agreementconditionrels)
            //        .HasForeignKey(d => d.Idagreement)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_agreementconditionrel_agreement");

            //    entity.HasOne(d => d.IdagreementconditionNavigation)
            //        .WithMany(p => p.Agreementconditionrels)
            //        .HasForeignKey(d => d.Idagreementcondition)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_agreementconditionrel_agreementcondition");
            //});

            //modelBuilder.Entity<Agreementgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idagreementgrant);

            //    entity.ToTable("agreementgrant");

            //    entity.HasIndex(e => e.Idagreement, "idx_agreementgrant_idagreement");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_agreementgrant_idpeoplegroup");

            //    entity.Property(e => e.Idagreementgrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idagreementgrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grant).HasColumnName("grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.HasOne(d => d.IdagreementNavigation)
            //        .WithMany(p => p.Agreementgrants)
            //        .HasForeignKey(d => d.Idagreement)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_agreementgrant_agreement");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Agreementgrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_agreementgrant_peoplegroup");
            //});

            //modelBuilder.Entity<Al230Error>(entity =>
            //{
            //    entity.HasKey(e => e.Iderror)
            //        .HasName("PK_al230_Errors_iderror");

            //    entity.ToTable("al230_Errors");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Dtc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtc");

            //    entity.Property(e => e.Errortext)
            //        .IsUnicode(false)
            //        .HasColumnName("errortext");

            //    entity.Property(e => e.Paramname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("paramname");

            //    entity.Property(e => e.Pzname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("pzname");

            //    entity.Property(e => e.Wdoper)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("wdoper");
            //});

            //modelBuilder.Entity<Al230OperationType>(entity =>
            //{
            //    entity.HasKey(e => e.Idtype)
            //        .HasName("PK_al230_operation_types_idtype");

            //    entity.ToTable("al230_operation_types");

            //    entity.Property(e => e.Idtype).HasColumnName("idtype");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("description");

            //    entity.Property(e => e.Dfx)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("dfx");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Al230WdOper>(entity =>
            //{
            //    entity.HasKey(e => e.Idwdoper)
            //        .HasName("PK_al230_wd_oper_idwdoper");

            //    entity.ToTable("al230_wd_oper");

            //    entity.Property(e => e.Idwdoper).HasColumnName("idwdoper");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("description");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Operationlistindex)
            //        .HasColumnName("operationlistindex")
            //        .HasComment("для операций из OperationList");
            //});

            //modelBuilder.Entity<Al230WdOperDet>(entity =>
            //{
            //    entity.HasKey(e => e.Iddetail)
            //        .HasName("PK_al230_wd_oper_detail_iddetail");

            //    entity.ToTable("al230_wd_oper_det");

            //    entity.HasIndex(e => e.Idtype, "IDX_al230_wd_oper_detail_idtype");

            //    entity.HasIndex(e => e.Idwdoper, "IDX_al230_wd_oper_detail_idwdoper");

            //    entity.Property(e => e.Iddetail).HasColumnName("iddetail");

            //    entity.Property(e => e.Angle)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("angle")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Depth)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("depth")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Description)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("description");

            //    entity.Property(e => e.Diametr)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("diametr")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Gcode)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("gcode")
            //        .HasDefaultValueSql("('')");

            //    entity.Property(e => e.Idtype).HasColumnName("idtype");

            //    entity.Property(e => e.Idwdoper).HasColumnName("idwdoper");

            //    entity.Property(e => e.Length)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("length")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Levels)
            //        .IsUnicode(false)
            //        .HasColumnName("levels")
            //        .HasDefaultValueSql("('')");

            //    entity.Property(e => e.Orientation)
            //        .HasColumnName("orientation")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Profcode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("profcode");

            //    entity.Property(e => e.Side)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("side")
            //        .HasDefaultValueSql("('Top')");

            //    entity.Property(e => e.Torcside)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("torcside")
            //        .HasDefaultValueSql("('')");

            //    entity.Property(e => e.Width)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("width")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.XBias)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("x_bias");

            //    entity.Property(e => e.YBias)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("y_bias");

            //    entity.Property(e => e.Z)
            //        .HasColumnType("decimal(15, 1)")
            //        .HasColumnName("z");
            //});

            //modelBuilder.Entity<Allowreportedit>(entity =>
            //{
            //    entity.HasKey(e => e.Idallowreportedit)
            //        .HasName("PK_allowreportedit_idallowreportedit");

            //    entity.ToTable("allowreportedit");

            //    entity.Property(e => e.Idallowreportedit)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idallowreportedit");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idreportgroup).HasColumnName("idreportgroup");
            //});

            //modelBuilder.Entity<AltaOg>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("alta_og");

            //    entity.Property(e => e.Ggname)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("GGNAME");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");

            //    entity.Property(e => e.Optimgroupid)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("OPTIMGROUPID");
            //});

            //modelBuilder.Entity<Altagood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("altagoods");

            //    entity.HasIndex(e => e.Idaltagood, "pk_idaltagoods")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Idaltagood).HasColumnName("idaltagood");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(255)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Marking2)
            //        .HasMaxLength(255)
            //        .HasColumnName("marking2");
            //});

            //modelBuilder.Entity<AluCityregion>(entity =>
            //{
            //    entity.HasKey(e => e.Idaddcityregion);

            //    entity.ToTable("alu_cityregion");

            //    entity.HasIndex(e => e.Iddestanation, "idx_alu_cityregion_iddestanation");

            //    entity.Property(e => e.Idaddcityregion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Region).HasColumnName("region");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.AluCityregions)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_alu_cityregion_destanation");
            //});

            //modelBuilder.Entity<Alumpart>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("alumparts");

            //    entity.HasIndex(e => e.Idorder, "idx_alumparts_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_alumparts_idorderitem");

            //    entity.Property(e => e.Balkatype)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("balkatype");

            //    entity.Property(e => e.Disassembled).HasColumnName("disassembled");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idalumparts).HasColumnName("idalumparts");

            //    entity.Property(e => e.Idbeam).HasColumnName("idbeam");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idregion).HasColumnName("idregion");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(10)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Regionpart)
            //        .HasMaxLength(5)
            //        .HasColumnName("regionpart");

            //    entity.Property(e => e.Secnum).HasColumnName("secnum");

            //    entity.Property(e => e.X).HasColumnName("x");

            //    entity.Property(e => e.Y).HasColumnName("y");
            //});

            //modelBuilder.Entity<Alumpartsnum>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("alumpartsnum");

            //    entity.Property(e => e.Balkatype)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("balkatype");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idbeam).HasColumnName("idbeam");

            //    entity.Property(e => e.Idordeitem).HasColumnName("idordeitem");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");
            //});

            //modelBuilder.Entity<Audit>(entity =>
            //{
            //    entity.HasKey(e => e.Idaudit)
            //        .HasName("PK__audit__621ABB411463093C");

            //    entity.ToTable("audit");

            //    entity.HasIndex(e => e.Columnname, "idx_audit_columnname");

            //    entity.HasIndex(e => e.Dt, "idx_audit_dt");

            //    entity.HasIndex(e => e.Tablename, "idx_audit_tablename");

            //    entity.Property(e => e.Idaudit)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idaudit");

            //    entity.Property(e => e.Columnname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("columnname");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Newvalue)
            //        .HasMaxLength(500)
            //        .IsUnicode(false)
            //        .HasColumnName("newvalue");

            //    entity.Property(e => e.Oldvalue)
            //        .HasMaxLength(500)
            //        .IsUnicode(false)
            //        .HasColumnName("oldvalue");

            //    entity.Property(e => e.Oper)
            //        .HasMaxLength(15)
            //        .IsUnicode(false)
            //        .HasColumnName("oper");

            //    entity.Property(e => e.Tablename)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("tablename");
            //});

            //modelBuilder.Entity<Availabilitygroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idavailabilitygroup);

            //    entity.ToTable("availabilitygroup");

            //    entity.Property(e => e.Idavailabilitygroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idavailabilitygroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Badgood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("badgood");

            //    entity.HasComment("temp");

            //    entity.Property(e => e.Idgd).HasColumnName("idgd");

            //    entity.Property(e => e.Idgoodbad).HasColumnName("idgoodbad");
            //});

            //modelBuilder.Entity<Barcodeitem>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("barcodeitem");

            //    entity.HasIndex(e => e.Idcomplect, "idx_barcodeitem_idcomplect");

            //    entity.Property(e => e.Idcomplect).HasColumnName("idcomplect");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.HasOne(d => d.IdcomplectNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcomplect)
            //        .HasConstraintName("FK_barcodeitem_storedocscomplect");
            //});

            //modelBuilder.Entity<BeemGuid>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Beem_guid");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Length)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("length");

            //    entity.Property(e => e.VisibleId).HasColumnName("Visible_id");
            //});

            //modelBuilder.Entity<Box>(entity =>
            //{
            //    entity.HasKey(e => e.Idbox);

            //    entity.ToTable("box");

            //    entity.HasIndex(e => e.Dtcreate, "idx_box_dtcreate");

            //    entity.HasIndex(e => e.Idboxoper, "idx_box_idboxoper");

            //    entity.HasIndex(e => e.Idorder, "idx_box_idorder");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "idx_box_idorderitem");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_box_manufactdocpos");

            //    entity.HasIndex(e => e.Idparent, "idx_box_parent");

            //    entity.HasIndex(e => e.Idpeoplecre, "idx_box_peoplecre");

            //    entity.HasIndex(e => new { e.Yearmonth, e.Ymnumber }, "idx_box_yearmonth");

            //    entity.Property(e => e.Idbox)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idbox");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idboxoper).HasColumnName("idboxoper");

            //    entity.Property(e => e.Idboxtype).HasColumnName("idboxtype");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idpeoplecre).HasColumnName("idpeoplecre");

            //    entity.Property(e => e.Lenght).HasColumnName("lenght");

            //    entity.Property(e => e.Logistdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("logistdate");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Num).HasColumnName("num");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Yearmonth).HasColumnName("yearmonth");

            //    entity.Property(e => e.Ymnumber).HasColumnName("ymnumber");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Boxes)
            //        .HasForeignKey(d => d.Idaddress)
            //        .HasConstraintName("FK__box__idaddress__13B0FD79");

            //    entity.HasOne(d => d.IdboxoperNavigation)
            //        .WithMany(p => p.Boxes)
            //        .HasForeignKey(d => d.Idboxoper)
            //        .HasConstraintName("FK_box_boxoper");

            //    entity.HasOne(d => d.IdboxtypeNavigation)
            //        .WithMany(p => p.Boxes)
            //        .HasForeignKey(d => d.Idboxtype)
            //        .HasConstraintName("FK__box__idboxtype__0DF82423");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Boxes)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK__box__iddestanati__14A521B2");

            //    entity.HasOne(d => d.IdpeoplecreNavigation)
            //        .WithMany(p => p.Boxes)
            //        .HasForeignKey(d => d.Idpeoplecre)
            //        .HasConstraintName("FK__box__idpeoplecre__5672E50F");
            //});

            //modelBuilder.Entity<Boxitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idboxitem);

            //    entity.ToTable("boxitem");

            //    entity.HasIndex(e => e.Idbox, "idx_boxitem_idbox");

            //    entity.HasIndex(e => e.Idmodelcalc, "idx_boxitem_idmodelcalc");

            //    entity.HasIndex(e => e.Idorderitem, "idx_boxitem_idorderitem");

            //    entity.Property(e => e.Idboxitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idboxitem");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idbox).HasColumnName("idbox");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Lenght).HasColumnName("lenght");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdboxNavigation)
            //        .WithMany(p => p.Boxitems)
            //        .HasForeignKey(d => d.Idbox)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_boxitem_box");
            //});

            //modelBuilder.Entity<Boxoper>(entity =>
            //{
            //    entity.HasKey(e => e.Idboxoper);

            //    entity.ToTable("boxoper");

            //    entity.Property(e => e.Idboxoper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idboxoper");

            //    entity.Property(e => e.Artikul)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("artikul");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Prefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("prefix");

            //    entity.Property(e => e.Suffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("suffix");

            //    entity.Property(e => e.VisibleArm)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("visible_arm");
            //});

            //modelBuilder.Entity<Boxtype>(entity =>
            //{
            //    entity.HasKey(e => e.Idboxtype);

            //    entity.ToTable("boxtype");

            //    entity.Property(e => e.Idboxtype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idboxtype");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idboxoper).HasColumnName("idboxoper");

            //    entity.Property(e => e.Lenght).HasColumnName("lenght");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Budget>(entity =>
            //{
            //    entity.HasKey(e => e.Idbudget);

            //    entity.ToTable("budget");

            //    entity.HasIndex(e => e.Idbudgetgroup, "idx_budget_idbudgetgroup");

            //    entity.Property(e => e.Idbudget)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idbudget");

            //    entity.Property(e => e.Autosave).HasColumnName("autosave");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.D)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("d");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idbudgetgroup).HasColumnName("idbudgetgroup");

            //    entity.Property(e => e.K)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.HasOne(d => d.IdbudgetgroupNavigation)
            //        .WithMany(p => p.Budgets)
            //        .HasForeignKey(d => d.Idbudgetgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_budget_budgetgroup");
            //});

            //modelBuilder.Entity<Budgetgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idbudgetgroup);

            //    entity.ToTable("budgetgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_budgetgroup_parentid");

            //    entity.Property(e => e.Idbudgetgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idbudgetgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Calcerror>(entity =>
            //{
            //    entity.HasKey(e => e.Idcalcerror);

            //    entity.ToTable("calcerror");

            //    entity.HasIndex(e => e.Iderror, "idx_calcerror_iderror");

            //    entity.Property(e => e.Idcalcerror)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcalcerror");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Calcerrors)
            //        .HasForeignKey(d => d.Iderror)
            //        .HasConstraintName("FK_calcerror_error");
            //});

            //modelBuilder.Entity<Car>(entity =>
            //{
            //    entity.HasKey(e => e.Idcar);

            //    entity.ToTable("car");

            //    entity.HasComment("Справочник автомобилей");

            //    entity.HasIndex(e => e.WialonId, "IX_car_WialonId");

            //    entity.HasIndex(e => e.Guid, "UQ_car_guid")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcarmarking, "idx_car_idcarmarking");

            //    entity.HasIndex(e => e.Idproductionsite, "idx_car_idproductionsite");

            //    entity.HasIndex(e => e.Idtariff, "idx_car_idtariff");

            //    entity.Property(e => e.Idcar)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcar")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Active).HasColumnName("active");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Idcarmarking)
            //        .HasColumnName("idcarmarking")
            //        .HasComment("Ссылка на марку автомобиля");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idpyramid)
            //        .HasColumnName("idpyramid")
            //        .HasComment("Ссылка на пирамиду");

            //    entity.Property(e => e.Idtariff).HasColumnName("idtariff");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Statesign)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("statesign")
            //        .HasComment("Гос.номер");

            //    entity.HasOne(d => d.IdcarmarkingNavigation)
            //        .WithMany(p => p.Cars)
            //        .HasForeignKey(d => d.Idcarmarking)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_car_carmarking");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Cars)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_car_idproductionsite");

            //    entity.HasOne(d => d.IdtariffNavigation)
            //        .WithMany(p => p.Cars)
            //        .HasForeignKey(d => d.Idtariff)
            //        .HasConstraintName("FK_car_idtariff");
            //});

            //modelBuilder.Entity<Carmarking>(entity =>
            //{
            //    entity.HasKey(e => e.Idcarmarking);

            //    entity.ToTable("carmarking");

            //    entity.HasComment("Справочник марок автомобилей");

            //    entity.HasIndex(e => e.Guid, "UQ_carmarking_guid")
            //        .IsUnique();

            //    entity.Property(e => e.Idcarmarking)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcarmarking")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Length).HasColumnName("length");

            //    entity.Property(e => e.Maxroute).HasColumnName("maxroute");

            //    entity.Property(e => e.Maxsqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxsqr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.NormCount).HasColumnName("normCount");

            //    entity.Property(e => e.NormDownLoad).HasColumnName("normDownLoad");

            //    entity.Property(e => e.NormS).HasColumnName("normS");

            //    entity.Property(e => e.NormTt).HasColumnName("normTT");

            //    entity.Property(e => e.NormWeight).HasColumnName("normWeight");

            //    entity.Property(e => e.Priority).HasColumnName("priority");

            //    entity.Property(e => e.Tonnage)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("tonnage");

            //    entity.Property(e => e.Tonnageue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("tonnageue");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Carmarkingroute>(entity =>
            //{
            //    entity.HasKey(e => e.Idcarmarkingroute);

            //    entity.ToTable("carmarkingroute");

            //    entity.HasIndex(e => e.Idcarmarking, "idx_carmarkingroute_idcarmarking");

            //    entity.HasIndex(e => e.Idroute, "idx_carmarkingroute_idroute");

            //    entity.Property(e => e.Idcarmarkingroute)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcarmarkingroute");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcarmarking).HasColumnName("idcarmarking");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IdcarmarkingNavigation)
            //        .WithMany(p => p.Carmarkingroutes)
            //        .HasForeignKey(d => d.Idcarmarking)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_carmarkingroute_carmarking");

            //    entity.HasOne(d => d.IdrouteNavigation)
            //        .WithMany(p => p.Carmarkingroutes)
            //        .HasForeignKey(d => d.Idroute)
            //        .HasConstraintName("FK_carmarkingroute_route");
            //});

            //modelBuilder.Entity<Cartariff>(entity =>
            //{
            //    entity.HasKey(e => e.Idcartariff);

            //    entity.ToTable("cartariff");

            //    entity.HasIndex(e => e.Idcar, "idx_cartariff_idcar");

            //    entity.HasIndex(e => e.Idtariff, "idx_cartariff_idtariff");

            //    entity.Property(e => e.Idcartariff)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcartariff");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idtariff).HasColumnName("idtariff");

            //    entity.HasOne(d => d.IdcarNavigation)
            //        .WithMany(p => p.Cartariffs)
            //        .HasForeignKey(d => d.Idcar)
            //        .HasConstraintName("FK_cartariff_car");

            //    entity.HasOne(d => d.IdtariffNavigation)
            //        .WithMany(p => p.Cartariffs)
            //        .HasForeignKey(d => d.Idtariff)
            //        .HasConstraintName("FK_cartariff_tariff");
            //});

            //modelBuilder.Entity<Cashbox>(entity =>
            //{
            //    entity.HasKey(e => e.Idcashbox);

            //    entity.ToTable("cashbox");

            //    entity.HasIndex(e => e.Idpeople, "idx_cashbox_idpeople");

            //    entity.Property(e => e.Idcashbox)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcashbox");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Cashboxes)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_cashbox_people");
            //});

            //modelBuilder.Entity<Changegood>(entity =>
            //{
            //    entity.HasKey(e => e.Idchangegood);

            //    entity.ToTable("changegood");

            //    entity.HasIndex(e => e.Idgood, "idx_changegood_idgood");

            //    entity.HasIndex(e => e.Idmodelcalc, "idx_changegood_idmodelcalc");

            //    entity.HasIndex(e => e.Idorder, "idx_changegood_idorder");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_changegood_idstoredoc");

            //    entity.Property(e => e.Idchangegood)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idchangegood");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcrea)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcrea");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodfrom).HasColumnName("idgoodfrom");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");
            //});

            //modelBuilder.Entity<Changesp7>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("changesp7");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("date")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("date")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.IdchangesP7).HasColumnName("idchangesP7");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocsign).HasColumnName("idmanufactdocsign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");
            //});

            //modelBuilder.Entity<Citytime>(entity =>
            //{
            //    entity.HasKey(e => e.Idcitytime);

            //    entity.ToTable("citytime");

            //    entity.HasIndex(e => e.Kladrcode, "idx_citytime_kladrcode");

            //    entity.Property(e => e.Idcitytime)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcitytime");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Detailing).HasColumnName("detailing");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Maketime)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .HasColumnName("maketime");
            //});

            //modelBuilder.Entity<Coatdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoatdoc);

            //    entity.ToTable("coatdoc");

            //    entity.HasIndex(e => e.Idcustomer, "idx_coatdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_coatdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_coatdoc_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_coatdoc_idpeople");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_coatdoc_idstoredepart");

            //    entity.Property(e => e.Idcoatdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Qumarking).HasColumnName("qumarking");

            //    entity.Property(e => e.Quwhip).HasColumnName("quwhip");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Coatdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_coatdoc_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Coatdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_coatdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Coatdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_coatdoc_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Coatdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_coatdoc_people");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Coatdocs)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_coatdoc_storedepart");
            //});

            //modelBuilder.Entity<Coatdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoatdocgroup);

            //    entity.ToTable("coatdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_coatdocgroup_parentid");

            //    entity.Property(e => e.Idcoatdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoatdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Coatdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoatdocpos);

            //    entity.ToTable("coatdocpos");

            //    entity.HasIndex(e => e.Idcoatdoc, "idx_coatdocpos_idcoatdoc");

            //    entity.HasIndex(e => e.Idgood, "idx_coatdocpos_idgood");

            //    entity.Property(e => e.Idcoatdocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoatdocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcoatdoc).HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.HasOne(d => d.IdcoatdocNavigation)
            //        .WithMany(p => p.Coatdocpos)
            //        .HasForeignKey(d => d.Idcoatdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_coatdocpos_coatdoc");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Coatdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_coatdocpos_good");
            //});

            //modelBuilder.Entity<Coatdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoatdocsign);

            //    entity.ToTable("coatdocsign");

            //    entity.HasIndex(e => e.Idcoatdoc, "idx_coatdocsign_idcoatdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_coatdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_coatdocsign_idsign");

            //    entity.Property(e => e.Idcoatdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoatdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idcoatdoc).HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcoatdocNavigation)
            //        .WithMany(p => p.Coatdocsigns)
            //        .HasForeignKey(d => d.Idcoatdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_coatdocsign_coatdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Coatdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_coatdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Coatdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_coatdocsign_sign");
            //});

            //modelBuilder.Entity<color>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolor);

            //    entity.ToTable("color");

            //    entity.HasIndex(e => e.Guid, "UQ__color__526FE1FF")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcolorgroup, "idx_color_idcolorgroup");

            //    entity.Property(e => e.Idcolor)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcolor");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Color1).HasColumnName("color");

            //    entity.Property(e => e.Colorgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcolorgroup).HasColumnName("idcolorgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numvalue1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue1");

            //    entity.Property(e => e.Numvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue2");

            //    entity.Property(e => e.Numvalue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue3");

            //    entity.Property(e => e.Numvalue4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue4");

            //    entity.Property(e => e.Numvalue5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue5");

            //    entity.Property(e => e.Outername)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("outername");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.ShortnameStrkey)
            //        .HasMaxLength(32)
            //        .HasColumnName("shortname_strkey");

            //    entity.Property(e => e.Windraw).HasColumnName("windraw");

            //    entity.HasOne(d => d.IdcolorgroupNavigation)
            //        .WithMany(p => p.Colors)
            //        .HasForeignKey(d => d.Idcolorgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_color_colorgroup");
            //});

            //modelBuilder.Entity<Coloraccordance>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoloraccordance);

            //    entity.ToTable("coloraccordance");

            //    entity.HasIndex(e => e.Idcolor, "idx_coloraccordance_idcolor");

            //    entity.Property(e => e.Idcoloraccordance)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Fromsource).HasColumnName("fromsource");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Coloraccordances)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_coloraccordance_color");
            //});

            //modelBuilder.Entity<Coloraccordancedetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idcoloraccordancedetail);

            //    entity.ToTable("coloraccordancedetail");

            //    entity.HasIndex(e => e.Idcoloraccordance, "idx_coloraccordancedetail_idcoloraccordance");

            //    entity.HasIndex(e => e.Idcolordest, "idx_coloraccordancedetail_idcolordest");

            //    entity.HasIndex(e => e.Idcolorsource, "idx_coloraccordancedetail_idcolorsource");

            //    entity.HasIndex(e => e.Idcolorsource2, "idx_coloraccordancedetail_idcolorsource2");

            //    entity.Property(e => e.Idcoloraccordancedetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcoloraccordancedetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcoloraccordance).HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Idcolordest).HasColumnName("idcolordest");

            //    entity.Property(e => e.Idcolorsource).HasColumnName("idcolorsource");

            //    entity.Property(e => e.Idcolorsource2).HasColumnName("idcolorsource2");

            //    entity.HasOne(d => d.IdcoloraccordanceNavigation)
            //        .WithMany(p => p.Coloraccordancedetails)
            //        .HasForeignKey(d => d.Idcoloraccordance)
            //        .HasConstraintName("FK_coloraccordancedetail_coloraccordance");

            //    entity.HasOne(d => d.IdcolordestNavigation)
            //        .WithMany(p => p.ColoraccordancedetailIdcolordestNavigations)
            //        .HasForeignKey(d => d.Idcolordest)
            //        .HasConstraintName("FK_coloraccordancedetail_color_dest");

            //    entity.HasOne(d => d.IdcolorsourceNavigation)
            //        .WithMany(p => p.ColoraccordancedetailIdcolorsourceNavigations)
            //        .HasForeignKey(d => d.Idcolorsource)
            //        .HasConstraintName("FK_coloraccordancedetail_color_sorce");

            //    entity.HasOne(d => d.Idcolorsource2Navigation)
            //        .WithMany(p => p.ColoraccordancedetailIdcolorsource2Navigations)
            //        .HasForeignKey(d => d.Idcolorsource2)
            //        .HasConstraintName("FK_coloraccordancedetail_color_source2");
            //});

            //modelBuilder.Entity<Colorgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolorgroup);

            //    entity.ToTable("colorgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__colorgroup__54582A71")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_colorgroup_parentid");

            //    entity.Property(e => e.Idcolorgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcolorgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Colorgroupcustom>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolorgroupcustom);

            //    entity.ToTable("colorgroupcustom");

            //    entity.Property(e => e.Idcolorgroupcustom)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Colorgroupprice>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolorgroupprice);

            //    entity.ToTable("colorgroupprice");

            //    entity.HasIndex(e => e.Idcolorgroupcustom, "idx_colorgroupprice_idcolorgroupcustom");

            //    entity.Property(e => e.Idcolorgroupprice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Combine).HasColumnName("combine");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdcolorgroupcustomNavigation)
            //        .WithMany(p => p.Colorgroupprices)
            //        .HasForeignKey(d => d.Idcolorgroupcustom)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_colorgroupprice_colorgroupcustom");
            //});

            //modelBuilder.Entity<Colorgrouppriceitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolorgrouppriceitem);

            //    entity.ToTable("colorgrouppriceitem");

            //    entity.HasIndex(e => e.Idcolor1, "idx_colorgrouppriceitem_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_colorgrouppriceitem_idcolor2");

            //    entity.HasIndex(e => e.Idcolorgroupprice, "idx_colorgrouppriceitem_idcolorgroupprice");

            //    entity.Property(e => e.Idcolorgrouppriceitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcolorgrouppriceitem");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.ColorgrouppriceitemIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_colorgrouppriceitem_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.ColorgrouppriceitemIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_colorgrouppriceitem_color2");

            //    entity.HasOne(d => d.IdcolorgrouppriceNavigation)
            //        .WithMany(p => p.Colorgrouppriceitems)
            //        .HasForeignKey(d => d.Idcolorgroupprice)
            //        .HasConstraintName("FK_colorgrouppriceitem_colorgroupprice");
            //});

            //modelBuilder.Entity<ColorsTemp>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("colors_temp$");

            //    entity.Property(e => e.Категория).HasMaxLength(255);

            //    entity.Property(e => e.Комментарий).HasMaxLength(255);

            //    entity.Property(e => e.Наименование).HasMaxLength(255);
            //});

            //modelBuilder.Entity<Commongroupgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idcommongroupgrant);

            //    entity.ToTable("commongroupgrant");

            //    entity.Property(e => e.Idcommongroupgrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcommongroupgrant");

            //    entity.Property(e => e.Allow).HasColumnName("allow");

            //    entity.Property(e => e.Dany).HasColumnName("dany");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcommongroup).HasColumnName("idcommongroup");

            //    entity.Property(e => e.Idcommongrouptype).HasColumnName("idcommongrouptype");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");
            //});

            //modelBuilder.Entity<Connection>(entity =>
            //{
            //    entity.HasKey(e => e.Idconnection);

            //    entity.ToTable("connection");

            //    entity.HasIndex(e => e.Idsystemdetail1, "idx_connection_idsystemdetail1");

            //    entity.HasIndex(e => e.Idsystemdetail2, "idx_connection_idsystemdetail2");

            //    entity.HasIndex(e => e.Parentid, "idx_connection_parentid");

            //    entity.Property(e => e.Idconnection)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idconnection");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Idsystemdetail1).HasColumnName("idsystemdetail1");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.HasOne(d => d.Idsystemdetail1Navigation)
            //        .WithMany(p => p.ConnectionIdsystemdetail1Navigations)
            //        .HasForeignKey(d => d.Idsystemdetail1)
            //        .HasConstraintName("FK_connection_systemdetail1");

            //    entity.HasOne(d => d.Idsystemdetail2Navigation)
            //        .WithMany(p => p.ConnectionIdsystemdetail2Navigations)
            //        .HasForeignKey(d => d.Idsystemdetail2)
            //        .HasConstraintName("FK_connection_systemdetail2");
            //});

            //modelBuilder.Entity<Connectortype>(entity =>
            //{
            //    entity.HasKey(e => e.Idconnectortype);

            //    entity.ToTable("connectortype");

            //    entity.Property(e => e.Idconnectortype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idconnectortype");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Constructiontype>(entity =>
            //{
            //    entity.HasKey(e => e.Idconstructiontype);

            //    entity.ToTable("constructiontype");

            //    entity.HasIndex(e => e.Guid, "UQ__constructiontype__5DE194AB")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idversion, "idx_constructiontype_idversion");

            //    entity.Property(e => e.Idconstructiontype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Openview).HasColumnName("openview");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Constructiontypes)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_constructiontype_versions");
            //});

            //modelBuilder.Entity<Constructiontypedetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idconstructiontypedetail);

            //    entity.ToTable("constructiontypedetail");

            //    entity.HasIndex(e => e.Guid, "UQ__constructiontype__5FC9DD1D")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_constructiontypedetail_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelpart, "idx_constructiontypedetail_idmodelpart");

            //    entity.HasIndex(e => e.Idsystem, "idx_constructiontypedetail_idsystem");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_constructiontypedetail_idsystemdetail");

            //    entity.HasIndex(e => e.Idversion, "idx_constructiontypedetail_idversion");

            //    entity.Property(e => e.Idconstructiontypedetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idconstructiontypedetail");

            //    entity.Property(e => e.Alsoimpost).HasColumnName("alsoimpost");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Using).HasColumnName("using");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Constructiontypedetails)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_constructiontypedetail_constructiontype");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Constructiontypedetails)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .HasConstraintName("FK_constructiontypedetail_modelpart");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.Constructiontypedetails)
            //        .HasForeignKey(d => d.Idsystem)
            //        .HasConstraintName("FK_constructiontypedetail_system");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Constructiontypedetails)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_constructiontypedetail_systemdetail");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Constructiontypedetails)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_constructiontypedetail_versions");
            //});

            //modelBuilder.Entity<Customer>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomer)
            //        .HasName("pk_customer");

            //    entity.ToTable("customer");

            //    entity.HasIndex(e => e.Guid, "UQ__customer__1CD2EB5D")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idaddclassification1, "idx_customer_idaddclassification1");

            //    entity.HasIndex(e => e.Idaddclassification2, "idx_customer_idaddclassification2");

            //    entity.HasIndex(e => e.Idaddclassification3, "idx_customer_idaddclassification3");

            //    entity.HasIndex(e => e.Idaddclassification4, "idx_customer_idaddclassification4");

            //    entity.HasIndex(e => e.Idaddclassification5, "idx_customer_idaddclassification5");

            //    entity.HasIndex(e => e.Idaddresslegal, "idx_customer_idaddresslegal");

            //    entity.HasIndex(e => e.Idagreement, "idx_customer_idagreement");

            //    entity.HasIndex(e => e.Idcustomercategory, "idx_customer_idcustomercategory");

            //    entity.HasIndex(e => e.Idcustomerform, "idx_customer_idcustomerform");

            //    entity.HasIndex(e => e.Idcustomergroup, "idx_customer_idcustomergroup");

            //    entity.HasIndex(e => e.Iddestanation, "idx_customer_iddestanation");

            //    entity.HasIndex(e => e.Iddocoper, "idx_customer_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_customer_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_customer_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_customer_idpeople2");

            //    entity.HasIndex(e => e.Idpeople3, "idx_customer_idpeople3");

            //    entity.HasIndex(e => e.Idpeople4, "idx_customer_idpeople4");

            //    entity.HasIndex(e => e.Idseller, "idx_customer_idseller");

            //    entity.HasIndex(e => e.Idsourceinfo, "idx_customer_idsourceinfo");

            //    entity.HasIndex(e => e.Idvalut, "idx_customer_idvalut");

            //    entity.HasIndex(e => e.Parentid, "idx_customer_parentid");

            //    entity.Property(e => e.Idcustomer)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomer")
            //        .HasComment("");

            //    entity.Property(e => e.Account)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account");

            //    entity.Property(e => e.Addbit1).HasColumnName("addbit1");

            //    entity.Property(e => e.Addbit2).HasColumnName("addbit2");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addnum)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addresslegal)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addresslegal")
            //        .HasComment("Юр.адрес");

            //    entity.Property(e => e.Addstr)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Auditorfio)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("auditorfio");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Birthday)
            //        .HasColumnType("datetime")
            //        .HasColumnName("birthday")
            //        .HasComment("Дата рождения");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.Contactpeople)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contactpeople");

            //    entity.Property(e => e.Credit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("credit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Directorfio)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfio");

            //    entity.Property(e => e.Directorfounding)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfounding");

            //    entity.Property(e => e.Directorposition)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("directorposition");

            //    entity.Property(e => e.Discount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount");

            //    entity.Property(e => e.Discount10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount10");

            //    entity.Property(e => e.Discount11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount11");

            //    entity.Property(e => e.Discount12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount12");

            //    entity.Property(e => e.Discount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount2");

            //    entity.Property(e => e.Discount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount3");

            //    entity.Property(e => e.Discount4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount4");

            //    entity.Property(e => e.Discount5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount5");

            //    entity.Property(e => e.Discount6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount6");

            //    entity.Property(e => e.Discount7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount7");

            //    entity.Property(e => e.Discount8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount8");

            //    entity.Property(e => e.Discount9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount9");

            //    entity.Property(e => e.Dtbirth)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtbirth");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Face).HasColumnName("face");

            //    entity.Property(e => e.Firstname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("firstname");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddclassification1).HasColumnName("idaddclassification1");

            //    entity.Property(e => e.Idaddclassification2).HasColumnName("idaddclassification2");

            //    entity.Property(e => e.Idaddclassification3).HasColumnName("idaddclassification3");

            //    entity.Property(e => e.Idaddclassification4).HasColumnName("idaddclassification4");

            //    entity.Property(e => e.Idaddclassification5).HasColumnName("idaddclassification5");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idaddresslegal)
            //        .HasColumnName("idaddresslegal")
            //        .HasComment("Ссылка на юр.адрес из КЛАДР");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idaw).HasColumnName("idaw");

            //    entity.Property(e => e.Idcustomercategory).HasColumnName("idcustomercategory");

            //    entity.Property(e => e.Idcustomerform).HasColumnName("idcustomerform");

            //    entity.Property(e => e.Idcustomergroup).HasColumnName("idcustomergroup");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeople4).HasColumnName("idpeople4");

            //    entity.Property(e => e.Idpeoplecre).HasColumnName("idpeoplecre");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsourceinfo)
            //        .HasColumnName("idsourceinfo")
            //        .HasComment("Ссылка на источник информации");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kaccount)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("kaccount");

            //    entity.Property(e => e.Kpp)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("kpp");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name2")
            //        .HasComment("Альтернативное наименование контрагента");

            //    entity.Property(e => e.Name3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name3")
            //        .HasComment("Краткое наименование контрагента");

            //    entity.Property(e => e.Ogrn)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("ogrn");

            //    entity.Property(e => e.Okato)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("okato");

            //    entity.Property(e => e.Okonh)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okonh");

            //    entity.Property(e => e.Okpo)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okpo");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Passportdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("passportdate")
            //        .HasComment("Дата выдачи паспорт");

            //    entity.Property(e => e.Passportdtissue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("passportdtissue");

            //    entity.Property(e => e.Passportexit)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("passportexit")
            //        .HasComment("Кем выдан паспорт");

            //    entity.Property(e => e.Passportissued)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("passportissued");

            //    entity.Property(e => e.Passportnum)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("passportnum")
            //        .HasComment("Номер паспорта");

            //    entity.Property(e => e.Passportnumber).HasColumnName("passportnumber");

            //    entity.Property(e => e.Passportserial)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("passportserial");

            //    entity.Property(e => e.Passportseries)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("passportseries")
            //        .HasComment("Серия паспорта");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phone2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone2");

            //    entity.Property(e => e.Phonehome)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonehome")
            //        .HasComment("Телефон домашний");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile")
            //        .HasComment("Телефон мобильный");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Web)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("web");

            //    entity.HasOne(d => d.Idaddclassification1Navigation)
            //        .WithMany(p => p.CustomerIdaddclassification1Navigations)
            //        .HasForeignKey(d => d.Idaddclassification1)
            //        .HasConstraintName("FK_customer_addclassification1");

            //    entity.HasOne(d => d.Idaddclassification2Navigation)
            //        .WithMany(p => p.CustomerIdaddclassification2Navigations)
            //        .HasForeignKey(d => d.Idaddclassification2)
            //        .HasConstraintName("FK_customer_addclassification2");

            //    entity.HasOne(d => d.Idaddclassification3Navigation)
            //        .WithMany(p => p.CustomerIdaddclassification3Navigations)
            //        .HasForeignKey(d => d.Idaddclassification3)
            //        .HasConstraintName("FK_customer_addclassification3");

            //    entity.HasOne(d => d.Idaddclassification4Navigation)
            //        .WithMany(p => p.CustomerIdaddclassification4Navigations)
            //        .HasForeignKey(d => d.Idaddclassification4)
            //        .HasConstraintName("FK_customer_addclassification4");

            //    entity.HasOne(d => d.Idaddclassification5Navigation)
            //        .WithMany(p => p.CustomerIdaddclassification5Navigations)
            //        .HasForeignKey(d => d.Idaddclassification5)
            //        .HasConstraintName("FK_customer_addclassification5");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.CustomerIdaddressNavigations)
            //        .HasForeignKey(d => d.Idaddress)
            //        .HasConstraintName("FK_customer_address");

            //    entity.HasOne(d => d.IdaddresslegalNavigation)
            //        .WithMany(p => p.CustomerIdaddresslegalNavigations)
            //        .HasForeignKey(d => d.Idaddresslegal)
            //        .HasConstraintName("FK_customer_address_legal");

            //    entity.HasOne(d => d.IdagreementNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idagreement)
            //        .HasConstraintName("FK_customer_agreement");

            //    entity.HasOne(d => d.IdcustomercategoryNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idcustomercategory)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customer_customercategory");

            //    entity.HasOne(d => d.IdcustomerformNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idcustomerform)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_customer_customerform");

            //    entity.HasOne(d => d.IdcustomergroupNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idcustomergroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customer_customergroup");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .HasConstraintName("FK_customer_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_customer_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.CustomerIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customer_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.CustomerIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_customer_idpeople2");

            //    entity.HasOne(d => d.Idpeople3Navigation)
            //        .WithMany(p => p.CustomerIdpeople3Navigations)
            //        .HasForeignKey(d => d.Idpeople3)
            //        .HasConstraintName("FK_customer_idpeople3");

            //    entity.HasOne(d => d.Idpeople4Navigation)
            //        .WithMany(p => p.CustomerIdpeople4Navigations)
            //        .HasForeignKey(d => d.Idpeople4)
            //        .HasConstraintName("FK_customer_idpeople4");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_customer_seller");

            //    entity.HasOne(d => d.IdsourceinfoNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idsourceinfo)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_customer_sourceinfo");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Customers)
            //        .HasForeignKey(d => d.Idvalut)
            //        .HasConstraintName("FK_customer_idvalut");
            //});

            //modelBuilder.Entity<Customeraccount>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomeraccount);

            //    entity.ToTable("customeraccount");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customeraccount_idcustomer");

            //    entity.Property(e => e.Idcustomeraccount)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomeraccount");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Cs)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("cs");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Ismain).HasColumnName("ismain");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Rs)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("rs");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customeraccounts)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customeraccount_customer");
            //});

            //modelBuilder.Entity<Customeraddress>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomeraddress);

            //    entity.ToTable("customeraddress");

            //    entity.HasIndex(e => e.Idaddress, "idx_customeraddress_idaddress");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customeraddress_idcustomer");

            //    entity.Property(e => e.Idcustomeraddress)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomeraddress");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Customeraddresses)
            //        .HasForeignKey(d => d.Idaddress)
            //        .HasConstraintName("FK_customeraddress_address");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customeraddresses)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customeraddress_customer");
            //});

            //modelBuilder.Entity<Customeragreement>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomeragreement);

            //    entity.ToTable("customeragreement");

            //    entity.HasIndex(e => e.Idagreement, "idx_customeragreement_idagreement");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customeragreement_idcustomer");

            //    entity.Property(e => e.Idcustomeragreement)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomeragreement");

            //    entity.Property(e => e.Agreement)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("agreement");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Ismain).HasColumnName("ismain");

            //    entity.Property(e => e.Seller)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("seller");

            //    entity.HasOne(d => d.IdagreementNavigation)
            //        .WithMany(p => p.Customeragreements)
            //        .HasForeignKey(d => d.Idagreement)
            //        .HasConstraintName("FK_customeragreement_agreement");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customeragreements)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customeragreement_customer");
            //});

            //modelBuilder.Entity<Customercategory>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomercategory);

            //    entity.ToTable("customercategory");

            //    entity.Property(e => e.Idcustomercategory)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomercategory");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Value1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value1");

            //    entity.Property(e => e.Value2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value2");

            //    entity.Property(e => e.Value3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value3");

            //    entity.Property(e => e.Value4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value4");

            //    entity.Property(e => e.Value5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value5");
            //});

            //modelBuilder.Entity<Customerclaim>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerclaim);

            //    entity.ToTable("customerclaim");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerclaim_idcustomer");

            //    entity.Property(e => e.Idcustomerclaim)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerclaim");

            //    entity.Property(e => e.Claimdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("claimdate");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Orderdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("orderdate");

            //    entity.Property(e => e.Ordername)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("ordername");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerclaims)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerclaim_customer");
            //});

            //modelBuilder.Entity<Customerdestanation>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerdestanation);

            //    entity.ToTable("customerdestanation");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerdestanation_idcustomer");

            //    entity.HasIndex(e => e.Iddestanation, "idx_customerdestanation_iddestanation");

            //    entity.Property(e => e.Idcustomerdestanation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerdestanation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerdestanations)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customerdestanation_customer");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Customerdestanations)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_customerdestanation_destanation");
            //});

            //modelBuilder.Entity<Customerdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerdiraction);

            //    entity.ToTable("customerdiraction");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerdiraction_idcustomer");

            //    entity.HasIndex(e => e.Iddiraction, "idx_customerdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_customerdiraction_idpeople");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_customerdiraction_idpeopleedit");

            //    entity.HasIndex(e => e.Idpeopleсreate, "idx_customerdiraction_idpeopleсreate");

            //    entity.Property(e => e.Idcustomerdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerdiractions)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customerdiraction_customer");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Customerdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .HasConstraintName("FK_customerdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.CustomerdiractionIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customerdiraction_people");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.CustomerdiractionIdpeopleeditNavigations)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_customerdiraction_people_edit");

            //    entity.HasOne(d => d.IdpeopleсreateNavigation)
            //        .WithMany(p => p.CustomerdiractionIdpeopleсreateNavigations)
            //        .HasForeignKey(d => d.Idpeopleсreate)
            //        .HasConstraintName("FK_customerdiraction_people_create");
            //});

            //modelBuilder.Entity<Customerdiscard>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerdiscard);

            //    entity.ToTable("customerdiscard");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerdiscard_idcustomer");

            //    entity.HasIndex(e => e.Iddiscard, "idx_customerdiscard_iddiscard");

            //    entity.Property(e => e.Idcustomerdiscard)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerdiscard");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerdiscards)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerdiscard_customer");

            //    entity.HasOne(d => d.IddiscardNavigation)
            //        .WithMany(p => p.Customerdiscards)
            //        .HasForeignKey(d => d.Iddiscard)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerdiscard_discard");
            //});

            //modelBuilder.Entity<Customerevent>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerevent);

            //    entity.ToTable("customerevent");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerevent_idcustomer");

            //    entity.Property(e => e.Idcustomerevent)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerevent");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerevents)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerevent_customer");
            //});

            //modelBuilder.Entity<Customerfile>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerfile);

            //    entity.ToTable("customerfile");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerfile_idcustomer");

            //    entity.Property(e => e.Idcustomerfile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerfiles)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerfile_customer");
            //});

            //modelBuilder.Entity<Customerform>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerform);

            //    entity.ToTable("customerform");

            //    entity.Property(e => e.Idcustomerform)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerform");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<Customergroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomergroup)
            //        .HasName("pk_customergroup");

            //    entity.ToTable("customergroup");

            //    entity.HasIndex(e => e.Parentid, "idx_customergroup_parentid");

            //    entity.Property(e => e.Idcustomergroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomergroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaw).HasColumnName("idaw");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Customergroupgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomergroupgrant);

            //    entity.ToTable("customergroupgrant");

            //    entity.HasComment("Таблица прав на группы документов");

            //    entity.Property(e => e.Idcustomergroupgrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomergroupgrant")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Allow)
            //        .HasColumnName("allow")
            //        .HasComment("Разрешить доступ");

            //    entity.Property(e => e.Dany)
            //        .HasColumnName("dany")
            //        .HasComment("Запретить доступ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomergroup)
            //        .HasColumnName("idcustomergroup")
            //        .HasComment("Группа контрагентов");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Пользователь");

            //    entity.Property(e => e.Idpeoplegroup)
            //        .HasColumnName("idpeoplegroup")
            //        .HasComment("Группа пользователей");
            //});

            //modelBuilder.Entity<Customerperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerpeople);

            //    entity.ToTable("customerpeople");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerpeople_idcustomer");

            //    entity.HasIndex(e => e.Idpeople, "idx_customerpeople_idpeople");

            //    entity.HasIndex(e => e.Idpeoplepost, "idx_customerpeople_idpeoplepost");

            //    entity.Property(e => e.Idcustomerpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerpeople");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Adddt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtreg)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtreg");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplepost)
            //        .HasColumnName("idpeoplepost")
            //        .HasComment("Должность сотрудника");

            //    entity.Property(e => e.Ismain)
            //        .HasColumnName("ismain")
            //        .HasComment("Основной сотрудник");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos)
            //        .HasColumnName("numpos")
            //        .HasComment("Номер по порядку");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerpeople)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerpeople_customer");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Customerpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customerpeople_people");

            //    entity.HasOne(d => d.IdpeoplepostNavigation)
            //        .WithMany(p => p.Customerpeople)
            //        .HasForeignKey(d => d.Idpeoplepost)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_customerpeople_peoplepost");
            //});

            //modelBuilder.Entity<Customerplan>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerplan);

            //    entity.ToTable("customerplan");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerplan_idcustomer");

            //    entity.Property(e => e.Idcustomerplan)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerplan");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerplans)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerplan_customer");
            //});

            //modelBuilder.Entity<Customerpricechange>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerpricechange);

            //    entity.ToTable("customerpricechange");

            //    entity.HasComment("Скидки\\наценки контрагентов");

            //    entity.HasIndex(e => e.Guid, "UQ__customerpricecha__19025A79")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerpricechange_idcustomer");

            //    entity.HasIndex(e => e.Idpricechange, "idx_customerpricechange_idpricechange");

            //    entity.HasIndex(e => e.Idseller, "idx_customerpricechange_idseller");

            //    entity.Property(e => e.Idcustomerpricechange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerpricechange")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Enddate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("enddate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор");

            //    entity.Property(e => e.Idcustomer)
            //        .HasColumnName("idcustomer")
            //        .HasComment("Ссылка на контрагента");

            //    entity.Property(e => e.Idpricechange)
            //        .HasColumnName("idpricechange")
            //        .HasComment("Ссылка на скидку\\наценку");

            //    entity.Property(e => e.Idseller)
            //        .HasColumnName("idseller")
            //        .HasComment("Ссылка на продавца");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1")
            //        .HasComment("Значение скидки\\наценки");

            //    entity.Property(e => e.Startdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("startdate");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerpricechanges)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerpricechange_customer");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Customerpricechanges)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerpricechange_pricechange");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Customerpricechanges)
            //        .HasForeignKey(d => d.Idseller)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customerpricechange_seller");
            //});

            //modelBuilder.Entity<Customerpricechangehistory>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerpricechangehistory);

            //    entity.ToTable("customerpricechangehistory");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerpricechangehistory_idcustomer");

            //    entity.HasIndex(e => e.Idcustomerpricechange, "idx_customerpricechangehistory_idcustomerpricechange");

            //    entity.HasIndex(e => e.Idpeople, "idx_customerpricechangehistory_idpeople");

            //    entity.HasIndex(e => e.Idpricechange, "idx_customerpricechangehistory_idpricechange");

            //    entity.HasIndex(e => e.Idseller, "idx_customerpricechangehistory_idseller");

            //    entity.Property(e => e.Idcustomerpricechangehistory)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerpricechangehistory");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricechange).HasColumnName("idcustomerpricechange");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerpricechangehistories)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customerpricechangehistory_customer");

            //    entity.HasOne(d => d.IdcustomerpricechangeNavigation)
            //        .WithMany(p => p.Customerpricechangehistories)
            //        .HasForeignKey(d => d.Idcustomerpricechange)
            //        .HasConstraintName("FK_customerpricechangehistory_customerpricechange");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Customerpricechangehistories)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customerpricechangehistory_people");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Customerpricechangehistories)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .HasConstraintName("FK_customerpricechangehistory_pricechange");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Customerpricechangehistories)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_customerpricechangehistory_seller");
            //});

            //modelBuilder.Entity<Customerpricepolicy>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerpricepolicy);

            //    entity.ToTable("customerpricepolicy");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerpricepolicy_idcustomer");

            //    entity.HasIndex(e => e.Idpricechange, "idx_customerpricepolicy_idpricechange");

            //    entity.Property(e => e.Idcustomerpricepolicy)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerpricepolicy");

            //    entity.Property(e => e.Creditlimit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("creditlimit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtexpiration)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtexpiration");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price10");

            //    entity.Property(e => e.Price11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price11");

            //    entity.Property(e => e.Price12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price12");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Price8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price8");

            //    entity.Property(e => e.Price9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price9");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerpricepolicies)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customerpricepolicy_customer");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Customerpricepolicies)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .HasConstraintName("FK_customerpricepolicy_pricechange");
            //});

            //modelBuilder.Entity<Customerpricepolicyhistory>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerpricepolicyhistory);

            //    entity.ToTable("customerpricepolicyhistory");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customerpricepolicyhistory_idcustomer");

            //    entity.HasIndex(e => e.Idpeople, "idx_customerpricepolicyhistory_idpeople");

            //    entity.HasIndex(e => e.Idpricechange, "idx_customerpricepolicyhistory_idpricechange");

            //    entity.Property(e => e.Idcustomerpricepolicyhistory)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerpricepolicyhistory");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Creditlimit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("creditlimit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtexpiration)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtexpiration");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricepolicy).HasColumnName("idcustomerpricepolicy");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price10");

            //    entity.Property(e => e.Price11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price11");

            //    entity.Property(e => e.Price12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price12");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Price8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price8");

            //    entity.Property(e => e.Price9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price9");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customerpricepolicyhistories)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_customerpricepolicyhistory_customer");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Customerpricepolicyhistories)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customerpricepolicyhistory_people");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Customerpricepolicyhistories)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .HasConstraintName("FK_customerpricepolicyhistory_pricechange");
            //});

            //modelBuilder.Entity<Customerrel>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerrel);

            //    entity.ToTable("customerrel");

            //    entity.HasIndex(e => new { e.Idcustomerparent, e.Idcustomerchild }, "customerrel_unique")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcustomertyperel, "idx_customerrel_idcustomertyperel");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_customerrel_idpeopleedit");

            //    entity.Property(e => e.Idcustomerrel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerrel");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Idcustomerchild).HasColumnName("idcustomerchild");

            //    entity.Property(e => e.Idcustomerparent).HasColumnName("idcustomerparent");

            //    entity.Property(e => e.Idcustomertyperel).HasColumnName("idcustomertyperel");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Ismaster).HasColumnName("ismaster");

            //    entity.HasOne(d => d.IdcustomerchildNavigation)
            //        .WithMany(p => p.CustomerrelIdcustomerchildNavigations)
            //        .HasForeignKey(d => d.Idcustomerchild)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_customerrel_customer_child");

            //    entity.HasOne(d => d.IdcustomerparentNavigation)
            //        .WithMany(p => p.CustomerrelIdcustomerparentNavigations)
            //        .HasForeignKey(d => d.Idcustomerparent)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_customerrel_customer_parent");

            //    entity.HasOne(d => d.IdcustomertyperelNavigation)
            //        .WithMany(p => p.Customerrels)
            //        .HasForeignKey(d => d.Idcustomertyperel)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_customerrel_customertyperel");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.Customerrels)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_customerrel_people");
            //});

            //modelBuilder.Entity<Customerrelation>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomerrelation);

            //    entity.ToTable("customerrelation");

            //    entity.Property(e => e.Idcustomerrelation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomerrelation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtrel)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtrel");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idchild).HasColumnName("idchild");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");
            //});

            //modelBuilder.Entity<Customersign>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomersign);

            //    entity.ToTable("customersign");

            //    entity.HasIndex(e => e.Idcustomer, "idx_customersign_idcustomer");

            //    entity.HasIndex(e => e.Idpeople, "idx_customersign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_customersign_idsign");

            //    entity.Property(e => e.Idcustomersign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomersign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Customersigns)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_customersign_customer");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Customersigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_customersign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Customersigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_customersign_sign");
            //});

            //modelBuilder.Entity<Customertyperel>(entity =>
            //{
            //    entity.HasKey(e => e.Idcustomertyperel);

            //    entity.ToTable("customertyperel");

            //    entity.Property(e => e.Idcustomertyperel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcustomertyperel");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture).HasColumnName("picture");
            //});

            //modelBuilder.Entity<Delivdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdoc)
            //        .HasName("PK_delivdoc_1");

            //    entity.ToTable("delivdoc");

            //    entity.HasIndex(e => e.Idaddress, "idx_delivdoc_idaddress");

            //    entity.HasIndex(e => e.Idcar, "idx_delivdoc_idcar");

            //    entity.HasIndex(e => e.Idcustomer, "idx_delivdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddelivdocgroup, "idx_delivdoc_iddelivdocgroup");

            //    entity.HasIndex(e => e.Iddestanation, "idx_delivdoc_iddestanation");

            //    entity.HasIndex(e => e.Iddocoper, "idx_delivdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_delivdoc_iddocstate");

            //    entity.HasIndex(e => e.Idmanufactdoccar, "idx_delivdoc_idmanufactdoccar");

            //    entity.HasIndex(e => e.Idorder, "idx_delivdoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_delivdoc_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_delivdoc_idpeople2");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_delivdoc_idstoredepart");

            //    entity.HasIndex(e => e.Idtariff, "idx_delivdoc_idtariff");

            //    entity.HasIndex(e => e.Parentid, "idx_delivdoc_parentid");

            //    entity.HasIndex(e => e.Dtcreate, "ix_da_dtcreateIncludes")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Dtdoc, "ix_da_dtdoc");

            //    entity.Property(e => e.Iddelivdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact")
            //        .HasComment("Контактное лицо");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddelivdocgroup).HasColumnName("iddelivdocgroup");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdoccar).HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeopledrv).HasColumnName("idpeopledrv");

            //    entity.Property(e => e.Idpeopleexp).HasColumnName("idpeopleexp");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idtariff).HasColumnName("idtariff");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone")
            //        .HasComment("Телефон");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Ride).HasColumnName("ride");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idaddress)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_address");

            //    entity.HasOne(d => d.IdcarNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idcar)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_car");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_customer");

            //    entity.HasOne(d => d.IddelivdocgroupNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Iddelivdocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdoc_delivdocgroup");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_destanation");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_delivdoc_docstate");

            //    entity.HasOne(d => d.IdmanufactdoccarNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idmanufactdoccar)
            //        .HasConstraintName("FK_delivdoc_manufactdoccar");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.DelivdocIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdoc_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.DelivdocIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_delivdoc_people1");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_delivdoc_storedepart");

            //    entity.HasOne(d => d.IdtariffNavigation)
            //        .WithMany(p => p.Delivdocs)
            //        .HasForeignKey(d => d.Idtariff)
            //        .HasConstraintName("FK_delivdoc_idtariff");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_delivdoc_parentid");
            //});

            //modelBuilder.Entity<Delivdocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocdiraction);

            //    entity.ToTable("delivdocdiraction");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_delivdocdiraction_iddelivdoc");

            //    entity.HasIndex(e => e.Iddiraction, "idx_delivdocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_delivdocdiraction_idpeople");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_delivdocdiraction_idpeopleedit");

            //    entity.Property(e => e.Iddelivdocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.Delivdocdiractions)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocdiraction_delivdoc");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Delivdocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.DelivdocdiractionIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdocdiraction_people");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.DelivdocdiractionIdpeopleeditNavigations)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_delivdocdiraction_people2");
            //});

            //modelBuilder.Entity<Delivdocdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocdiractionpeople);

            //    entity.ToTable("delivdocdiractionpeople");

            //    entity.HasIndex(e => e.Iddelivdocdiraction, "idx_delivdocdiractionpeople_iddelivdocdiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_delivdocdiractionpeople_idpeople");

            //    entity.Property(e => e.Iddelivdocdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocdiraction).HasColumnName("iddelivdocdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IddelivdocdiractionNavigation)
            //        .WithMany(p => p.Delivdocdiractionpeople)
            //        .HasForeignKey(d => d.Iddelivdocdiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocdiractionpeople_delivdocdiraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Delivdocdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_delivdocdiractionpeople_people");
            //});

            //modelBuilder.Entity<Delivdocfile>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocfile);

            //    entity.ToTable("delivdocfile");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_delivdocfile_iddelivdoc");

            //    entity.Property(e => e.Iddelivdocfile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtfile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfile");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.Delivdocfiles)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocfile_delivdoc");
            //});

            //modelBuilder.Entity<Delivdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocgroup)
            //        .HasName("PK_delivdoc");

            //    entity.ToTable("delivdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_delivdocgroup_parentid");

            //    entity.Property(e => e.Iddelivdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Delivdoclog>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdoclog);

            //    entity.ToTable("delivdoclog");

            //    entity.Property(e => e.Iddelivdoclog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdoclog");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(250)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");
            //});

            //modelBuilder.Entity<Delivdocperson>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocpeople);

            //    entity.ToTable("delivdocpeople");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_delivdocpeople_iddelivdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_delivdocpeople_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_delivdocpeople_idpeople2");

            //    entity.Property(e => e.Iddelivdocpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocpeople");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt2");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.Delivdocpeople)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocpeople_delivdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.DelivdocpersonIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdocpeople_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.DelivdocpersonIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_delivdocpeople_people1");
            //});

            //modelBuilder.Entity<Delivdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocpos);

            //    entity.ToTable("delivdocpos");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_delivdocpos_iddelivdoc")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idgood, "idx_delivdocpos_idgood")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_delivdocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idmodelcalc, "idx_delivdocpos_idmodelcalc")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idorder, "idx_delivdocpos_idorder");

            //    entity.HasIndex(e => e.Idordergood, "idx_delivdocpos_idordergood")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "idx_delivdocpos_idorderitem");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_delivdocpos_idstoredoc");

            //    entity.Property(e => e.Iddelivdocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idbox).HasColumnName("idbox");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocpos_delivdoc");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocpos_good");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_delivdocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdmodelcalcNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idmodelcalc)
            //        .HasConstraintName("FK_delivdocpos_modelcalc");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_delivdocpos_order");

            //    entity.HasOne(d => d.IdordergoodNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idordergood)
            //        .HasConstraintName("FK_delivdocpos_ordergood");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocpos_orderitem");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Delivdocpos)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .HasConstraintName("FK_delivdocpos_storedoc");
            //});

            //modelBuilder.Entity<Delivdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocsign);

            //    entity.ToTable("delivdocsign");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_delivdocsign_delivdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_delivdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_delivdocsign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_delivdocsign_idsignvalue");

            //    entity.Property(e => e.Iddelivdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.Delivdocsigns)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocsign_delivdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Delivdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_delivdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Delivdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .HasConstraintName("FK_delivdocsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Delivdocsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_delivdocsign_signvalue");
            //});

            //modelBuilder.Entity<Department>(entity =>
            //{
            //    entity.HasKey(e => e.Iddepartment);

            //    entity.ToTable("department");

            //    entity.HasComment("Таблица отделов");

            //    entity.HasIndex(e => e.Parentid, "idx_department_parentid");

            //    entity.Property(e => e.Iddepartment)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddepartment")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint")
            //        .HasComment("Дополнительное число");

            //    entity.Property(e => e.Addint2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint2");

            //    entity.Property(e => e.Addint3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint3");

            //    entity.Property(e => e.Addint4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint4");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(1024)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr")
            //        .HasComment("Дополнительная строка");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления записи");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.IddepartmentFramer).HasColumnName("iddepartmentFramer");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Нименование отдела");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");
            //});

            //modelBuilder.Entity<Departmentmember>(entity =>
            //{
            //    entity.HasKey(e => e.Iddepartmentmember);

            //    entity.ToTable("departmentmember");

            //    entity.HasComment("Состав подразделений");

            //    entity.HasIndex(e => e.Iddepartment, "idx_departmentmember_iddepartment");

            //    entity.HasIndex(e => e.Idpeople, "idx_departmentmember_idpeople");

            //    entity.Property(e => e.Iddepartmentmember)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddepartmentmember")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddepartment)
            //        .HasColumnName("iddepartment")
            //        .HasComment("Ссылка на подразделение");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Ссылка на сотрудника");

            //    entity.HasOne(d => d.IddepartmentNavigation)
            //        .WithMany(p => p.Departmentmembers)
            //        .HasForeignKey(d => d.Iddepartment)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_departmentmember_department");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Departmentmembers)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_departmentmember_people");
            //});

            //modelBuilder.Entity<Designerevent>(entity =>
            //{
            //    entity.HasKey(e => e.Iddesignerevent);

            //    entity.ToTable("designerevent");

            //    entity.HasIndex(e => e.Guid, "UQ__designerevent__0F78F03F")
            //        .IsUnique();

            //    entity.Property(e => e.Iddesignerevent)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddesignerevent");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");
            //});

            //modelBuilder.Entity<Destanation>(entity =>
            //{
            //    entity.HasKey(e => e.Iddestanation);

            //    entity.ToTable("destanation");

            //    entity.HasIndex(e => e.Guid, "UQ__destanation__0D90A7CD")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idpreference, "idx_destanation_idpreference");

            //    entity.HasIndex(e => e.Idproductionsite, "idx_destanation_idproductionsite");

            //    entity.HasIndex(e => e.Idpyramid, "idx_destanation_idpyramid");

            //    entity.HasIndex(e => e.Idroute, "idx_destanation_idroute");

            //    entity.Property(e => e.Iddestanation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddestanation");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Destanationgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanationgroup");

            //    entity.Property(e => e.Factory)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("factory");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Maxpyr).HasColumnName("maxpyr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pyrgroup).HasColumnName("pyrgroup");

            //    entity.Property(e => e.Pyrgrouping).HasColumnName("pyrgrouping");

            //    entity.Property(e => e.Transit).HasColumnName("transit");

            //    entity.HasOne(d => d.IdpreferenceNavigation)
            //        .WithMany(p => p.Destanations)
            //        .HasForeignKey(d => d.Idpreference)
            //        .HasConstraintName("FK_destanation_preference");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Destanations)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_destanation_productionsite");

            //    entity.HasOne(d => d.Idpyram)
            //        .WithMany(p => p.Destanations)
            //        .HasForeignKey(d => d.Idpyramid)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_destanation_pyramid");

            //    entity.HasOne(d => d.IdrouteNavigation)
            //        .WithMany(p => p.Destanations)
            //        .HasForeignKey(d => d.Idroute)
            //        .HasConstraintName("FK_destanation_route");
            //});

            //modelBuilder.Entity<Destanationcustomer>(entity =>
            //{
            //    entity.HasKey(e => e.Iddestanationcustomer);

            //    entity.ToTable("destanationcustomer");

            //    entity.HasIndex(e => e.Idcustomer, "idx_destanationcustomer_idcustomer");

            //    entity.HasIndex(e => e.Iddestanation, "idx_destanationcustomer_iddestanation");

            //    entity.Property(e => e.Iddestanationcustomer)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddestanationcustomer");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Destanationcustomers)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_destanationcustomer_customer");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Destanationcustomers)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_destanationcustomer_destanation");
            //});

            //modelBuilder.Entity<Destanationplan>(entity =>
            //{
            //    entity.HasKey(e => e.Iddestanationplan);

            //    entity.ToTable("destanationplan");

            //    entity.HasIndex(e => new { e.Dt, e.Iddestanation }, "uniq_destanationplan")
            //        .IsUnique();

            //    entity.Property(e => e.Iddestanationplan).HasColumnName("iddestanationplan");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("date")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Destanationplans)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_destanationplan_destanation");
            //});

            //modelBuilder.Entity<Destanationroute>(entity =>
            //{
            //    entity.HasKey(e => e.Iddestanationroute);

            //    entity.ToTable("destanationroute");

            //    entity.HasIndex(e => e.Iddestanation, "idx_destanationroute_iddestanation");

            //    entity.HasIndex(e => e.Idroute, "idx_destanationroute_idroute");

            //    entity.Property(e => e.Iddestanationroute)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddestanationroute");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Planmileage)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("planmileage");

            //    entity.Property(e => e.Plantime)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("plantime");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Destanationroutes)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_destanationroute_destanation");

            //    entity.HasOne(d => d.IdrouteNavigation)
            //        .WithMany(p => p.Destanationroutes)
            //        .HasForeignKey(d => d.Idroute)
            //        .HasConstraintName("FK_destanationroute_route");
            //});

            //modelBuilder.Entity<Destanationseller>(entity =>
            //{
            //    entity.HasKey(e => e.Iddestanationseller);

            //    entity.ToTable("destanationseller");

            //    entity.HasIndex(e => e.Iddestanation, "idx_destanationseller_iddestanation");

            //    entity.HasIndex(e => e.Idseller, "idx_destanationseller_idseller");

            //    entity.Property(e => e.Iddestanationseller)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddestanationseller");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Destanationsellers)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_destanationseller_destanationseller");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Destanationsellers)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_destanationseller_seller");
            //});

            //modelBuilder.Entity<Diraction>(entity =>
            //{
            //    entity.HasKey(e => e.Iddiraction)
            //        .HasName("pk_diraction");

            //    entity.ToTable("diraction");

            //    entity.HasIndex(e => e.Guid, "UQ__diraction__2879A833")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Iddiractiongroup, "idx_diraction_iddiractiongroup");

            //    entity.Property(e => e.Iddiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddiraction");

            //    entity.Property(e => e.Addtooptimdoc)
            //        .HasColumnName("addtooptimdoc")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Autosave).HasColumnName("autosave");

            //    entity.Property(e => e.Autosave2).HasColumnName("autosave2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddiractiongroup).HasColumnName("iddiractiongroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IddiractiongroupNavigation)
            //        .WithMany(p => p.Diractions)
            //        .HasForeignKey(d => d.Iddiractiongroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_diraction_diractiongroup");
            //});

            //modelBuilder.Entity<Diractiongrant>(entity =>
            //{
            //    entity.HasKey(e => e.Iddiractiongrant);

            //    entity.ToTable("diractiongrant");

            //    entity.HasComment("Права на этапы");

            //    entity.HasIndex(e => e.Iddiraction, "idx_diractiongrant_iddiraction");

            //    entity.HasIndex(e => e.Iddocoper, "idx_diractiongrant_iddocoper");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_diractiongrant_idpeoplegroup");

            //    entity.Property(e => e.Iddiractiongrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddiractiongrant")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddiraction)
            //        .HasColumnName("iddiraction")
            //        .HasComment("Ссылка на этап");

            //    entity.Property(e => e.Iddocoper)
            //        .HasColumnName("iddocoper")
            //        .HasComment("Ссылка на тип документа");

            //    entity.Property(e => e.Idpeoplegroup)
            //        .HasColumnName("idpeoplegroup")
            //        .HasComment("Ссылка на группу пользователей");

            //    entity.Property(e => e.Isadd)
            //        .HasColumnName("isadd")
            //        .HasComment("Права на добавление");

            //    entity.Property(e => e.Iseditcomment)
            //        .HasColumnName("iseditcomment")
            //        .HasComment("Права на редактирование комментария");

            //    entity.Property(e => e.Iseditexecutor)
            //        .HasColumnName("iseditexecutor")
            //        .HasComment("Права на редактирование исполнителей");

            //    entity.Property(e => e.Iseditfact)
            //        .HasColumnName("iseditfact")
            //        .HasComment("Права на редактирование фактической даты");

            //    entity.Property(e => e.Iseditplan)
            //        .HasColumnName("iseditplan")
            //        .HasComment("Права на редактирование плановой даты");

            //    entity.Property(e => e.Isremove)
            //        .HasColumnName("isremove")
            //        .HasComment("Права на удаление");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Diractiongrants)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_diractiongrant_diraction");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Diractiongrants)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_diractiongrant_docoper");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Diractiongrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_diractiongrant_peoplegroup");
            //});

            //modelBuilder.Entity<Diractiongroup>(entity =>
            //{
            //    entity.HasKey(e => e.Iddiractiongroup);

            //    entity.ToTable("diractiongroup");

            //    entity.HasIndex(e => e.Guid, "UQ__diractiongroup__09C016E9")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_diractiongroup_parentid");

            //    entity.Property(e => e.Iddiractiongroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddiractiongroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Discard>(entity =>
            //{
            //    entity.HasKey(e => e.Iddiscard);

            //    entity.ToTable("discard");

            //    entity.HasIndex(e => e.Iddiscardgroup, "idx_discard_iddiscardgroup");

            //    entity.HasIndex(e => e.Idpeople, "idx_discard_idpeople");

            //    entity.Property(e => e.Iddiscard)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddiscard");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddiscardgroup).HasColumnName("iddiscardgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Inactivedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("inactivedate");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IddiscardgroupNavigation)
            //        .WithMany(p => p.Discards)
            //        .HasForeignKey(d => d.Iddiscardgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_discard_discardgroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Discards)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_discard_people");
            //});

            //modelBuilder.Entity<Discardgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Iddiscardgroup);

            //    entity.ToTable("discardgroup");

            //    entity.HasComment("Группы дисконтных карт");

            //    entity.HasIndex(e => e.Parentid, "idx_discardgroup_parentid");

            //    entity.Property(e => e.Iddiscardgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddiscardgroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Удалена");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование группы");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родителя");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc")
            //        .HasComment("Процент скидки");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm")
            //        .HasComment("Сумма скидки");
            //});

            //modelBuilder.Entity<Docappearance>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocappearance);

            //    entity.ToTable("docappearance");

            //    entity.Property(e => e.Iddocappearance)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocappearance");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Tablename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("tablename");
            //});

            //modelBuilder.Entity<Docgroupgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocgroupgrant);

            //    entity.ToTable("docgroupgrant");

            //    entity.HasComment("Таблица прав на группы документов");

            //    entity.HasIndex(e => e.Iddocappearance, "idx_docgroupgrant_iddocappearance");

            //    entity.Property(e => e.Iddocgroupgrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocgroupgrant")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Allow)
            //        .HasColumnName("allow")
            //        .HasComment("Разрешить доступ");

            //    entity.Property(e => e.Dany)
            //        .HasColumnName("dany")
            //        .HasComment("Запретить доступ");

            //    entity.Property(e => e.Iddocappearance)
            //        .HasColumnName("iddocappearance")
            //        .HasComment("Вид документа");

            //    entity.Property(e => e.Iddocgroup).HasColumnName("iddocgroup");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Пользователь");

            //    entity.Property(e => e.Idpeoplegroup)
            //        .HasColumnName("idpeoplegroup")
            //        .HasComment("Группа пользователей");

            //    entity.HasOne(d => d.IddocappearanceNavigation)
            //        .WithMany(p => p.Docgroupgrants)
            //        .HasForeignKey(d => d.Iddocappearance)
            //        .HasConstraintName("FK_docgroupgrant_docappearance");
            //});

            //modelBuilder.Entity<Doclock>(entity =>
            //{
            //    entity.HasKey(e => e.Iddoclock);

            //    entity.ToTable("doclock");

            //    entity.HasIndex(e => e.Iddoc, "idx_doclock_iddoc");

            //    entity.HasIndex(e => e.Iddocoper, "idx_doclock_iddocoper");

            //    entity.HasIndex(e => e.Idpeople, "idx_doclock_idpeople");

            //    entity.Property(e => e.Iddoclock)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddoclock");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dtlock)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlock");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Doclocks)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_doclock_docoper");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Doclocks)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_doclock_people");
            //});

            //modelBuilder.Entity<Docoper>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocoper)
            //        .HasName("pk_docoper");

            //    entity.ToTable("docoper");

            //    entity.HasIndex(e => e.Guid, "UQ__docoper__2A61F0A5")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idproductionsite, "idx_docoper_idproductionsite");

            //    entity.HasIndex(e => e.Iddocappearance, "jkkknj");

            //    entity.Property(e => e.Iddocoper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocoper");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Agreenumpos).HasColumnName("agreenumpos");

            //    entity.Property(e => e.Agreeprefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreeprefix");

            //    entity.Property(e => e.Agreesuffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreesuffix");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Docgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docgroup");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddoc1C)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("iddoc1C");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Prefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("prefix");

            //    entity.Property(e => e.Storetyp).HasColumnName("storetyp");

            //    entity.Property(e => e.Suffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("suffix");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Docopers)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_docoper_productionsite");
            //});

            //modelBuilder.Entity<Docopergrant>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocopergrant);

            //    entity.ToTable("docopergrant");

            //    entity.HasIndex(e => e.Iddocoper, "idx_docopergrant_iddocoper");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_docopergrant_idpeoplegroup");

            //    entity.Property(e => e.Iddocopergrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocopergrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Docopergrants)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docopergrant_docoper");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Docopergrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docopergrant_peoplegroup");
            //});

            //modelBuilder.Entity<Docrelation>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocrelation);

            //    entity.ToTable("docrelation");

            //    entity.HasComment("Таблица связей между документами");

            //    entity.HasIndex(e => new { e.Iddocappearancechild, e.Idchilddoc }, "IX_docrelation_Child");

            //    entity.HasIndex(e => new { e.Iddocappearanceparent, e.Idparentdoc }, "IX_docrelation_Parent");

            //    entity.HasIndex(e => new { e.Iddocappearanceparent, e.Iddocappearancechild }, "docrelation2");

            //    entity.HasIndex(e => new { e.Idchilddoc, e.Deleted }, "ix_da_docrelation_idchilddoc_deleted");

            //    entity.HasIndex(e => e.Idparentdoc, "ix_docrelation_idparentdoc_includes")
            //        .HasFillFactor(100);

            //    entity.Property(e => e.Iddocrelation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocrelation")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления связи");

            //    entity.Property(e => e.Idchilddoc)
            //        .HasColumnName("idchilddoc")
            //        .HasComment("Ссылка на документ потомок");

            //    entity.Property(e => e.Iddocappearancechild)
            //        .HasColumnName("iddocappearancechild")
            //        .HasComment("Вид документа потомка");

            //    entity.Property(e => e.Iddocappearanceparent)
            //        .HasColumnName("iddocappearanceparent")
            //        .HasComment("Вид документа родителя");

            //    entity.Property(e => e.Idparentdoc)
            //        .HasColumnName("idparentdoc")
            //        .HasComment("Ссылка на документ родитель");
            //});

            //modelBuilder.Entity<Docscript>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocscript);

            //    entity.ToTable("docscript");

            //    entity.HasIndex(e => e.Iddocscriptgroup, "idx_docscript_iddocscriptgroup");

            //    entity.Property(e => e.Iddocscript)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocscript");

            //    entity.Property(e => e.Activescript).HasColumnName("activescript");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Iddocscriptgroup).HasColumnName("iddocscriptgroup");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Name)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Scriptgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("scriptgroup");

            //    entity.Property(e => e.Tomainmenu).HasColumnName("tomainmenu");

            //    entity.Property(e => e.Tomenu).HasColumnName("tomenu");

            //    entity.Property(e => e.Tonopapermenu).HasColumnName("tonopapermenu");

            //    entity.HasOne(d => d.IddocscriptgroupNavigation)
            //        .WithMany(p => p.Docscripts)
            //        .HasForeignKey(d => d.Iddocscriptgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docscript_docscriptgroup");
            //});

            //modelBuilder.Entity<Docscriptgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocscriptgrant);

            //    entity.ToTable("docscriptgrant");

            //    entity.HasIndex(e => e.Iddocappearance, "idx_docscriptgrant_iddocappearance");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_docscriptgrant_idpeoplegroup");

            //    entity.Property(e => e.Iddocscriptgrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocscriptgrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocscript).HasColumnName("iddocscript");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.HasOne(d => d.IddocappearanceNavigation)
            //        .WithMany(p => p.Docscriptgrants)
            //        .HasForeignKey(d => d.Iddocappearance)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docscriptgrant_doсoper");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Docscriptgrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docscriptgrant_peoplegroup");
            //});

            //modelBuilder.Entity<Docscriptgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocscriptgroup);

            //    entity.ToTable("docscriptgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__docscriptgroup__39A43435")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_docscriptgroup_parentid");

            //    entity.Property(e => e.Iddocscriptgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocscriptgroup");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos)
            //        .HasColumnName("numpos")
            //        .HasComment("Номер по порядку");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Docsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("docsign");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocsign).HasColumnName("iddocsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<Docstate>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocstate);

            //    entity.ToTable("docstate");

            //    entity.HasIndex(e => e.Iddocappearance, "idx_docstate_iddocappearance");

            //    entity.Property(e => e.Iddocstate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocstate");

            //    entity.Property(e => e.Beginstate).HasColumnName("beginstate");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Endstate).HasColumnName("endstate");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IddocappearanceNavigation)
            //        .WithMany(p => p.Docstates)
            //        .HasForeignKey(d => d.Iddocappearance)
            //        .HasConstraintName("FK_docstate_docappearance");
            //});

            //modelBuilder.Entity<Docwork>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocwork);

            //    entity.ToTable("docwork");

            //    entity.HasIndex(e => new { e.Iddocappearance, e.Iddoc }, "IX_docwork_compare");

            //    entity.HasIndex(e => new { e.Iddocappearance, e.Iddocitem }, "IX_docwork_item_compare");

            //    entity.HasIndex(e => e.Iddoc, "idx_docwork_iddoc");

            //    entity.HasIndex(e => e.Idwork, "idx_docwork_idwork");

            //    entity.Property(e => e.Iddocwork)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocwork");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasComment("Дата и время создания");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата и время изменения");

            //    entity.Property(e => e.Dtwork)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtwork");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocitem)
            //        .HasColumnName("iddocitem")
            //        .HasComment("Ссылка на позицию документа");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Ссылка на сотрудника создавшего работу");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Ссылка на сотрудника изменившего работу");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Worktime)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("worktime");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Docworks)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_docwork_people");

            //    entity.HasOne(d => d.IdworkNavigation)
            //        .WithMany(p => p.Docworks)
            //        .HasForeignKey(d => d.Idwork)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_docwork_work");

            //    entity.HasOne(d => d.IdworkoperNavigation)
            //        .WithMany(p => p.Docworks)
            //        .HasForeignKey(d => d.Idworkoper)
            //        .HasConstraintName("FK_docwork_workoper");
            //});

            //modelBuilder.Entity<Docworkperson>(entity =>
            //{
            //    entity.HasKey(e => e.Iddocworkpeople);

            //    entity.ToTable("docworkpeople");

            //    entity.HasComment("Таблица исполнителей работ по документу");

            //    entity.HasIndex(e => e.Iddocwork, "idx_docworkpeople_iddocwork");

            //    entity.HasIndex(e => e.Idpeople, "idx_docworkpeople_idpeople");

            //    entity.Property(e => e.Iddocworkpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddocworkpeople")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Iddocwork)
            //        .HasColumnName("iddocwork")
            //        .HasComment("Ссылка на работу документа");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Ссылка на исполнителя(справочник сотрудников)");

            //    entity.HasOne(d => d.IddocworkNavigation)
            //        .WithMany(p => p.Docworkpeople)
            //        .HasForeignKey(d => d.Iddocwork)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_docworkpeople_docwork");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Docworkpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_docworkpeople_people");
            //});

            //modelBuilder.Entity<Embrasuretype>(entity =>
            //{
            //    entity.HasKey(e => e.Idembrasuretype);

            //    entity.ToTable("embrasuretype");

            //    entity.HasComment("Справочник типов проёмов");

            //    entity.HasIndex(e => e.Idembrasuretypegroup, "idx_embrasuretype_idembrasuretypegroup");

            //    entity.Property(e => e.Idembrasuretype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idembrasuretype")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idembrasuretypegroup)
            //        .HasColumnName("idembrasuretypegroup")
            //        .HasComment("Ссылка на группу");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование типа проёма");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname")
            //        .HasComment("Сокращённое наименование");

            //    entity.HasOne(d => d.IdembrasuretypegroupNavigation)
            //        .WithMany(p => p.Embrasuretypes)
            //        .HasForeignKey(d => d.Idembrasuretypegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_embrasuretype_embrasuretypegroup");
            //});

            //modelBuilder.Entity<Embrasuretypegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idembrasuretypegroup);

            //    entity.ToTable("embrasuretypegroup");

            //    entity.HasComment("Группы типов проёмов");

            //    entity.HasIndex(e => e.Parentid, "idx_embrasuretypegroup_parentid");

            //    entity.Property(e => e.Idembrasuretypegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idembrasuretypegroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удалённости");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive)
            //        .IsRequired()
            //        .HasColumnName("isactive")
            //        .HasDefaultValueSql("((1))")
            //        .HasComment("Активность группы");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родительскую группу");
            //});

            //modelBuilder.Entity<Equipment>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipment);

            //    entity.ToTable("equipment");

            //    entity.HasIndex(e => e.Idequipmentgroup, "idx_equipment_idequipmentgroup");

            //    entity.Property(e => e.Idequipment)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipment");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Factory)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("factory");

            //    entity.Property(e => e.Filemask)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("filemask");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idequipmentgroup).HasColumnName("idequipmentgroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.Property(e => e.Savefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("savefile");

            //    entity.Property(e => e.Savepath)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("savepath");

            //    entity.Property(e => e.Scriptversoin)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("scriptversoin");

            //    entity.HasOne(d => d.IdequipmentgroupNavigation)
            //        .WithMany(p => p.Equipment)
            //        .HasForeignKey(d => d.Idequipmentgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipment_equipmentgroup");
            //});

            //modelBuilder.Entity<Equipmentdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentdoc);

            //    entity.ToTable("equipmentdoc");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentdoc_idmanufactdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_equipmentdoc_idpeople");

            //    entity.Property(e => e.Idequipmentdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Equipmentdocs)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentdoc_manufactdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Equipmentdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_equipmentdoc_people");
            //});

            //modelBuilder.Entity<Equipmentdocfile>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("equipmentdocfile");

            //    entity.HasIndex(e => e.Idequipment, "idx_equipmentdocfile_idequipment");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentdocfile_idequipmentdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idequipment).HasColumnName("idequipment");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentdocfile).HasColumnName("idequipmentdocfile");

            //    entity.Property(e => e.Savefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("savefile");

            //    entity.Property(e => e.Workfile)
            //        .HasColumnType("text")
            //        .HasColumnName("workfile");

            //    entity.HasOne(d => d.IdequipmentNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idequipment)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentdocfile_equipment");

            //    entity.HasOne(d => d.IdequipmentdocNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idequipmentdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentdocfile_equipmentdoc");
            //});

            //modelBuilder.Entity<Equipmentglass>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentglass);

            //    entity.ToTable("equipmentglass");

            //    entity.HasIndex(e => e.Barcode, "idx_equipmentglass_barcode");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentglass_idequipmentdoc");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentglass_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_equipmentglass_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_equipmentglass_idorderitem");

            //    entity.HasIndex(e => e.Width, "idx_equipmentglass_width");

            //    entity.Property(e => e.Idequipmentglass)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentglass");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cart");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdequipmentdocNavigation)
            //        .WithMany(p => p.Equipmentglasses)
            //        .HasForeignKey(d => d.Idequipmentdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentglass_equipmentdoc");
            //});

            //modelBuilder.Entity<Equipmentgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentgroup);

            //    entity.ToTable("equipmentgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_equipmentgroup_parentid");

            //    entity.Property(e => e.Idequipmentgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentgroup");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_equipmentgroup_equipmentgroup");
            //});

            //modelBuilder.Entity<Equipmentper>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentper);

            //    entity.ToTable("equipmentper");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentper_idequipmentdoc");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentper_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_equipmentper_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_equipmentper_idorderitem");

            //    entity.HasIndex(e => e.Width, "idx_equipmentper_width");

            //    entity.Property(e => e.Idequipmentper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentper");

            //    entity.Property(e => e.Cart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cart");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Orderitemnumpos).HasColumnName("orderitemnumpos");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Profiletype)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("profiletype");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Equipmentprofile>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentprofile);

            //    entity.ToTable("equipmentprofile");

            //    entity.HasIndex(e => e.Barcode, "idx_equipmentprofile_barcode");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentprofile_idequipmentdoc");

            //    entity.HasIndex(e => e.Idequipmentglass, "idx_equipmentprofile_idequipmentglass");

            //    entity.HasIndex(e => e.Idequipmentper, "idx_equipmentprofile_idequipmentper");

            //    entity.HasIndex(e => e.Idequipmentprofilein, "idx_equipmentprofile_idequipmentprofilein");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentprofile_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_equipmentprofile_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_equipmentprofile_idorderitem");

            //    entity.HasIndex(e => e.Profileside, "idx_equipmentprofile_profileside");

            //    entity.Property(e => e.Idequipmentprofile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentprofile");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Colorin)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin");

            //    entity.Property(e => e.Colorout)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Customername)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("customername");

            //    entity.Property(e => e.Destanation)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation");

            //    entity.Property(e => e.Glasscart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("glasscart");

            //    entity.Property(e => e.Globalid).HasColumnName("globalid");

            //    entity.Property(e => e.Handlepos).HasColumnName("handlepos");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentglass).HasColumnName("idequipmentglass");

            //    entity.Property(e => e.Idequipmentper).HasColumnName("idequipmentper");

            //    entity.Property(e => e.Idequipmentprofilein).HasColumnName("idequipmentprofilein");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numposbalka).HasColumnName("numposbalka");

            //    entity.Property(e => e.Numposbalkapos).HasColumnName("numposbalkapos");

            //    entity.Property(e => e.Optimsort).HasColumnName("optimsort");

            //    entity.Property(e => e.Orderitemname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitemname");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Orderitemnumpos).HasColumnName("orderitemnumpos");

            //    entity.Property(e => e.Ordername)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("ordername");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Profilecart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("profilecart");

            //    entity.Property(e => e.Profilelen).HasColumnName("profilelen");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Profileside)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("profileside");

            //    entity.Property(e => e.Profiletype)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("profiletype");

            //    entity.Property(e => e.Shtapikcart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("shtapikcart");

            //    entity.Property(e => e.Sortnum).HasColumnName("sortnum");

            //    entity.Property(e => e.Steellen).HasColumnName("steellen");

            //    entity.Property(e => e.Steelmarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("steelmarking");

            //    entity.Property(e => e.Strnum)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strnum");

            //    entity.Property(e => e.Whip).HasColumnName("whip");

            //    entity.Property(e => e.Whipost).HasColumnName("whipost");

            //    entity.Property(e => e.Whiposttype).HasColumnName("whiposttype");

            //    entity.HasOne(d => d.IdequipmentdocNavigation)
            //        .WithMany(p => p.Equipmentprofiles)
            //        .HasForeignKey(d => d.Idequipmentdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentprofile_equipmentdoc");

            //    entity.HasOne(d => d.IdequipmentperNavigation)
            //        .WithMany(p => p.Equipmentprofiles)
            //        .HasForeignKey(d => d.Idequipmentper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentprofile_equipmentper");
            //});

            //modelBuilder.Entity<Equipmentprofilein>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentprofilein)
            //        .HasName("PK_equpmentprofilein");

            //    entity.ToTable("equipmentprofilein");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentprofilein_idequipmentdoc");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentprofilein_idmanufactdoc");

            //    entity.Property(e => e.Idequipmentprofilein)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentprofilein");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Len).HasColumnName("len");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Ost).HasColumnName("ost");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.HasOne(d => d.IdequipmentdocNavigation)
            //        .WithMany(p => p.Equipmentprofileins)
            //        .HasForeignKey(d => d.Idequipmentdoc)
            //        .HasConstraintName("FK_equipmentprofilein_idequipmentdoc");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Equipmentprofileins)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentprofilein_manufactdoc");
            //});

            //modelBuilder.Entity<Equipmentprofileout>(entity =>
            //{
            //    entity.HasKey(e => e.Idequipmentprofileout);

            //    entity.ToTable("equipmentprofileout");

            //    entity.HasIndex(e => e.Idequipmentdoc, "idx_equipmentprofileout_idequipmentdoc");

            //    entity.HasIndex(e => e.Idequipmentprofilein, "idx_equipmentprofileout_idequipmentprofilein");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_equipmentprofileout_idmanufactdoc");

            //    entity.Property(e => e.Idequipmentprofileout)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idequipmentprofileout");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentprofilein).HasColumnName("idequipmentprofilein");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Len).HasColumnName("len");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Whip).HasColumnName("whip");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Whiposttype).HasColumnName("whiposttype");

            //    entity.Property(e => e.Whiptype).HasColumnName("whiptype");

            //    entity.Property(e => e.Worklen).HasColumnName("worklen");

            //    entity.HasOne(d => d.IdequipmentdocNavigation)
            //        .WithMany(p => p.Equipmentprofileouts)
            //        .HasForeignKey(d => d.Idequipmentdoc)
            //        .HasConstraintName("FK_equipmentprofileout_idequipmentdoc");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Equipmentprofileouts)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_equipmentprofileout_manufactdoc");
            //});

            //modelBuilder.Entity<Error>(entity =>
            //{
            //    entity.HasKey(e => e.Iderror);

            //    entity.ToTable("error");

            //    entity.HasComment("Справочник ошибок расчётов");

            //    entity.HasIndex(e => e.Guid, "UQ__error__3C4B96B6")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Iderrorgroup, "idx_error_iderrorgroup");

            //    entity.HasIndex(e => e.Iderrortype, "idx_error_iderrortype");

            //    entity.Property(e => e.Iderror)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iderror")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("code")
            //        .HasComment("Код ошибки");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Iderrorgroup)
            //        .HasColumnName("iderrorgroup")
            //        .HasComment("Ссылка на группу");

            //    entity.Property(e => e.Iderrortype)
            //        .HasColumnName("iderrortype")
            //        .HasComment("Ссылка на тип");

            //    entity.Property(e => e.Issave)
            //        .HasColumnName("issave")
            //        .HasDefaultValueSql("((0))")
            //        .HasComment("Сохранять в заказе");

            //    entity.Property(e => e.Message1)
            //        .IsUnicode(false)
            //        .HasColumnName("message1")
            //        .HasComment("Сообщение 1 об ошибке");

            //    entity.Property(e => e.Message2)
            //        .IsUnicode(false)
            //        .HasColumnName("message2")
            //        .HasComment("Сообщение 2 об ошибке");

            //    entity.Property(e => e.Message3)
            //        .IsUnicode(false)
            //        .HasColumnName("message3")
            //        .HasComment("Сообщение 3 об ошибке");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование ошибки");

            //    entity.Property(e => e.Picture)
            //        .HasColumnName("picture")
            //        .HasComment("Иллюстрация");

            //    entity.Property(e => e.Showtype)
            //        .HasColumnName("showtype")
            //        .HasDefaultValueSql("((0))")
            //        .HasComment("Тип отображения. 0-не отображать,1-message1,2-message2,3-message3");

            //    entity.HasOne(d => d.IderrorgroupNavigation)
            //        .WithMany(p => p.Errors)
            //        .HasForeignKey(d => d.Iderrorgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_error_errorgroup");

            //    entity.HasOne(d => d.IderrortypeNavigation)
            //        .WithMany(p => p.Errors)
            //        .HasForeignKey(d => d.Iderrortype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_error_errortype");
            //});

            //modelBuilder.Entity<Errorgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Iderrorgroup);

            //    entity.ToTable("errorgroup");

            //    entity.HasComment("Группы ошибок");

            //    entity.HasIndex(e => e.Guid, "UQ__errorgroup__32C22C7C")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_errorgroup_parentid");

            //    entity.Property(e => e.Iderrorgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iderrorgroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родителя");
            //});

            //modelBuilder.Entity<Errortype>(entity =>
            //{
            //    entity.HasKey(e => e.Iderrortype);

            //    entity.ToTable("errortype");

            //    entity.HasComment("Справочник типов ошибок расчётов");

            //    entity.HasIndex(e => e.Guid, "UQ__errortype__3786E199")
            //        .IsUnique();

            //    entity.Property(e => e.Iderrortype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iderrortype")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование типа ошибки");
            //});

            //modelBuilder.Entity<ExceptionGoodColor>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("exception_good_colors");

            //    entity.HasComment("список материалов и цветов, в которые данный материал не красится, а заказывается.");

            //    entity.Property(e => e.Id)
            //        .ValueGeneratedOnAdd()
            //        .HasColumnName("id");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");
            //});

            //modelBuilder.Entity<Dto.File>(entity =>
            //{
            //    entity.HasKey(e => e.Idfiles)
            //        .HasName("PK_file");

            //    entity.ToTable("files");

            //    entity.HasIndex(e => e.Iddocstate, "idx_files_iddocstate");

            //    entity.Property(e => e.Idfiles)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfiles");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Files)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_files_docstate");
            //});

            //modelBuilder.Entity<Finparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idfinparam)
            //        .HasName("finparam_pkey");

            //    entity.ToTable("finparam");

            //    entity.HasIndex(e => e.Guid, "UQ__finparam__46FE2F53")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idfinparamgroup, "idx_finparam_idfinparamgroup");

            //    entity.HasIndex(e => e.Idversion, "idx_finparam_idversion");

            //    entity.Property(e => e.Idfinparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfinparam");

            //    entity.Property(e => e.Activeparam).HasColumnName("activeparam");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idfinparamgroup).HasColumnName("idfinparamgroup");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Paramgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("paramgroup");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdfinparamgroupNavigation)
            //        .WithMany(p => p.Finparams)
            //        .HasForeignKey(d => d.Idfinparamgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_finparam_finparamgroup");
            //});

            //modelBuilder.Entity<Finparamcalc>(entity =>
            //{
            //    entity.HasKey(e => e.Idfinparamcalc)
            //        .HasName("finparamcalc_pkey");

            //    entity.ToTable("finparamcalc");

            //    entity.HasIndex(e => new { e.Idfinparam, e.Idorderitem }, "IDX_orderitem_finparam");

            //    entity.HasIndex(e => e.Idfinparam, "idx_finparamcalc_idfinparam");

            //    entity.HasIndex(e => e.Idmodel, "idx_finparamcalc_idmodel");

            //    entity.HasIndex(e => e.Idorder, "idx_finparamcalc_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_finparamcalc_idorderitem_inc");

            //    entity.Property(e => e.Idfinparamcalc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfinparamcalc");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Smbasecrypt).HasColumnName("smbasecrypt");

            //    entity.Property(e => e.Smcrypt).HasColumnName("smcrypt");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdfinparamNavigation)
            //        .WithMany(p => p.Finparamcalcs)
            //        .HasForeignKey(d => d.Idfinparam)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_finparamcalc_finparam");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Finparamcalcs)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_finparamcalc_model");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Finparamcalcs)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_finparamcalc_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Finparamcalcs)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_finparamcalc_orderitem");
            //});

            //modelBuilder.Entity<Finparamgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idfinparamgroup);

            //    entity.ToTable("finparamgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__finparamgroup__70F4691F")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_finparamgroup_parentid");

            //    entity.Property(e => e.Idfinparamgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfinparamgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Furniture>(entity =>
            //{
            //    entity.HasKey(e => e.Idfurniture);

            //    entity.ToTable("furniture");

            //    entity.HasIndex(e => e.Guid, "UQ__furniture__6231487C")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_furniture_parentid");

            //    entity.Property(e => e.Idfurniture)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfurniture");

            //    entity.Property(e => e.Codename)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("codename");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Errorstring)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("errorstring");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Ischecked).HasColumnName("ischecked");

            //    entity.Property(e => e.Iscode).HasColumnName("iscode");

            //    entity.Property(e => e.Ispoint).HasColumnName("ispoint");

            //    entity.Property(e => e.Issignificant).HasColumnName("issignificant");

            //    entity.Property(e => e.Isstandartname).HasColumnName("isstandartname");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Pointid).HasColumnName("pointid");

            //    entity.Property(e => e.Standartname)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("standartname");

            //    entity.Property(e => e.Warningstring)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("warningstring");
            //});

            //modelBuilder.Entity<Furnituregoodkit>(entity =>
            //{
            //    entity.HasKey(e => e.Idfurnituregoodkit)
            //        .HasName("PK_furnituredetail");

            //    entity.ToTable("furnituregoodkit");

            //    entity.HasIndex(e => e.Guid, "UQ__furnituregoodkit__271082AE")
            //        .IsUnique();

            //    entity.Property(e => e.Idfurnituregoodkit)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfurnituregoodkit");

            //    entity.Property(e => e.DateBegin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date_begin");

            //    entity.Property(e => e.DateEnd)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date_end");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idfurniture).HasColumnName("idfurniture");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Qu).HasColumnName("qu");
            //});

            //modelBuilder.Entity<Furnituremarking>(entity =>
            //{
            //    entity.HasKey(e => e.Idfurnituremarking);

            //    entity.ToTable("furnituremarking");

            //    entity.HasIndex(e => e.Guid, "UQ__furnituremarking__2AE11392")
            //        .IsUnique();

            //    entity.Property(e => e.Idfurnituremarking)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idfurnituremarking");

            //    entity.Property(e => e.DateBegin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date_begin");

            //    entity.Property(e => e.DateEnd)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date_end");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idfurniture).HasColumnName("idfurniture");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(500)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");
            //});

            //modelBuilder.Entity<Ganttchart>(entity =>
            //{
            //    entity.HasKey(e => e.Idganttchart);

            //    entity.ToTable("ganttchart");

            //    entity.Property(e => e.Idganttchart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idganttchart");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Model)
            //        .IsUnicode(false)
            //        .HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Generator>(entity =>
            //{
            //    entity.HasKey(e => e.Idgen);

            //    entity.ToTable("generator");

            //    entity.Property(e => e.Idgen)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgen");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Isdiler).HasColumnName("isdiler");

            //    entity.Property(e => e.Isremoteoffice).HasColumnName("isremoteoffice");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Num).HasColumnName("num");

            //    entity.Property(e => e.Replicatetype).HasColumnName("replicatetype");

            //    entity.Property(e => e.Shift).HasColumnName("shift");

            //    entity.Property(e => e.Updatelevel).HasColumnName("updatelevel");
            //});

            //modelBuilder.Entity<Glass>(entity =>
            //{
            //    entity.HasKey(e => e.Idglass);

            //    entity.ToTable("glass");

            //    entity.HasIndex(e => e.Guid, "UQ__glass__6F0C20AD")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idglassgroup, "idx_glass_idglassgroup");

            //    entity.Property(e => e.Idglass)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglass");

            //    entity.Property(e => e.Camernost).HasColumnName("camernost");

            //    entity.Property(e => e.Color).HasColumnName("color");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Glassgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("glassgroup");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Heatresistance)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("heatresistance")
            //        .HasComment("сопротивление теплопередаче");

            //    entity.Property(e => e.Idfilltype).HasColumnName("idfilltype");

            //    entity.Property(e => e.Idglassgroup).HasColumnName("idglassgroup");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Marking2)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking2");

            //    entity.Property(e => e.Marking3)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking3");

            //    entity.Property(e => e.Marking4)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking4");

            //    entity.Property(e => e.Marking5)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking5");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Ramkaoffset).HasColumnName("ramkaoffset");

            //    entity.Property(e => e.Soundinsulation)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("soundinsulation")
            //        .HasComment("Звукоизоляция заполнения");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.HasOne(d => d.IdglassgroupNavigation)
            //        .WithMany(p => p.Glasses)
            //        .HasForeignKey(d => d.Idglassgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_glass_glassgroup");
            //});

            //modelBuilder.Entity<Glassdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idglassdetail);

            //    entity.ToTable("glassdetail");

            //    entity.HasIndex(e => e.Guid, "UQ__glassdetail__07D7CE77")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idglass, "idx_glassdetail_idglass");

            //    entity.HasIndex(e => e.Idglasselement, "idx_glassdetail_idglasselement");

            //    entity.HasIndex(e => e.Idgood, "idx_glassdetail_idgood");

            //    entity.Property(e => e.Idglassdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglassdetail");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.Idglasselement).HasColumnName("idglasselement");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdglassNavigation)
            //        .WithMany(p => p.Glassdetails)
            //        .HasForeignKey(d => d.Idglass)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_glassdetail_glass");

            //    entity.HasOne(d => d.IdglasselementNavigation)
            //        .WithMany(p => p.Glassdetails)
            //        .HasForeignKey(d => d.Idglasselement)
            //        .HasConstraintName("FK_glassdetail_glasselement");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Glassdetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_glassdetail_good");
            //});

            //modelBuilder.Entity<Glasselement>(entity =>
            //{
            //    entity.HasKey(e => e.Idglasselement);

            //    entity.ToTable("glasselement");

            //    entity.HasIndex(e => e.Guid, "UQ__glasselement__5828BB55")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idglasselementgroup, "idx_glasselement_idglasselementgroup");

            //    entity.Property(e => e.Idglasselement)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglasselement");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Color).HasColumnName("color");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idglasselementgroup).HasColumnName("idglasselementgroup");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Ramkaoffset).HasColumnName("ramkaoffset");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Useinconstructor).HasColumnName("useinconstructor");

            //    entity.HasOne(d => d.IdglasselementgroupNavigation)
            //        .WithMany(p => p.Glasselements)
            //        .HasForeignKey(d => d.Idglasselementgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_glasselement_glasselementgroup");
            //});

            //modelBuilder.Entity<Glasselementgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idglasselementgroup);

            //    entity.ToTable("glasselementgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__glasselementgrou__78958AE7")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_glasselementgroup_parentid");

            //    entity.Property(e => e.Idglasselementgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglasselementgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Glassgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idglassgroup);

            //    entity.ToTable("glassgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__glassgroup__04073D93")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_glassgroup_parentid");

            //    entity.Property(e => e.Idglassgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglassgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Good>(entity =>
            //{
            //    entity.HasKey(e => e.Idgood)
            //        .HasName("pk_good");

            //    entity.ToTable("good");

            //    entity.HasIndex(e => e.Guid, "UQ__good__4E9F511B")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcolor1, "idx_good_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_good_idcolor2");

            //    entity.HasIndex(e => e.Idcolorgroupcustom, "idx_good_idcolorgroupcustom");

            //    entity.HasIndex(e => e.Idgoodgroup, "idx_good_idgoodgroup");

            //    entity.HasIndex(e => e.Idgoodoptim, "idx_good_idgoodoptim");

            //    entity.HasIndex(e => e.Idgoodpricegroup, "idx_good_idgoodpricegroup");

            //    entity.HasIndex(e => e.Idgoodtype, "idx_good_idgoodtype");

            //    entity.HasIndex(e => e.Idmeasure, "idx_good_idmeasure");

            //    entity.HasIndex(e => e.Idstoragespace, "idx_good_idstoragespace");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_good_idstoredepart");

            //    entity.HasIndex(e => e.Idsystem, "idx_good_idsystem");

            //    entity.HasIndex(e => e.Idvalut, "idx_good_idvalut");

            //    entity.HasIndex(e => e.Width, "idx_good_width");

            //    entity.HasIndex(e => new { e.Deleted, e.Usehouse }, "ix_good_deleted_usehouse")
            //        .HasFillFactor(100);

            //    entity.Property(e => e.Idgood)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgood");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Extmarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("extmarking");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgoodgroup).HasColumnName("idgoodgroup");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idgoodpricegroup).HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Idgoodtype).HasColumnName("idgoodtype");

            //    entity.Property(e => e.Idgoodtype2).HasColumnName("idgoodtype2");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredepart)
            //        .HasColumnName("idstoredepart")
            //        .HasComment("Ссылка на склад хранения");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Ismy).HasColumnName("ismy");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Maxost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxost");

            //    entity.Property(e => e.Minost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost");

            //    entity.Property(e => e.Minost2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Packing)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("packing");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1crypt).HasColumnName("price1crypt");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Purchase).HasColumnName("purchase");

            //    entity.Property(e => e.Rank1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank1");

            //    entity.Property(e => e.Rank2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank2");

            //    entity.Property(e => e.Replenishment).HasColumnName("replenishment");

            //    entity.Property(e => e.Reserve).HasColumnName("reserve");

            //    entity.Property(e => e.Showinnopaper)
            //        .HasColumnName("showinnopaper")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Sqr2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr2");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Usehouse).HasColumnName("usehouse");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("waste");

            //    entity.Property(e => e.Waste2)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste2");

            //    entity.Property(e => e.Waste3)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste3");

            //    entity.Property(e => e.Waste4)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste4");

            //    entity.Property(e => e.Waste5)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste5");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdcolorgroupcustomNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idcolorgroupcustom)
            //        .HasConstraintName("FK_good_colorgroupcustom");

            //    entity.HasOne(d => d.IdgoodgroupNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idgoodgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_good_goodgroup");

            //    entity.HasOne(d => d.IdgoodoptimNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idgoodoptim)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodoptim");

            //    entity.HasOne(d => d.IdgoodpricegroupNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idgoodpricegroup)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodpricegroup");

            //    entity.HasOne(d => d.IdgoodtypeNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idgoodtype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodtype");

            //    entity.HasOne(d => d.IdmeasureNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idmeasure)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_measure");

            //    entity.HasOne(d => d.IdstoragespaceNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idstoragespace)
            //        .HasConstraintName("FK_good_storagespace");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_storedepart");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idsystem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_system");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Goods)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_valut");
            //});

            //modelBuilder.Entity<GoodCopy>(entity =>
            //{
            //    entity.HasKey(e => e.Idgood)
            //        .HasName("pk_good_copy");

            //    entity.ToTable("good_copy");

            //    entity.HasIndex(e => e.Guid, "UQ__good_cop__497F6CB5F465EECF")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcolor1, "idx_good_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_good_idcolor2");

            //    entity.HasIndex(e => e.Idcolorgroupcustom, "idx_good_idcolorgroupcustom");

            //    entity.HasIndex(e => e.Idgoodgroup, "idx_good_idgoodgroup");

            //    entity.HasIndex(e => e.Idgoodoptim, "idx_good_idgoodoptim");

            //    entity.HasIndex(e => e.Idgoodpricegroup, "idx_good_idgoodpricegroup");

            //    entity.HasIndex(e => e.Idgoodtype, "idx_good_idgoodtype");

            //    entity.HasIndex(e => e.Idmeasure, "idx_good_idmeasure");

            //    entity.HasIndex(e => e.Idstoragespace, "idx_good_idstoragespace");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_good_idstoredepart");

            //    entity.HasIndex(e => e.Idsystem, "idx_good_idsystem");

            //    entity.HasIndex(e => e.Idvalut, "idx_good_idvalut");

            //    entity.HasIndex(e => e.Width, "idx_good_width");

            //    entity.Property(e => e.Idgood)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgood");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Extmarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("extmarking");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgoodgroup).HasColumnName("idgoodgroup");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idgoodpricegroup).HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Idgoodtype).HasColumnName("idgoodtype");

            //    entity.Property(e => e.Idgoodtype2).HasColumnName("idgoodtype2");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredepart)
            //        .HasColumnName("idstoredepart")
            //        .HasComment("Ссылка на склад хранения");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Ismy).HasColumnName("ismy");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Maxost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxost");

            //    entity.Property(e => e.Minost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost");

            //    entity.Property(e => e.Minost2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Packing)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("packing");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1crypt).HasColumnName("price1crypt");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Purchase).HasColumnName("purchase");

            //    entity.Property(e => e.Rank1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank1");

            //    entity.Property(e => e.Rank2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank2");

            //    entity.Property(e => e.Replenishment).HasColumnName("replenishment");

            //    entity.Property(e => e.Reserve).HasColumnName("reserve");

            //    entity.Property(e => e.Showinnopaper)
            //        .HasColumnName("showinnopaper")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Sqr2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr2");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Usehouse).HasColumnName("usehouse");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("waste");

            //    entity.Property(e => e.Waste2)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste2");

            //    entity.Property(e => e.Waste3)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste3");

            //    entity.Property(e => e.Waste4)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste4");

            //    entity.Property(e => e.Waste5)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste5");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdcolorgroupcustomNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idcolorgroupcustom)
            //        .HasConstraintName("FK_good_colorgroupcustom_copy");

            //    entity.HasOne(d => d.IdgoodgroupNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idgoodgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_good_goodgroup_copy");

            //    entity.HasOne(d => d.IdgoodoptimNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idgoodoptim)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodoptim_copy");

            //    entity.HasOne(d => d.IdgoodpricegroupNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idgoodpricegroup)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodpricegroup_copy");

            //    entity.HasOne(d => d.IdgoodtypeNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idgoodtype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_goodtype_copy");

            //    entity.HasOne(d => d.IdmeasureNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idmeasure)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_measure_copy");

            //    entity.HasOne(d => d.IdstoragespaceNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idstoragespace)
            //        .HasConstraintName("FK_good_storagespace_copy");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_storedepart_copy");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idsystem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_system_copy");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.GoodCopies)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_good_valut_copy");
            //});

            //modelBuilder.Entity<Goodanalog>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodanalog)
            //        .HasName("goodanalog_pkey");

            //    entity.ToTable("goodanalog");

            //    entity.HasIndex(e => e.Guid, "UQ__goodanalog__61B2258F")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcolor1, "idx_goodanalog_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_goodanalog_idcolor2");

            //    entity.HasIndex(e => e.Idgood, "idx_goodanalog_idgood");

            //    entity.HasIndex(e => e.Idgoodanaloggroup, "idx_goodanalog_idgoodanaloggroup");

            //    entity.Property(e => e.Idgoodanalog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodanalog");

            //    entity.Property(e => e.Analoggroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("analoggroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodanaloggroup).HasColumnName("idgoodanaloggroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.GoodanalogIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_goodanalog_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.GoodanalogIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_goodanalog_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodanalogs)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_goodanalog_good");

            //    entity.HasOne(d => d.IdgoodanaloggroupNavigation)
            //        .WithMany(p => p.Goodanalogs)
            //        .HasForeignKey(d => d.Idgoodanaloggroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodanalog_goodanaloggroup");
            //});

            //modelBuilder.Entity<Goodanalogdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodanalogdetail)
            //        .HasName("goodanalogdetail_pkey");

            //    entity.ToTable("goodanalogdetail");

            //    entity.HasIndex(e => e.Guid, "UQ__goodanalogdetail__639A6E01")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idgood, "idx_goodanalogdetail_idgood");

            //    entity.HasIndex(e => e.Idgoodanalog, "idx_goodanalogdetail_idgoodanalog");

            //    entity.Property(e => e.Idgoodanalogdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodanalogdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodanalog).HasColumnName("idgoodanalog");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodanalogdetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodanalogdetail_good");

            //    entity.HasOne(d => d.IdgoodanalogNavigation)
            //        .WithMany(p => p.Goodanalogdetails)
            //        .HasForeignKey(d => d.Idgoodanalog)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodanalogdetail_goodanalog");
            //});

            //modelBuilder.Entity<Goodanaloggroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodanaloggroup);

            //    entity.ToTable("goodanaloggroup");

            //    entity.HasIndex(e => e.Guid, "UQ__goodanaloggroup__35D3A351")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_goodanaloggroup_parentid");

            //    entity.Property(e => e.Idgoodanaloggroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodanaloggroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Goodbuffer>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodbuffer);

            //    entity.ToTable("goodbuffer");

            //    entity.HasIndex(e => e.Idgood, "idx_goodbuffer_idgood");

            //    entity.HasIndex(e => e.Idoptimdocin, "idx_goodbuffer_idoptimdocin");

            //    entity.HasIndex(e => e.Idoptimdocout, "idx_goodbuffer_idoptimdocout");

            //    entity.HasIndex(e => e.Idorderitem, "idx_goodbuffer_idorderitem");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_goodbuffer_idstoredepart");

            //    entity.Property(e => e.Idgoodbuffer)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("cell");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocin).HasColumnName("idmanufactdocin");

            //    entity.Property(e => e.Idmanufactdocout).HasColumnName("idmanufactdocout");

            //    entity.Property(e => e.Idoptimdocin).HasColumnName("idoptimdocin");

            //    entity.Property(e => e.Idoptimdocout).HasColumnName("idoptimdocout");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.Property(e => e.Status).HasColumnName("status");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodbuffers)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodbuffer_good");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Goodbuffers)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_goodbuffer_orderitem");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Goodbuffers)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_goodbuffer_storedepart");
            //});

            //modelBuilder.Entity<GoodbufferNeedToDrop>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("goodbuffer_need_to_drop");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("cell");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idmanufactdocin).HasColumnName("idmanufactdocin");

            //    entity.Property(e => e.Idmanufactdocout).HasColumnName("idmanufactdocout");

            //    entity.Property(e => e.Idoptimdocin).HasColumnName("idoptimdocin");

            //    entity.Property(e => e.Idoptimdocout).HasColumnName("idoptimdocout");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.Property(e => e.Status).HasColumnName("status");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Goodcolorgroupprice>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodcolorgroupprice);

            //    entity.ToTable("goodcolorgroupprice");

            //    entity.HasIndex(e => e.Idcolorgroupprice, "idx_goodcolorgroupprice_idcolorgroupprice");

            //    entity.HasIndex(e => e.Idgood, "idx_goodcolorgroupprice_idgood");

            //    entity.HasIndex(e => e.Idgoodpricegroup, "idx_goodcolorgroupprice_idgoodpricegroup");

            //    entity.HasIndex(e => e.Idvalut, "idx_goodcolorgroupprice_idvalut");

            //    entity.HasIndex(e => e.Idvalut2, "idx_goodcolorgroupprice_idvalut2");

            //    entity.Property(e => e.Idgoodcolorgroupprice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodcolorgroupprice");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodpricegroup).HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.K1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k1");

            //    entity.Property(e => e.K2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k2");

            //    entity.Property(e => e.Planprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("planprice");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.HasOne(d => d.IdcolorgrouppriceNavigation)
            //        .WithMany(p => p.Goodcolorgroupprices)
            //        .HasForeignKey(d => d.Idcolorgroupprice)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodcolorgroupprice_colorgroupprice");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodcolorgroupprices)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodcolorgroupprice_good");

            //    entity.HasOne(d => d.IdgoodpricegroupNavigation)
            //        .WithMany(p => p.Goodcolorgroupprices)
            //        .HasForeignKey(d => d.Idgoodpricegroup)
            //        .HasConstraintName("FK_goodcolorgroupprice_goodpricegroup");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.GoodcolorgrouppriceIdvalutNavigations)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodcolorgroupprice_valut");

            //    entity.HasOne(d => d.Idvalut2Navigation)
            //        .WithMany(p => p.GoodcolorgrouppriceIdvalut2Navigations)
            //        .HasForeignKey(d => d.Idvalut2)
            //        .HasConstraintName("FK__goodcolor__idval__75AA0298");
            //});

            //modelBuilder.Entity<Goodcolorparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodcolorparam);

            //    entity.ToTable("goodcolorparam");

            //    entity.HasIndex(e => e.Idcolor1, "idx_goodcolorparam_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_goodcolorparam_idcolor2");

            //    entity.HasIndex(e => e.Idcolorgroupprice, "idx_goodcolorparam_idcolorgroupprice");

            //    entity.HasIndex(e => e.Idgood, "idx_goodcolorparam_idgood");

            //    entity.HasIndex(e => e.Idgoodoptim, "idx_goodcolorparam_idgoodoptim");

            //    entity.HasIndex(e => e.Idstoragespace, "idx_goodcolorparam_idstoragespace");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_goodcolorparam_idstoredepart");

            //    entity.Property(e => e.Idgoodcolorparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodcolorparam");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Dtpost)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtpost");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Maxost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxost");

            //    entity.Property(e => e.Minost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost");

            //    entity.Property(e => e.Minost2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost2");

            //    entity.Property(e => e.Purchase).HasColumnName("purchase");

            //    entity.Property(e => e.Rank1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank1");

            //    entity.Property(e => e.Rank2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank2");

            //    entity.Property(e => e.Rate)
            //        .HasColumnType("numeric(8, 4)")
            //        .HasColumnName("rate");

            //    entity.Property(e => e.Replenishment).HasColumnName("replenishment");

            //    entity.Property(e => e.Usehouse).HasColumnName("usehouse");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("waste");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.GoodcolorparamIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_goodcolorparam_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.GoodcolorparamIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_goodcolorparam_color2");

            //    entity.HasOne(d => d.IdcolorgrouppriceNavigation)
            //        .WithMany(p => p.Goodcolorparams)
            //        .HasForeignKey(d => d.Idcolorgroupprice)
            //        .HasConstraintName("FK_goodcolorparam_colorgroupprice");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodcolorparams)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodcolorparam_good");

            //    entity.HasOne(d => d.IdgoodoptimNavigation)
            //        .WithMany(p => p.Goodcolorparams)
            //        .HasForeignKey(d => d.Idgoodoptim)
            //        .HasConstraintName("FK_goodcolorparam_goodoptim");

            //    entity.HasOne(d => d.IdstoragespaceNavigation)
            //        .WithMany(p => p.Goodcolorparams)
            //        .HasForeignKey(d => d.Idstoragespace)
            //        .HasConstraintName("FK_goodcolorparam_storagespace");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Goodcolorparams)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_goodcolorparam_storedepart");
            //});

            //modelBuilder.Entity<Goodgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodgroup)
            //        .HasName("pk_goodgroup");

            //    entity.ToTable("goodgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__goodgroup__2E328189")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_goodgroup_parentid");

            //    entity.Property(e => e.Idgoodgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Isvisible).HasColumnName("isvisible");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Goodkit>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodkit)
            //        .HasName("goodkit_pkey");

            //    entity.ToTable("goodkit");

            //    entity.HasIndex(e => e.Guid, "UQ__goodkit__676AFEE5")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idgoodkitgroup, "idx_goodkit_idgoodkitgroup");

            //    entity.Property(e => e.Idgoodkit)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodkit");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idgoodkitgroup).HasColumnName("idgoodkitgroup");

            //    entity.Property(e => e.Ismy).HasColumnName("ismy");

            //    entity.Property(e => e.Kitgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("kitgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdgoodkitgroupNavigation)
            //        .WithMany(p => p.Goodkits)
            //        .HasForeignKey(d => d.Idgoodkitgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodkit_goodkitgroup");
            //});

            //modelBuilder.Entity<Goodkitdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodkitdetail)
            //        .HasName("goodkitdetail_pkey");

            //    entity.ToTable("goodkitdetail");

            //    entity.HasIndex(e => e.Guid, "UQ__goodkitdetail__69534757")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idgood, "idx_goodkitdetail_idgood");

            //    entity.HasIndex(e => e.Idgoodkit, "idx_goodkitdetail_idgoodkit");

            //    entity.HasIndex(e => e.Width, "idx_goodkitdetail_width");

            //    entity.Property(e => e.Idgoodkitdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1)
            //        .HasColumnName("idcolor1")
            //        .HasComment("Цвет 1");

            //    entity.Property(e => e.Idcolor2)
            //        .HasColumnName("idcolor2")
            //        .HasComment("Цвет 2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Isconst).HasColumnName("isconst");

            //    entity.Property(e => e.Ismain).HasColumnName("ismain");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr")
            //        .HasComment("Площадь");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodkitdetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodkitdetail_good");

            //    entity.HasOne(d => d.IdgoodkitNavigation)
            //        .WithMany(p => p.Goodkitdetails)
            //        .HasForeignKey(d => d.Idgoodkit)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodkitdetail_goodkit");
            //});

            //modelBuilder.Entity<Goodkitgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodkitgroup);

            //    entity.ToTable("goodkitgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__goodkitgroup__0036ACAF")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_goodkitgroup_parentid");

            //    entity.Property(e => e.Idgoodkitgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodkitgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Isvisible)
            //        .HasColumnName("isvisible")
            //        .HasComment("Видимость группы для добавления");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Goodmeasure>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodmeasure);

            //    entity.ToTable("goodmeasure");

            //    entity.HasIndex(e => e.Name, "NonClusteredIndex-20180507-135343");

            //    entity.HasIndex(e => e.Idmeasure, "idx_goodmeasure_idmeasure");

            //    entity.HasIndex(e => e.Idgood, "ix_goodmeasure_idgood");

            //    entity.Property(e => e.Idgoodmeasure)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Def).HasColumnName("def");

            //    entity.Property(e => e.Def2).HasColumnName("def2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.K)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodmeasures)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_goodmeasure_good");

            //    entity.HasOne(d => d.IdmeasureNavigation)
            //        .WithMany(p => p.Goodmeasures)
            //        .HasForeignKey(d => d.Idmeasure)
            //        .HasConstraintName("FK_goodmeasure_measure");
            //});

            //modelBuilder.Entity<Goodoptim>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodoptim);

            //    entity.ToTable("goodoptim");

            //    entity.HasIndex(e => e.Guid, "UQ__goodoptim__564072E3")
            //        .IsUnique();

            //    entity.Property(e => e.Idgoodoptim)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Buffer).HasColumnName("buffer");

            //    entity.Property(e => e.Canrotate)
            //        .HasColumnName("canrotate")
            //        .HasComment("Не вращать кусочки");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Db).HasColumnName("db");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Differentwhipsforbeamsize).HasColumnName("differentwhipsforbeamsize");

            //    entity.Property(e => e.Divideremainder).HasColumnName("divideremainder");

            //    entity.Property(e => e.Dl).HasColumnName("dl");

            //    entity.Property(e => e.Dopuskoptim).HasColumnName("dopuskoptim");

            //    entity.Property(e => e.Dr).HasColumnName("dr");

            //    entity.Property(e => e.Drez).HasColumnName("drez");

            //    entity.Property(e => e.Dt).HasColumnName("dt");

            //    entity.Property(e => e.Freza).HasColumnName("freza");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Maxrez).HasColumnName("maxrez");

            //    entity.Property(e => e.Maxworkrests).HasColumnName("maxworkrests");

            //    entity.Property(e => e.Minost).HasColumnName("minost");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Optimstyle)
            //        .HasColumnName("optimstyle")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.Optimtype).HasColumnName("optimtype");

            //    entity.Property(e => e.Ostmax).HasColumnName("ostmax");

            //    entity.Property(e => e.Ostmin).HasColumnName("ostmin");

            //    entity.Property(e => e.Quality)
            //        .HasColumnName("quality")
            //        .HasDefaultValueSql("((2))");

            //    entity.Property(e => e.Step).HasColumnName("step");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Typeoptimend).HasColumnName("typeoptimend");

            //    entity.Property(e => e.Typerez)
            //        .HasColumnName("typerez")
            //        .HasComment("Тип резов (вертикальные = 0, горизонтальные = 1, смешанные = 2)");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Worklen).HasColumnName("worklen");

            //    entity.Property(e => e.WorklenHeight).HasColumnName("worklen_height");

            //    entity.Property(e => e.WorklenWidth).HasColumnName("worklen_width");
            //});

            //modelBuilder.Entity<Goodost>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodost);

            //    entity.ToTable("goodost");

            //    entity.HasIndex(e => e.Idgood, "idx_goodost_idgood");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_goodost_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_goodost_idorder");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_goodost_idstoredepart");

            //    entity.Property(e => e.Idgoodost)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodost");

            //    entity.Property(e => e.Dtreg)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtreg");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");

            //    entity.Property(e => e.Valnew)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valnew");

            //    entity.Property(e => e.Valold)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valold");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodosts)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodost_good");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Goodosts)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodost_manufactdoc");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Goodosts)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodost_orders");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Goodosts)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodost_storedepart");
            //});

            //modelBuilder.Entity<Goodparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodparam)
            //        .HasName("goodparam_pkey");

            //    entity.ToTable("goodparam");

            //    entity.HasIndex(e => e.Guid, "UQ__goodparam__1531C995")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idgood, "idx_goodparam_idgood");

            //    entity.HasIndex(e => e.Idparam, "idx_goodparam_idparam");

            //    entity.HasIndex(e => new { e.Deleted, e.Idgoodparamname }, "ix_da_goodparam_deleted_idgoodparamname");

            //    entity.HasIndex(e => new { e.Idgoodparamname, e.Idgood }, "ix_goodparam_idgoodparamname");

            //    entity.Property(e => e.Idgoodparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodparam");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodparamname).HasColumnName("idgoodparamname");

            //    entity.Property(e => e.Idparam).HasColumnName("idparam");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Paramgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("paramgroup");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodparams)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodparam_good");
            //});

            //modelBuilder.Entity<Goodparamname>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodparamname);

            //    entity.ToTable("goodparamname");

            //    entity.Property(e => e.Idgoodparamname)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodparamname");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Goodprice>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodprice)
            //        .HasName("goodprice_pkey");

            //    entity.ToTable("goodprice");

            //    entity.HasIndex(e => e.Idgood, "idx_goodprice_idgood");

            //    entity.Property(e => e.Idgoodprice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodprice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodprices)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodprice_good");
            //});

            //modelBuilder.Entity<Goodpricegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodpricegroup);

            //    entity.ToTable("goodpricegroup");

            //    entity.HasIndex(e => e.Guid, "UQ__goodpricegroup__5087998D")
            //        .IsUnique();

            //    entity.Property(e => e.Idgoodpricegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.K1Goodcolorgroupprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k1_goodcolorgroupprice");

            //    entity.Property(e => e.K2Goodcolorgroupprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k2_goodcolorgroupprice");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1toprice2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1toprice2");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.PriceGoodcolorgroupprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_goodcolorgroupprice");
            //});

            //modelBuilder.Entity<Goodpricehistory>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodpricehistory);

            //    entity.ToTable("goodpricehistory");

            //    entity.HasIndex(e => e.Idcolorgroupprice, "idx_goodpricehistory_idcolorgroupprice");

            //    entity.HasIndex(e => e.Idgood, "idx_goodpricehistory_idgood");

            //    entity.HasIndex(e => e.Idpeople, "idx_goodpricehistory_idpeople");

            //    entity.HasIndex(e => e.Idvalut, "idx_goodpricehistory_idvalut");

            //    entity.Property(e => e.Idgoodpricehistory)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodpricehistory");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.K1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k1");

            //    entity.Property(e => e.K2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k2");

            //    entity.Property(e => e.Planprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("planprice");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.HasOne(d => d.IdcolorgrouppriceNavigation)
            //        .WithMany(p => p.Goodpricehistories)
            //        .HasForeignKey(d => d.Idcolorgroupprice)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodpricehistory_colorgroupprice");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Goodpricehistories)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodpricehistory_good");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Goodpricehistories)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodpricehistory_people");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Goodpricehistories)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_goodpricehistory_valut");
            //});

            //modelBuilder.Entity<Goodservice>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodservice);

            //    entity.ToTable("goodservice");

            //    entity.HasIndex(e => e.Guid, "UQ__goodservice__6D23D83B")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idgoodservicegroup, "idx_goodservice_idgoodservicegroup");

            //    entity.HasIndex(e => e.Idvalut1, "idx_goodservice_idvalut1");

            //    entity.HasIndex(e => e.Idvalut2, "idx_goodservice_idvalut2");

            //    entity.HasIndex(e => e.Idvalut3, "idx_goodservice_idvalut3");

            //    entity.HasIndex(e => e.Idvalut4, "idx_goodservice_idvalut4");

            //    entity.HasIndex(e => e.Idvalut5, "idx_goodservice_idvalut5");

            //    entity.Property(e => e.Idgoodservice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Goodservicegroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservicegroup");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idgoodservicegroup).HasColumnName("idgoodservicegroup");

            //    entity.Property(e => e.Idvalut1).HasColumnName("idvalut1");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Ismy)
            //        .HasColumnName("ismy")
            //        .HasComment("Своя услуга");

            //    entity.Property(e => e.Isperc).HasColumnName("isperc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IdgoodservicegroupNavigation)
            //        .WithMany(p => p.Goodservices)
            //        .HasForeignKey(d => d.Idgoodservicegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_goodservice_goodservicegroup");

            //    entity.HasOne(d => d.Idvalut1Navigation)
            //        .WithMany(p => p.GoodserviceIdvalut1Navigations)
            //        .HasForeignKey(d => d.Idvalut1)
            //        .HasConstraintName("FK_goodservice_valut");

            //    entity.HasOne(d => d.Idvalut2Navigation)
            //        .WithMany(p => p.GoodserviceIdvalut2Navigations)
            //        .HasForeignKey(d => d.Idvalut2)
            //        .HasConstraintName("FK_goodservice_valut1");

            //    entity.HasOne(d => d.Idvalut3Navigation)
            //        .WithMany(p => p.GoodserviceIdvalut3Navigations)
            //        .HasForeignKey(d => d.Idvalut3)
            //        .HasConstraintName("FK_goodservice_valut2");

            //    entity.HasOne(d => d.Idvalut4Navigation)
            //        .WithMany(p => p.GoodserviceIdvalut4Navigations)
            //        .HasForeignKey(d => d.Idvalut4)
            //        .HasConstraintName("FK_goodservice_valut3");

            //    entity.HasOne(d => d.Idvalut5Navigation)
            //        .WithMany(p => p.GoodserviceIdvalut5Navigations)
            //        .HasForeignKey(d => d.Idvalut5)
            //        .HasConstraintName("FK_goodservice_valut4");
            //});

            //modelBuilder.Entity<Goodservicegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodservicegroup);

            //    entity.ToTable("goodservicegroup");

            //    entity.HasIndex(e => e.Guid, "UQ__goodservicegroup__6582B673")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_goodservicegroup_parentid");

            //    entity.Property(e => e.Idgoodservicegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodservicegroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Goodtype>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodtype);

            //    entity.ToTable("goodtype");

            //    entity.HasIndex(e => e.Guid, "UQ__goodtype__021EF521")
            //        .IsUnique();

            //    entity.Property(e => e.Idgoodtype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodtype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpos2).HasColumnName("numpos2");

            //    entity.Property(e => e.Numpos3).HasColumnName("numpos3");

            //    entity.Property(e => e.Typegroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("typegroup");
            //});

            //modelBuilder.Entity<Imp1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("imp_1");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(255)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(255)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Insertion>(entity =>
            //{
            //    entity.HasKey(e => e.Idinsertion);

            //    entity.ToTable("insertion");

            //    entity.HasIndex(e => e.Idglasselement, "idx_insertion_idglasselement");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_insertion_idsystemdetail");

            //    entity.Property(e => e.Idinsertion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinsertion");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Def).HasColumnName("def");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Id)
            //        .HasMaxLength(10)
            //        .HasColumnName("id")
            //        .IsFixedLength();

            //    entity.Property(e => e.Idglasselement).HasColumnName("idglasselement");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Sure).HasColumnName("sure");

            //    entity.HasOne(d => d.IdglasselementNavigation)
            //        .WithMany(p => p.Insertions)
            //        .HasForeignKey(d => d.Idglasselement)
            //        .HasConstraintName("FK_insertion_glasselement");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Insertions)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_insertion_insertion");
            //});

            //modelBuilder.Entity<Insertiondetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idinsertiondetail);

            //    entity.ToTable("insertiondetail");

            //    entity.HasIndex(e => e.Iderror, "idx_insertiondetail_iderror");

            //    entity.HasIndex(e => e.Idgood, "idx_insertiondetail_idgood");

            //    entity.HasIndex(e => e.Idinsertion, "idx_insertiondetail_idinsertion");

            //    entity.HasIndex(e => e.Idworkoper, "idx_insertiondetail_idworkoper");

            //    entity.Property(e => e.Idinsertiondetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinsertiondetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idinsertion).HasColumnName("idinsertion");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Insertiondetails)
            //        .HasForeignKey(d => d.Iderror)
            //        .HasConstraintName("FK_insertiondetail_iderror");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Insertiondetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_insertiondetail_good");

            //    entity.HasOne(d => d.IdinsertionNavigation)
            //        .WithMany(p => p.Insertiondetails)
            //        .HasForeignKey(d => d.Idinsertion)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_insertiondetail_insertion");

            //    entity.HasOne(d => d.IdworkoperNavigation)
            //        .WithMany(p => p.Insertiondetails)
            //        .HasForeignKey(d => d.Idworkoper)
            //        .HasConstraintName("FK_insertiondetail_idworkoper");
            //});

            //modelBuilder.Entity<Insertionparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idinsertionparam);

            //    entity.ToTable("insertionparam");

            //    entity.HasIndex(e => e.Idcolor, "idx_insertionparam_idcolor");

            //    entity.HasIndex(e => e.Iderror, "idx_insertionparam_iderror");

            //    entity.HasIndex(e => e.Idinsertion, "idx_insertionparam_idinsertion");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_insertionparam_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_insertionparam_idsystemdetail");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_insertionparam_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_insertionparam_idvariantparamtypevalue");

            //    entity.Property(e => e.Idinsertionparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinsertionparam");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idinsertion).HasColumnName("idinsertion");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Reverse).HasColumnName("reverse");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_insertionparam_color");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Iderror)
            //        .HasConstraintName("FK_insertionparam_error");

            //    entity.HasOne(d => d.IdinsertionNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idinsertion)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_insertionparam_insertion");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_insertionparam_modelparamvalue");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_insertionparam_systemdetail");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .HasConstraintName("FK_insertionparam_variantparamtype");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Insertionparams)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_insertionparam_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Insertionparamdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idinsertionparamdetail);

            //    entity.ToTable("insertionparamdetail");

            //    entity.HasIndex(e => e.Idcolor, "idx_insertionparamdetail_idcolor");

            //    entity.HasIndex(e => e.Idcoloraccordance, "idx_insertionparamdetail_idcoloraccordance");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_insertionparamdetail_idconstructiontype");

            //    entity.HasIndex(e => e.Idinsertiondetail, "idx_insertionparamdetail_idinsertiondetail");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_insertionparamdetail_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_insertionparamdetail_idsystemdetail");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_insertionparamdetail_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_insertionparamdetail_idvariantparamtypevalue");

            //    entity.Property(e => e.Idinsertionparamdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinsertionparamdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idcoloraccordance).HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idinsertiondetail).HasColumnName("idinsertiondetail");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(18, 9)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_insertionparamdetail_color");

            //    entity.HasOne(d => d.IdcoloraccordanceNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idcoloraccordance)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_insertionparamdetail_coloraccordance");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_insertionparamdetail_constructiontype");

            //    entity.HasOne(d => d.IdinsertiondetailNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idinsertiondetail)
            //        .HasConstraintName("FK_insertionparamdetail_insertiondetail");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_insertionparamdetail_modelparamvalue");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_insertionparamdetail_systemdetail");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_insertionparamdetail_variantparamtype");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Insertionparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .HasConstraintName("FK_insertionparamdetail_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Installdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldoc);

            //    entity.ToTable("installdoc");

            //    entity.HasIndex(e => e.Idaddress, "idx_installdoc_idaddress");

            //    entity.HasIndex(e => e.Idcustomer, "idx_installdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddestanation, "idx_installdoc_iddestanation");

            //    entity.HasIndex(e => e.Iddocoper, "idx_installdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_installdoc_iddocstate");

            //    entity.HasIndex(e => e.Idinstalldocgroup, "idx_installdoc_idinstalldocgroup");

            //    entity.HasIndex(e => e.Idorder, "idx_installdoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_installdoc_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_installdoc_idpeople2");

            //    entity.HasIndex(e => e.Idpeople3, "idx_installdoc_idpeople3");

            //    entity.Property(e => e.Idinstalldoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact")
            //        .HasComment("Контактное лицо");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idinstalldocgroup).HasColumnName("idinstalldocgroup");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Orderinstall).HasColumnName("orderinstall");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone")
            //        .HasComment("Телефон");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Idaddress)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_address");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_customer");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_destanation");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_installdoc_docstate");

            //    entity.HasOne(d => d.IdinstalldocgroupNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Idinstalldocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdoc_installdocgroup");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Installdocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.InstalldocIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdoc_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.InstalldocIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_installdoc_people1");

            //    entity.HasOne(d => d.Idpeople3Navigation)
            //        .WithMany(p => p.InstalldocIdpeople3Navigations)
            //        .HasForeignKey(d => d.Idpeople3)
            //        .HasConstraintName("FK_installdoc_people3");
            //});

            //modelBuilder.Entity<Installdocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocdiraction);

            //    entity.ToTable("installdocdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_installdocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idinstalldoc, "idx_installdocdiraction_idinstalldoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_installdocdiraction_idpeople");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_installdocdiraction_idpeopleedit");

            //    entity.Property(e => e.Idinstalldocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Installdocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdocdiraction_diraction");

            //    entity.HasOne(d => d.IdinstalldocNavigation)
            //        .WithMany(p => p.Installdocdiractions)
            //        .HasForeignKey(d => d.Idinstalldoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocdiraction_installdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.InstalldocdiractionIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_installdocdiraction_people");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.InstalldocdiractionIdpeopleeditNavigations)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_installdocdiraction_people2");
            //});

            //modelBuilder.Entity<Installdocdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocdiractionpeople);

            //    entity.ToTable("installdocdiractionpeople");

            //    entity.HasIndex(e => e.Idinstalldocdiraction, "idx_installdocdiractionpeople_idinstalldocdiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_installdocdiractionpeople_idpeople");

            //    entity.Property(e => e.Idinstalldocdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocdiraction).HasColumnName("idinstalldocdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IdinstalldocdiractionNavigation)
            //        .WithMany(p => p.Installdocdiractionpeople)
            //        .HasForeignKey(d => d.Idinstalldocdiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocdiractionpeople_installdocdiraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Installdocdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_installdocdiractionpeople_people");
            //});

            //modelBuilder.Entity<Installdocfile>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocfile);

            //    entity.ToTable("installdocfile");

            //    entity.HasIndex(e => e.Idinstalldoc, "idx_installdocfile_idinstalldoc");

            //    entity.Property(e => e.Idinstalldocfile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtfile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfile");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IdinstalldocNavigation)
            //        .WithMany(p => p.Installdocfiles)
            //        .HasForeignKey(d => d.Idinstalldoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocfile_installdoc");
            //});

            //modelBuilder.Entity<Installdocgoodservice>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocgoodservice);

            //    entity.ToTable("installdocgoodservice");

            //    entity.HasIndex(e => e.Idgoodservice, "idx_installdocgoodservice_idgoodservice");

            //    entity.HasIndex(e => e.Idinstalldoc, "idx_installdocgoodservice_idinstalldoc");

            //    entity.HasIndex(e => e.Idinstalldocpos, "idx_installdocgoodservice_idinstalldocpos");

            //    entity.HasIndex(e => e.Idorder, "idx_installdocgoodservice_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_installdocgoodservice_idorderitem");

            //    entity.Property(e => e.Idinstalldocgoodservice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocpos).HasColumnName("idinstalldocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdgoodserviceNavigation)
            //        .WithMany(p => p.Installdocgoodservices)
            //        .HasForeignKey(d => d.Idgoodservice)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocgoodservice_goodservice");

            //    entity.HasOne(d => d.IdinstalldocNavigation)
            //        .WithMany(p => p.Installdocgoodservices)
            //        .HasForeignKey(d => d.Idinstalldoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocgoodservice_installdocs");

            //    entity.HasOne(d => d.IdinstalldocposNavigation)
            //        .WithMany(p => p.Installdocgoodservices)
            //        .HasForeignKey(d => d.Idinstalldocpos)
            //        .HasConstraintName("FK_installdocgoodservice_installdocpos");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Installdocgoodservices)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocgoodservice_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Installdocgoodservices)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_installdocgoodservice_orderitem");
            //});

            //modelBuilder.Entity<Installdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocgroup);

            //    entity.ToTable("installdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_installdocgroup_parentid");

            //    entity.Property(e => e.Idinstalldocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Installdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocpos);

            //    entity.ToTable("installdocpos");

            //    entity.HasIndex(e => e.Idgood, "idx_installdocpos_idgood");

            //    entity.HasIndex(e => e.Idinstalldoc, "idx_installdocpos_idinstalldoc");

            //    entity.HasIndex(e => e.Idmodel, "idx_installdocpos_idmodel");

            //    entity.HasIndex(e => e.Idorderitem, "idx_installdocpos_idorderitem");

            //    entity.Property(e => e.Idinstalldocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Installdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocpos_good");

            //    entity.HasOne(d => d.IdinstalldocNavigation)
            //        .WithMany(p => p.Installdocpos)
            //        .HasForeignKey(d => d.Idinstalldoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocpos_installdoc");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Installdocpos)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocpos_model");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Installdocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_installdocpos_orderitem");
            //});

            //modelBuilder.Entity<Installdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idinstalldocsign);

            //    entity.ToTable("installdocsign");

            //    entity.HasIndex(e => e.Idinstalldoc, "idx_installdocsign_idinstalldoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_installdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_installdocsign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_installdocsign_idsignvalue");

            //    entity.Property(e => e.Idinstalldocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idinstalldocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdinstalldocNavigation)
            //        .WithMany(p => p.Installdocsigns)
            //        .HasForeignKey(d => d.Idinstalldoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_installdocsign_installdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Installdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Installdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_installdocsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Installdocsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_installdocsign_signvalue");
            //});

            //modelBuilder.Entity<Invoicesign>(entity =>
            //{
            //    entity.HasKey(e => e.Idinvoicesign)
            //        .HasName("PK_InvoiceSign_column1");

            //    entity.ToTable("invoicesign");

            //    entity.HasComment("Определения признака«Атрибут для документа Расходная накладная ПП");

            //    entity.Property(e => e.Idinvoicesign).HasColumnName("idinvoicesign");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocoperdoc)
            //        .HasColumnName("iddocoperdoc")
            //        .HasDefaultValueSql("((115))");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Signvalue)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue");
            //});

            //modelBuilder.Entity<Jopa>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("jopas");

            //    entity.Property(e => e.Ch).HasColumnName("ch");

            //    entity.Property(e => e.Color)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("color");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Customer)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DtOtgr)
            //        .HasMaxLength(36)
            //        .IsUnicode(false)
            //        .HasColumnName("dt_otgr");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Isstandart).HasColumnName("isstandart");

            //    entity.Property(e => e.NumposMake).HasColumnName("numpos_make");

            //    entity.Property(e => e.OName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("o_name");

            //    entity.Property(e => e.OiName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("oi_name");

            //    entity.Property(e => e.OiNumpos)
            //        .HasMaxLength(190)
            //        .IsUnicode(false)
            //        .HasColumnName("oi_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.ParentName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("parent_name");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Source)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("source");

            //    entity.Property(e => e.Toner).HasColumnName("toner");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<LamGroupOrdersJuly>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Lam_group_orders_july");

            //    entity.Property(e => e.Colors)
            //        .IsUnicode(false)
            //        .HasColumnName("colors");

            //    entity.Property(e => e.Countgroups).HasColumnName("countgroups");

            //    entity.Property(e => e.Groups)
            //        .IsUnicode(false)
            //        .HasColumnName("groups");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Itemcnt).HasColumnName("itemcnt");

            //    entity.Property(e => e.Iteration).HasColumnName("iteration");

            //    entity.Property(e => e.Minutes).HasColumnName("minutes");

            //    entity.Property(e => e.Neworderdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("neworderdate");

            //    entity.Property(e => e.Orderdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("orderdate");

            //    entity.Property(e => e.Thick).HasColumnName("thick");
            //});

            //modelBuilder.Entity<LamOrdersJuly>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Lam_orders_july");

            //    entity.Property(e => e.ColorLam)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("color_lam");

            //    entity.Property(e => e.Colorgroupprice).HasColumnName("colorgroupprice");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Iteration).HasColumnName("iteration");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.NewOrderDate).HasColumnType("datetime");

            //    entity.Property(e => e.Orderdate).HasColumnType("datetime");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.Property(e => e.SideLam)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("side_lam");

            //    entity.Property(e => e.Thick).HasColumnName("thick");
            //});

            //modelBuilder.Entity<Lamorder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("lamorder");

            //    entity.Property(e => e.Colorside)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("COLORSIDE");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("COMMENT");

            //    entity.Property(e => e.Idcolorgroupprice)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDCOLORGROUPPRICE");

            //    entity.Property(e => e.Idlamsortgroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDLAMSORTGROUP");

            //    entity.Property(e => e.Idmodelpart)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDMODELPART");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");

            //    entity.Property(e => e.Pos)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("POS");
            //});

            //modelBuilder.Entity<Lamordergroup>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("lamordergroup");

            //    entity.Property(e => e.Lzconfigid)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("LZCONFIGID");

            //    entity.Property(e => e.Lzordergroupid)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("LZORDERGROUPID");

            //    entity.Property(e => e.Ordergroupname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("ORDERGROUPNAME");

            //    entity.Property(e => e.Pos)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("POS");
            //});

            //modelBuilder.Entity<Lamordergroupdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("lamordergroupdetail");

            //    entity.Property(e => e.Colorside)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("COLORSIDE");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("COMMENT");

            //    entity.Property(e => e.Idcolorgroupprice)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDCOLORGROUPPRICE");

            //    entity.Property(e => e.Idlamsortgroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDLAMSORTGROUP");

            //    entity.Property(e => e.Idmodelpart)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("IDMODELPART");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");

            //    entity.Property(e => e.Pos)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("POS");
            //});

            //modelBuilder.Entity<Localization>(entity =>
            //{
            //    entity.HasKey(e => e.Formname);

            //    entity.ToTable("localization");

            //    entity.Property(e => e.Formname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("formname");

            //    entity.Property(e => e.Data)
            //        .HasColumnType("xml")
            //        .HasColumnName("data");

            //    entity.Property(e => e.Version)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("version");
            //});

            //modelBuilder.Entity<Localizedstring>(entity =>
            //{
            //    entity.HasKey(e => e.Idlocalizedstring)
            //        .IsClustered(false);

            //    entity.ToTable("localizedstring");

            //    entity.HasIndex(e => e.Code, "Index_Code")
            //        .IsClustered();

            //    entity.Property(e => e.Idlocalizedstring)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlocalizedstring");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(256)
            //        .HasColumnName("code");

            //    entity.Property(e => e.DefaultVal).HasColumnName("default_val");

            //    entity.Property(e => e.LocaleVal).HasColumnName("locale_val");

            //    entity.Property(e => e.Type).HasColumnName("type");
            //});

            //modelBuilder.Entity<LockDay>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idfinparam, e.Lockdate })
            //        .HasName("pk_LockDay");

            //    entity.ToTable("LockDay");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Lockdate).HasColumnName("lockdate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DtUpdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_update")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Enabled).HasColumnName("enabled");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");
            //});

            //modelBuilder.Entity<Lockdate>(entity =>
            //{
            //    entity.HasKey(e => e.Idlockdate);

            //    entity.ToTable("lockdate");

            //    entity.HasIndex(e => e.Idfinparam, "idx_lockdate_idfinparam");

            //    entity.Property(e => e.Idlockdate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlockdate");

            //    entity.Property(e => e.Bulkdate).HasColumnName("bulkdate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DtUpdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_update");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Retaildate).HasColumnName("retaildate");

            //    entity.Property(e => e.Type).HasColumnName("type");
            //});

            //modelBuilder.Entity<Lockexcept>(entity =>
            //{
            //    entity.HasKey(e => e.Idlockexcept);

            //    entity.ToTable("lockexcept");

            //    entity.HasIndex(e => e.Idorder, "idx_lockexcept_idorder");

            //    entity.Property(e => e.Idlockexcept)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlockexcept");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtagreed)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtagreed");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.IsGlass).HasColumnName("isGlass");

            //    entity.Property(e => e.IsPvh).HasColumnName("isPvh");
            //});

            //modelBuilder.Entity<Lockmetal>(entity =>
            //{
            //    entity.HasKey(e => e.Idlockmetal);

            //    entity.ToTable("lockmetal");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_lockmetal_idconstructiontype");

            //    entity.Property(e => e.Idlockmetal)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlockmetal");

            //    entity.Property(e => e.Closedate).HasColumnName("closedate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DtUpdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_update");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");
            //});

            //modelBuilder.Entity<Mailinglist>(entity =>
            //{
            //    entity.HasKey(e => e.Idmailinglist);

            //    entity.ToTable("mailinglist");

            //    entity.HasIndex(e => e.Idmailinglistsettings, "idx_mailinglist_idmailinglistsettings");

            //    entity.HasIndex(e => e.Idreport, "idx_mailinglist_idreport");

            //    entity.HasIndex(e => e.Name, "idx_name");

            //    entity.Property(e => e.Idmailinglist)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmailinglist");

            //    entity.Property(e => e.Defaulttext)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("defaulttext");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filename)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("filename");

            //    entity.Property(e => e.Filetype).HasColumnName("filetype");

            //    entity.Property(e => e.Friday).HasColumnName("friday");

            //    entity.Property(e => e.Idmailinglistsettings).HasColumnName("idmailinglistsettings");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Monday).HasColumnName("monday");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Query)
            //        .IsUnicode(false)
            //        .HasColumnName("query");

            //    entity.Property(e => e.Saturday).HasColumnName("saturday");

            //    entity.Property(e => e.Sunday).HasColumnName("sunday");

            //    entity.Property(e => e.Thursday).HasColumnName("thursday");

            //    entity.Property(e => e.Timepoint1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("timepoint1");

            //    entity.Property(e => e.Timepoint2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("timepoint2");

            //    entity.Property(e => e.Timepoint3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("timepoint3");

            //    entity.Property(e => e.Title)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("title");

            //    entity.Property(e => e.Tuesday).HasColumnName("tuesday");

            //    entity.Property(e => e.Type).HasColumnName("type");

            //    entity.Property(e => e.Wednesday).HasColumnName("wednesday");

            //    entity.HasOne(d => d.IdmailinglistsettingsNavigation)
            //        .WithMany(p => p.Mailinglists)
            //        .HasForeignKey(d => d.Idmailinglistsettings)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_mailinglist_smtpsettings");

            //    entity.HasOne(d => d.IdreportNavigation)
            //        .WithMany(p => p.Mailinglists)
            //        .HasForeignKey(d => d.Idreport)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_mailinglist_report");
            //});

            //modelBuilder.Entity<Mailinglistondemand>(entity =>
            //{
            //    entity.HasKey(e => e.Idmailinglistondemand);

            //    entity.ToTable("mailinglistondemand");

            //    entity.HasIndex(e => e.Idcustomer, "idx_mailinglistondemand_idcustomer");

            //    entity.HasIndex(e => e.Idmailinglist, "idx_mailinglistondemand_idmailinglist");

            //    entity.HasIndex(e => e.Idpeople, "idx_mailinglistondemand_idpeople");

            //    entity.Property(e => e.Idmailinglistondemand)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmailinglistondemand");

            //    entity.Property(e => e.Completed).HasColumnName("completed");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idmailinglist).HasColumnName("idmailinglist");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Message)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("message");

            //    entity.Property(e => e.Params)
            //        .HasColumnType("text")
            //        .HasColumnName("params");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Mailinglistondemands)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_mailinglistondemand_customer");

            //    entity.HasOne(d => d.IdmailinglistNavigation)
            //        .WithMany(p => p.Mailinglistondemands)
            //        .HasForeignKey(d => d.Idmailinglist)
            //        .HasConstraintName("FK_mailinglistondemand_mailinglist");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Mailinglistondemands)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_mailinglistondemand_people");
            //});

            //modelBuilder.Entity<Mailinglistsetting>(entity =>
            //{
            //    entity.HasKey(e => e.Idmailinglistsettings)
            //        .HasName("PK_smtpsettings");

            //    entity.ToTable("mailinglistsettings");

            //    entity.HasIndex(e => e.Name, "idx_name");

            //    entity.Property(e => e.Idmailinglistsettings)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmailinglistsettings");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Emailfrom)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("emailfrom");

            //    entity.Property(e => e.Gatetype).HasColumnName("gatetype");

            //    entity.Property(e => e.Login)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("login");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Password)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("password");

            //    entity.Property(e => e.Port).HasColumnName("port");

            //    entity.Property(e => e.Type).HasColumnName("type");

            //    entity.Property(e => e.Usessl).HasColumnName("usessl");
            //});

            //modelBuilder.Entity<Mailinglistuser>(entity =>
            //{
            //    entity.HasKey(e => e.Idmailinglistusers);

            //    entity.ToTable("mailinglistusers");

            //    entity.HasIndex(e => e.Idmailinglist, "idx_idmailinglist");

            //    entity.HasIndex(e => e.Idcustomer, "idx_mailinglistusers_idcustomer");

            //    entity.HasIndex(e => e.Idpeople, "idx_mailinglistusers_idpeople");

            //    entity.Property(e => e.Idmailinglistusers)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmailinglistusers");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idmailinglist).HasColumnName("idmailinglist");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Mailinglistusers)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_mailinglistusers_customer");

            //    entity.HasOne(d => d.IdmailinglistNavigation)
            //        .WithMany(p => p.Mailinglistusers)
            //        .HasForeignKey(d => d.Idmailinglist)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_mailinglistusers_mailinglist");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Mailinglistusers)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_mailinglistusers_people");
            //});

            //modelBuilder.Entity<Manufactdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdiraction)
            //        .HasName("pk_manufactdiraction");

            //    entity.ToTable("manufactdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_manufactdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdiraction_idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Manufactdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdiraction_diraction");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdiractions)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdiraction_manufactdoc");
            //});

            //modelBuilder.Entity<Manufactdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdiractionpeople)
            //        .HasName("PK_manufactdocdiractionpeople");

            //    entity.ToTable("manufactdiractionpeople");

            //    entity.HasIndex(e => e.Idpeople, "idx_manufactdiractionpeople_idpeople");

            //    entity.Property(e => e.Idmanufactdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdiraction).HasColumnName("idmanufactdiraction");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Manufactdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_manufactdocdiractionpeople_people");
            //});

            //modelBuilder.Entity<Manufactdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoc);

            //    entity.ToTable("manufactdoc");

            //    entity.HasIndex(e => e.Dtcreate, "idx_manufactdoc_dtcreate");

            //    entity.HasIndex(e => e.Idcustomer, "idx_manufactdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_manufactdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_manufactdoc_iddocstate");

            //    entity.HasIndex(e => e.Idmanufactdocgroup, "idx_manufactdoc_idmanufactdocgroup");

            //    entity.HasIndex(e => e.Idpeople, "idx_manufactdoc_idpeople");

            //    entity.HasIndex(e => e.Name, "ix_da_manufactdoc_name");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasComment("Дата создания задания");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата редактирования задания");

            //    entity.Property(e => e.Flownum).HasColumnName("flownum");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdocgroup).HasColumnName("idmanufactdocgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Ссылка на сотрудника, редактировавшего заказ");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Partnum).HasColumnName("partnum");

            //    entity.Property(e => e.Qugroup)
            //        .HasColumnName("qugroup")
            //        .HasComment("Количество порций");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Shiftnum).HasColumnName("shiftnum");

            //    entity.Property(e => e.Workshopnum).HasColumnName("workshopnum");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Manufactdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdoc_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Manufactdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_manufactdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Manufactdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_manufactdoc_docstate");

            //    entity.HasOne(d => d.IdmanufactdocgroupNavigation)
            //        .WithMany(p => p.Manufactdocs)
            //        .HasForeignKey(d => d.Idmanufactdocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdoc_manufactdocgroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Manufactdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_manufactdoc_people");
            //});

            //modelBuilder.Entity<ManufactdocError>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("manufactdoc_error");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Manufactdocname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdocname");
            //});

            //modelBuilder.Entity<Manufactdoccar>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoccar);

            //    entity.ToTable("manufactdoccar");

            //    entity.HasIndex(e => e.Idcar, "idx_manufactdoccar_idcar");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdoccar_idmanufactdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_manufactdoccar_idpeople");

            //    entity.Property(e => e.Idmanufactdoccar)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Cost)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("cost");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Mileage)
            //        .HasColumnType("numeric(15, 3)")
            //        .HasColumnName("mileage");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Run)
            //        .HasColumnName("run")
            //        .HasDefaultValueSql("((1))");

            //    entity.HasOne(d => d.IdcarNavigation)
            //        .WithMany(p => p.Manufactdoccars)
            //        .HasForeignKey(d => d.Idcar)
            //        .HasConstraintName("FK_manufactdoccar_car");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdoccars)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_manufactdoccar_manufactdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Manufactdoccars)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_manufactdoccar_people");
            //});

            //modelBuilder.Entity<Manufactdoccomment>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoccomment);

            //    entity.ToTable("manufactdoccomment");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdoccomment_idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdoccomment)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoccomment");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdoccomments)
            //        .HasForeignKey(d => d.Idmanufactdoc);
            //});

            //modelBuilder.Entity<Manufactdocgoodin>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocgoodin);

            //    entity.ToTable("manufactdocgoodin");

            //    entity.HasComment("Входящие остатки производственного задания");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocgoodin_idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocgoodin)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocgoodin")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удаления");

            //    entity.Property(e => e.Height)
            //        .HasColumnName("height")
            //        .HasComment("Высота");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .HasColumnName("idmanufactdoc")
            //        .HasComment("Ссылка на производственное задание");

            //    entity.Property(e => e.Marking)
            //        .IsUnicode(false)
            //        .HasColumnName("marking")
            //        .HasComment("Артикул материала");

            //    entity.Property(e => e.Qu)
            //        .HasColumnName("qu")
            //        .HasComment("Количество");

            //    entity.Property(e => e.Thick)
            //        .HasColumnName("thick")
            //        .HasComment("Длина");

            //    entity.Property(e => e.Width)
            //        .HasColumnName("width")
            //        .HasComment("Ширина");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocgoodins)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocgoodin_manufactdoc");
            //});

            //modelBuilder.Entity<Manufactdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocgroup);

            //    entity.ToTable("manufactdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_manufactdocgroup_parentid");

            //    entity.Property(e => e.Idmanufactdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Manufactdocnopyramid>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocnopyramid);

            //    entity.ToTable("manufactdocnopyramid");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocnopyramid_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_manufactdocnopyramid_idorder");

            //    entity.Property(e => e.Idmanufactdocnopyramid)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocnopyramid");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocnopyramids)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_manufactdocnopyramid_manufactdoc");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Manufactdocnopyramids)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_manufactdocnopyramid_orders");
            //});

            //modelBuilder.Entity<Manufactdocorder>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocorder);

            //    entity.ToTable("manufactdocorder");

            //    entity.HasIndex(e => e.Idcar, "idx_manufactdocorder_idcar");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocorder_idmanufactdoc");

            //    entity.HasIndex(e => e.Idorder, "idx_manufactdocorder_idorder");

            //    entity.Property(e => e.Idmanufactdocorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocorder");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Colorvalue).HasColumnName("colorvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deliverytime");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Nopyramid).HasColumnName("nopyramid");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.Property(e => e.Run).HasColumnName("run");

            //    entity.Property(e => e.Sort).HasColumnName("sort");

            //    entity.HasOne(d => d.IdcarNavigation)
            //        .WithMany(p => p.Manufactdocorders)
            //        .HasForeignKey(d => d.Idcar)
            //        .HasConstraintName("FK_manufactdocorder_car");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocorders)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_manufactdocorder_manufactdoc");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Manufactdocorders)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_manufactdocorder_orders");
            //});

            //modelBuilder.Entity<Manufactdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocpos);

            //    entity.ToTable("manufactdocpos");

            //    entity.HasIndex(e => e.Barcode, "idx_manufactdocpos_barcode");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocpos_idmanufactdoc_inc");

            //    entity.HasIndex(e => e.Idmodelcalc, "idx_manufactdocpos_idmodelcalc");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "idx_manufactdocpos_idorderitem");

            //    entity.HasIndex(e => e.Parentid, "idx_manufactdocpos_parentid");

            //    entity.HasIndex(e => e.Idordergood, "ind_manufactdocpos_idordergood");

            //    entity.Property(e => e.Idmanufactdocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idordergood)
            //        .HasColumnName("idordergood")
            //        .HasComment("Ссылка на материал к позиции");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Manufactname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactname");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpyramid).HasColumnName("numpyramid");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quready)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("quready")
            //        .HasComment("Количество изготовленных");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Manufactdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpos_good");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocpos)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpos_manufactdoc");

            //    entity.HasOne(d => d.IdordergoodNavigation)
            //        .WithMany(p => p.Manufactdocpos)
            //        .HasForeignKey(d => d.Idordergood)
            //        .HasConstraintName("FK_manufactdocpos_ordergood");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Manufactdocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpos_orderitem");
            //});

            //modelBuilder.Entity<Manufactdocpossign>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocpossign)
            //        .HasName("pk_manufactdocpossign");

            //    entity.ToTable("manufactdocpossign");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_manufactdocpossign_idmanufactdocpos");

            //    entity.HasIndex(e => new { e.Idmanufactdocpos, e.Idmanufactdocpossign }, "idx_manufactdocpossign_idmanufactdocpos_ar");

            //    entity.HasIndex(e => e.Idpeople, "idx_manufactdocpossign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_manufactdocpossign_idsign");

            //    entity.HasIndex(e => new { e.Idsign, e.Dtvalue }, "idx_tr_manufactdocpossign_idsign_dtvalue");

            //    entity.HasIndex(e => new { e.Idsign, e.Dtcreate }, "ix_da_manufactdocpossign_idsign_dtcreate_includes");

            //    entity.Property(e => e.Idmanufactdocpossign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocpossign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Manufactdocpossigns)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactsign_manufactdocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Manufactdocpossigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_manufactdocpossign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Manufactdocpossigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpossign_sign");
            //});

            //modelBuilder.Entity<Manufactdocpyramid>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocpyramid);

            //    entity.ToTable("manufactdocpyramid");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocpyramid_idmanufactdoc");

            //    entity.HasIndex(e => e.Idmanufactdoccar, "idx_manufactdocpyramid_idmanufactdoccar");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_manufactdocpyramid_idmanufactdocpos");

            //    entity.Property(e => e.Idmanufactdocpyramid)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdoccar).HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpyramid).HasColumnName("numpyramid");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Side).HasColumnName("side");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocpyramids)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_manufactdocpyramid_manufactdoc");

            //    entity.HasOne(d => d.IdmanufactdoccarNavigation)
            //        .WithMany(p => p.Manufactdocpyramids)
            //        .HasForeignKey(d => d.Idmanufactdoccar)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpyramid_manufactdoccar");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Manufactdocpyramids)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpyramid_manufactdocpos");
            //});

            //modelBuilder.Entity<Manufactdocpyramidpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocpyramidpos)
            //        .HasName("PK_manufctpos");

            //    entity.ToTable("manufactdocpyramidpos");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactdocpyramidpos_idmanufactdoc");

            //    entity.HasIndex(e => e.Idmanufactdoccar, "idx_manufactdocpyramidpos_idmanufactdoccar");

            //    entity.HasIndex(e => e.Idmanufactdocpyramid, "idx_manufactdocpyramidpos_idmanufactdocpyramid");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "idx_manufactdocpyramidpos_idorderitem");

            //    entity.HasIndex(e => e.IdmanufactdocposPar, "manufactdocpyramidpos_idmanufactdocpos_par_IDX");

            //    entity.Property(e => e.Idmanufactdocpyramidpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocpyramidpos");

            //    entity.Property(e => e.Active)
            //        .IsRequired()
            //        .HasColumnName("active")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.Col).HasColumnName("col");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdoccar).HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.IdmanufactdocposPar).HasColumnName("idmanufactdocpos_par");

            //    entity.Property(e => e.Idmanufactdocpyramid).HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Orient).HasColumnName("orient");

            //    entity.Property(e => e.Row).HasColumnName("row");

            //    entity.Property(e => e.Side).HasColumnName("side");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocpyramidpos)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_manufactdocpyramidpos_manufactdoc");

            //    entity.HasOne(d => d.IdmanufactdoccarNavigation)
            //        .WithMany(p => p.Manufactdocpyramidpos)
            //        .HasForeignKey(d => d.Idmanufactdoccar)
            //        .HasConstraintName("FK_manufactdocpyramidpos_manufactdoccar");

            //    entity.HasOne(d => d.IdmanufactdocposParNavigation)
            //        .WithMany(p => p.Manufactdocpyramidpos)
            //        .HasForeignKey(d => d.IdmanufactdocposPar)
            //        .HasConstraintName("manufactdocpyramidpos_manufactdocpos_FK");

            //    entity.HasOne(d => d.Idmanufactdocpyram)
            //        .WithMany(p => p.Manufactdocpyramidpos)
            //        .HasForeignKey(d => d.Idmanufactdocpyramid)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactdocpyramidpos_manufactdocpyramid");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Manufactdocpyramidpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_manufactdocpyramidpos_orderitem");
            //});

            //modelBuilder.Entity<Manufactdocpyramidsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocpyramidsign);

            //    entity.ToTable("manufactdocpyramidsign");

            //    entity.Property(e => e.Idmanufactdocpyramidsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocpyramidsign");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Idmanufactdocpyramid).HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");
            //});

            //modelBuilder.Entity<Manufactdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdocsign)
            //        .HasName("pk_manufactsign");

            //    entity.ToTable("manufactdocsign");

            //    entity.HasIndex(e => e.Idorderitem, "idx_manufactdocsign_idorderitem");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_manufactsign_idmanufactdoc");

            //    entity.HasIndex(e => e.Idsign, "idx_manufactsign_idsign");

            //    entity.HasIndex(e => new { e.Idsign, e.Dtvalue }, "ix_da_manufactdocsign_idsign_dtvalue_includes");

            //    entity.Property(e => e.Idmanufactdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdocsign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.Manufactdocsigns)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactsign_manufactdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Manufactdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_manufactsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Manufactdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .HasConstraintName("FK_manufactsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Manufactdocsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactsign_signvalue");
            //});

            //modelBuilder.Entity<Manufactsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("manufactsign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactsign).HasColumnName("idmanufactsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<Markingfilter>(entity =>
            //{
            //    entity.HasKey(e => e.Idmarkingfilter);

            //    entity.ToTable("markingfilter");

            //    entity.Property(e => e.Idmarkingfilter)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmarkingfilter");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmarkingfiltertype).HasColumnName("idmarkingfiltertype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Markingfilterdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idmarkingfilterdetail);

            //    entity.ToTable("markingfilterdetail");

            //    entity.Property(e => e.Idmarkingfilterdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmarkingfilterdetail");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmarkingfilter).HasColumnName("idmarkingfilter");
            //});

            //modelBuilder.Entity<Markingfiltertype>(entity =>
            //{
            //    entity.HasKey(e => e.Idmarkingfiltertype);

            //    entity.ToTable("markingfiltertype");

            //    entity.Property(e => e.Idmarkingfiltertype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmarkingfiltertype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MeSostCil>(entity =>
            //{
            //    entity.HasKey(e => e.Idcil);

            //    entity.ToTable("me_sost_cil");

            //    entity.HasComment("цилинры для замков");

            //    entity.Property(e => e.Idcil)
            //        .HasColumnName("idcil")
            //        .HasComment("ключ");

            //    entity.Property(e => e.Cil)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("cil")
            //        .HasComment("цилиндр строкой");

            //    entity.Property(e => e.Idconstructiontype)
            //        .HasColumnName("idconstructiontype")
            //        .HasComment("конструкция");

            //    entity.Property(e => e.Idgood)
            //        .HasColumnName("idgood")
            //        .HasComment("материал");

            //    entity.Property(e => e.IdmodelparamvalueCf)
            //        .HasColumnName("idmodelparamvalue_cf")
            //        .HasComment("цвет фурнитуры");

            //    entity.Property(e => e.Nakl)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("nakl")
            //        .HasComment("накладка на цилиндр строкой");
            //});

            //modelBuilder.Entity<MeSostColgood>(entity =>
            //{
            //    entity.HasKey(e => e.Idcolgoo);

            //    entity.ToTable("me_sost_colgood");

            //    entity.HasComment("цвет_материал");

            //    entity.Property(e => e.Idcolgoo)
            //        .HasColumnName("idcolgoo")
            //        .HasComment("ключ");

            //    entity.Property(e => e.Idcolor)
            //        .HasColumnName("idcolor")
            //        .HasComment("цвет");

            //    entity.Property(e => e.Idgood)
            //        .HasColumnName("idgood")
            //        .HasComment("материал");

            //    entity.Property(e => e.Lak)
            //        .HasColumnName("lak")
            //        .HasComment("нужен лак");

            //    entity.Property(e => e.Tp)
            //        .HasColumnName("tp")
            //        .HasDefaultValueSql("((1))")
            //        .HasComment("тип");
            //});

            //modelBuilder.Entity<MeSostFrezi>(entity =>
            //{
            //    entity.HasKey(e => e.Idfre);

            //    entity.ToTable("me_sost_frezi");

            //    entity.HasComment("связь внутр накладки/внутр фрезеровки/материал");

            //    entity.HasIndex(e => new { e.IdmodelparamvalueN, e.Idgood, e.IdmodelparamvalueF }, "uq_me_fr")
            //        .IsUnique();

            //    entity.Property(e => e.Idfre)
            //        .HasColumnName("idfre")
            //        .HasComment("pk");

            //    entity.Property(e => e.Idgood)
            //        .HasColumnName("idgood")
            //        .HasComment("материал");

            //    entity.Property(e => e.IdmodelparamvalueF)
            //        .HasColumnName("idmodelparamvalue_f")
            //        .HasComment("фрезеровка");

            //    entity.Property(e => e.IdmodelparamvalueN)
            //        .HasColumnName("idmodelparamvalue_n")
            //        .HasComment("накладка");

            //    entity.Property(e => e.Qu)
            //        .HasColumnName("qu")
            //        .HasDefaultValueSql("((1))")
            //        .HasComment("колво");

            //    entity.Property(e => e.Tp)
            //        .HasColumnName("tp")
            //        .HasDefaultValueSql("((1))")
            //        .HasComment("тип");
            //});

            //modelBuilder.Entity<Measure>(entity =>
            //{
            //    entity.HasKey(e => e.Idmeasure)
            //        .HasName("pk_measure");

            //    entity.ToTable("measure");

            //    entity.HasIndex(e => e.Guid, "UQ__measure__301AC9FB")
            //        .IsUnique();

            //    entity.Property(e => e.Idmeasure)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmeasure");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Factor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("factor");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<MeasureCopy>(entity =>
            //{
            //    entity.HasKey(e => e.Idmeasure)
            //        .HasName("pk_measure_copy");

            //    entity.ToTable("measure_copy");

            //    entity.HasIndex(e => e.Guid, "UQ__measure___497F6CB53D6649BC")
            //        .IsUnique();

            //    entity.Property(e => e.Idmeasure)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmeasure");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Factor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("factor");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Message>(entity =>
            //{
            //    entity.HasKey(e => e.Idmessage);

            //    entity.ToTable("messages");

            //    entity.HasIndex(e => e.Iddepartment, "idx_messages_iddepartment");

            //    entity.HasIndex(e => e.Idmessagetype, "idx_messages_idmessagetype");

            //    entity.HasIndex(e => e.Idpeople, "idx_messages_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_messages_idpeople2");

            //    entity.Property(e => e.Idmessage)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmessage");

            //    entity.Property(e => e.Addfile).HasColumnName("addfile");

            //    entity.Property(e => e.Addfilename)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addfilename");

            //    entity.Property(e => e.Answer)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("answer");

            //    entity.Property(e => e.Bodytext)
            //        .IsUnicode(false)
            //        .HasColumnName("bodytext");

            //    entity.Property(e => e.Check).HasColumnName("check");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtaction)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtaction");

            //    entity.Property(e => e.Dtcheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcheck");

            //    entity.Property(e => e.Dtread)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtread");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Idmessagetype).HasColumnName("idmessagetype");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Isread).HasColumnName("isread");

            //    entity.Property(e => e.Messagetext)
            //        .HasColumnType("text")
            //        .HasColumnName("messagetext");

            //    entity.HasOne(d => d.IddepartmentNavigation)
            //        .WithMany(p => p.Messages)
            //        .HasForeignKey(d => d.Iddepartment)
            //        .HasConstraintName("FK_messages_department");

            //    entity.HasOne(d => d.IdmessagetypeNavigation)
            //        .WithMany(p => p.Messages)
            //        .HasForeignKey(d => d.Idmessagetype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_messages_messagetype");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MessageIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_messages_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.MessageIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_messages_people1");
            //});

            //modelBuilder.Entity<Messagetype>(entity =>
            //{
            //    entity.HasKey(e => e.Idmessagetype);

            //    entity.ToTable("messagetype");

            //    entity.HasIndex(e => e.Guid, "UQ__messagetype__7E4E643D")
            //        .IsUnique();

            //    entity.Property(e => e.Idmessagetype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmessagetype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");
            //});

            //modelBuilder.Entity<MfsList>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("mfs_list");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Worked).HasColumnName("worked");
            //});

            //modelBuilder.Entity<Model>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodel)
            //        .HasName("pk_model");

            //    entity.ToTable("model");

            //    entity.HasIndex(e => e.Idorder, "idx_model_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_model_idorderitem");

            //    entity.Property(e => e.Idmodel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodel");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idconstruction).HasColumnName("idconstruction");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Models)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_model_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Models)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_model_orderitem");
            //});

            //modelBuilder.Entity<Modelbigpic>(entity =>
            //{
            //    entity.HasKey(e => e.Idbigpic)
            //        .HasName("PK__modelbig__B7A50616EF02B9F3");

            //    entity.ToTable("modelbigpic");

            //    entity.HasComment("хранит больший картинки для модели");

            //    entity.HasIndex(e => e.Idorderitem, "ix_idorderitem");

            //    entity.Property(e => e.Idbigpic).HasColumnName("idbigpic");

            //    entity.Property(e => e.Idorderitem)
            //        .HasColumnName("idorderitem")
            //        .HasComment("записи удаляются через тригер на orderitem");

            //    entity.Property(e => e.Strimage)
            //        .IsUnicode(false)
            //        .HasColumnName("strimage");
            //});

            //modelBuilder.Entity<Modelcalc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelcalc)
            //        .HasName("pk_modelcalc");

            //    entity.ToTable("modelcalc");

            //    entity.HasIndex(e => e.Addstr, "IDX_modelcalc_addstr");

            //    entity.HasIndex(e => e.Idmodel, "idx_modelcalc_idmodel");

            //    entity.HasIndex(e => e.Idorder, "idx_modelcalc_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_modelcalc_idorderitem");

            //    entity.HasIndex(e => e.Idgood, "ix_modelcalc_idgood_includes");

            //    entity.Property(e => e.Idmodelcalc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Addbool).HasColumnName("addbool");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(20, 5)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("quinmanufact");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Smbasecrypt).HasColumnName("smbasecrypt");

            //    entity.Property(e => e.Smcrypt).HasColumnName("smcrypt");

            //    entity.Property(e => e.Sourcetype).HasColumnName("sourcetype");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("waste");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Modelcalcs)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelcalc_good");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Modelcalcs)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelcalc_model");
            //});

            //modelBuilder.Entity<Modelparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparam)
            //        .HasName("pk_modelparam");

            //    entity.ToTable("modelparam");

            //    entity.HasIndex(e => e.Guid, "UQ__modelparam__2C4A3917")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcolor, "idx_modelparam_idcolor");

            //    entity.HasIndex(e => e.Idmodelparamgroup, "idx_modelparam_idmodelparamgroup");

            //    entity.HasIndex(e => e.Idmodelpart, "idx_modelparam_idmodelpart");

            //    entity.HasIndex(e => e.Idmodelpartroot, "idx_modelparam_idmodelpartroot");

            //    entity.HasIndex(e => e.Idversion, "idx_modelparam_idversion");

            //    entity.Property(e => e.Idmodelparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparam");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Colorfilter)
            //        .IsUnicode(false)
            //        .HasColumnName("colorfilter");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrtypelist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("constrtypelist");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Furnsystemlist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("furnsystemlist");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idmodelparamgroup)
            //        .HasColumnName("idmodelparamgroup")
            //        .HasComment("Группа параметров");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idmodelpartroot).HasColumnName("idmodelpartroot");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Iscolor)
            //        .HasColumnName("iscolor")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Isdesignerprocess).HasColumnName("isdesignerprocess");

            //    entity.Property(e => e.Isint1)
            //        .HasColumnName("isint1")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Isint2).HasColumnName("isint2");

            //    entity.Property(e => e.Isstr1)
            //        .HasColumnName("isstr1")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Isstr2)
            //        .HasColumnName("isstr2")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Namecolor)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namecolor");

            //    entity.Property(e => e.Nameint1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("nameint1");

            //    entity.Property(e => e.Nameint2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("nameint2");

            //    entity.Property(e => e.Namestr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namestr1");

            //    entity.Property(e => e.Namestr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namestr2");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Onlyfromlist).HasColumnName("onlyfromlist");

            //    entity.Property(e => e.Opentypelist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("opentypelist");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Sortorder).HasColumnName("sortorder");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Strvalue2Strkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue2_strkey");

            //    entity.Property(e => e.StrvalueStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue_strkey");

            //    entity.Property(e => e.Systemlist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("systemlist");

            //    entity.Property(e => e.Tomodel)
            //        .IsRequired()
            //        .HasColumnName("tomodel")
            //        .HasDefaultValueSql("((1))")
            //        .HasComment("Для построителя");

            //    entity.Property(e => e.UiVisible).HasColumnName("ui_visible");

            //    entity.Property(e => e.Unvisibleintvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("unvisibleintvalue");

            //    entity.Property(e => e.Unvisiblestrvalue)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("unvisiblestrvalue");

            //    entity.Property(e => e.Unvisiblestrvalue2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("unvisiblestrvalue2");

            //    entity.Property(e => e.Unvisiblestrvalue2Strkey)
            //        .HasMaxLength(512)
            //        .HasColumnName("unvisiblestrvalue2_strkey");

            //    entity.Property(e => e.UnvisiblestrvalueStrkey)
            //        .HasMaxLength(512)
            //        .HasColumnName("unvisiblestrvalue_strkey");

            //    entity.Property(e => e.Useunvisible).HasColumnName("useunvisible");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Modelparams)
            //        .HasForeignKey(d => d.Idcolor)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_modelparam_color");

            //    entity.HasOne(d => d.IdmodelparamgroupNavigation)
            //        .WithMany(p => p.Modelparams)
            //        .HasForeignKey(d => d.Idmodelparamgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelparam_modelparamgroup");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Modelparams)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelparam_modelpart");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Modelparams)
            //        .HasForeignKey(d => d.Idversion)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelparam_version");
            //});

            //modelBuilder.Entity<ModelparamAddint1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("modelparam_addint1");

            //    entity.Property(e => e.Addint1)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("addint1");

            //    entity.Property(e => e.Idmodelparam)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("idmodelparam");
            //});

            //modelBuilder.Entity<Modelparamcalc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparamcalc)
            //        .HasName("pk_modelparamcalc");

            //    entity.ToTable("modelparamcalc");

            //    entity.HasIndex(e => e.Idmodel, "idx_modelparamcalc_idmodel");

            //    entity.HasIndex(e => e.Idmodelparam, "idx_modelparamcalc_idmodelparam");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_modelparamcalc_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idmodelparamvalue2, "idx_modelparamcalc_idmodelparamvalue2");

            //    entity.HasIndex(e => e.Idmodelpart, "idx_modelparamcalc_idmodelpart");

            //    entity.HasIndex(e => e.Idorder, "idx_modelparamcalc_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_modelparamcalc_idorderitem");

            //    entity.Property(e => e.Idmodelparamcalc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparamcalc");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Visible).HasColumnName("visible");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Modelparamcalcs)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("fk_modelparamcalc_model");

            //    entity.HasOne(d => d.IdmodelparamNavigation)
            //        .WithMany(p => p.Modelparamcalcs)
            //        .HasForeignKey(d => d.Idmodelparam)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelparamcalc_modelparam");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.ModelparamcalcIdmodelparamvalueNavigations)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_modelparamcalc_modelparamvalue");

            //    entity.HasOne(d => d.Idmodelparamvalue2Navigation)
            //        .WithMany(p => p.ModelparamcalcIdmodelparamvalue2Navigations)
            //        .HasForeignKey(d => d.Idmodelparamvalue2)
            //        .HasConstraintName("FK_modelparamcalc_modelparamvalue2");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Modelparamcalcs)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .HasConstraintName("FK_modelparamcalc_modelpart");
            //});

            //modelBuilder.Entity<Modelparamcondition>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparamcondition);

            //    entity.ToTable("modelparamcondition");

            //    entity.HasIndex(e => e.Idcolor, "idx_modelparamcondition_idcolor");

            //    entity.HasIndex(e => e.Idcoloraccordance, "idx_modelparamcondition_idcoloraccordance");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_modelparamcondition_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelparam, "idx_modelparamcondition_idmodelparam");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_modelparamcondition_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_modelparamcondition_idproductiontype");

            //    entity.HasIndex(e => e.Idsystem, "idx_modelparamcondition_idsystem");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_modelparamcondition_idsystemdetail");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_modelparamcondition_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_modelparamcondition_idvariantparamtypevalue");

            //    entity.HasIndex(e => e.Parentid, "idx_modelparamcondition_parentid");

            //    entity.Property(e => e.Idmodelparamcondition)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparamcondition");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idcoloraccordance).HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Invert).HasColumnName("invert");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_modelparamcondition_color");

            //    entity.HasOne(d => d.IdcoloraccordanceNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idcoloraccordance)
            //        .HasConstraintName("FK_modelparamcondition_coloraccordance");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_modelparamcondition_constructiontype");

            //    entity.HasOne(d => d.IdmodelparamNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idmodelparam)
            //        .HasConstraintName("FK_modelparamcondition_modelparam");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_modelparamcondition_modelparamvalue");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_modelparamcondition_productiontype");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idsystem)
            //        .HasConstraintName("FK_modelparamcondition_system");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_modelparamcondition_systemdetail");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .HasConstraintName("FK_modelparamcondition_variantparamtype");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Modelparamconditions)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .HasConstraintName("FK_modelparamcondition_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Modelparamconditiondetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparamconditiondetail);

            //    entity.ToTable("modelparamconditiondetail");

            //    entity.HasIndex(e => e.Idmodelparamcondition, "idx_modelparamconditiondetail_idmodelparamcondition");

            //    entity.HasIndex(e => e.Idmodelparamconditiondetail, "idx_modelparamconditiondetail_idmodelparamconditiondetail");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_modelparamconditiondetail_idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamconditiondetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparamconditiondetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamcondition).HasColumnName("idmodelparamcondition");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.HasOne(d => d.IdmodelparamconditionNavigation)
            //        .WithMany(p => p.Modelparamconditiondetails)
            //        .HasForeignKey(d => d.Idmodelparamcondition)
            //        .HasConstraintName("FK_modelparamconditiondetail_modelparamcondition");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Modelparamconditiondetails)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_modelparamconditiondetail_modelparamvalue");
            //});

            //modelBuilder.Entity<Modelparamgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparamgroup);

            //    entity.ToTable("modelparamgroup");

            //    entity.HasComment("Группы характеристик");

            //    entity.HasIndex(e => e.Parentid, "idx_modelparamgroup_parentid");

            //    entity.Property(e => e.Idmodelparamgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparamgroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родительскую группу");
            //});

            //modelBuilder.Entity<Modelparamvalue>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelparamvalue)
            //        .HasName("pk_modelparamvalue");

            //    entity.ToTable("modelparamvalue");

            //    entity.HasIndex(e => e.Guid, "UQ__modelparamvalue__1EBB33CF")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idmodelparam, "idx_modelparamvalue_idmodelparam");

            //    entity.HasIndex(e => e.Idvectorpicture, "idx_modelparamvalue_idvectorpicture");

            //    entity.Property(e => e.Idmodelparamvalue)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idvectorpicture).HasColumnName("idvectorpicture");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Onlyint).HasColumnName("onlyint");

            //    entity.Property(e => e.Onlystr).HasColumnName("onlystr");

            //    entity.Property(e => e.Onlystr2).HasColumnName("onlystr2");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Strvalue2Strkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue2_strkey");

            //    entity.Property(e => e.StrvalueStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue_strkey");

            //    entity.HasOne(d => d.IdmodelparamNavigation)
            //        .WithMany(p => p.Modelparamvalues)
            //        .HasForeignKey(d => d.Idmodelparam)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelparamvalue_modelparam");

            //    entity.HasOne(d => d.IdvectorpictureNavigation)
            //        .WithMany(p => p.Modelparamvalues)
            //        .HasForeignKey(d => d.Idvectorpicture)
            //        .HasConstraintName("FK_modelparamvalue_vectorpicture");
            //});

            //modelBuilder.Entity<Modelpart>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelpart)
            //        .HasName("pk_modelpart");

            //    entity.ToTable("modelpart");

            //    entity.HasIndex(e => e.Guid, "UQ__modelpart__3203126D")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idmodelpartroot, "idx_modelpart_idmodelpartroot");

            //    entity.HasIndex(e => e.Idversion, "idx_modelpart_idversion");

            //    entity.HasIndex(e => e.Parentid, "idx_modelpart_parentid");

            //    entity.Property(e => e.Idmodelpart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelpart");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idmodelpartroot).HasColumnName("idmodelpartroot");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Modelparts)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_modelpart_versions");
            //});

            //modelBuilder.Entity<Modelpic>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelpic);

            //    entity.ToTable("modelpic");

            //    entity.HasIndex(e => e.Idmodel, "idx_modelpic_idmodel");

            //    entity.HasIndex(e => e.Idorderitem, "idx_modelpic_idorderitem");

            //    entity.HasIndex(e => e.Idorder, "ind_modelpic_idorder");

            //    entity.Property(e => e.Idmodelpic)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelpic");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Markingshpross)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("markingshpross");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Typ)
            //        .HasColumnName("typ")
            //        .HasComment("Тип записи. 0-Картинки для списка конструкций в заказе, 1-Картинки для списка заказов, 2-Картинки непрямоугольных заполнений, 3-Картинки декоративных раскладок");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Modelpics)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelpic_model");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Modelpics)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_modelpic_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Modelpics)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_modelpic_orderitem");
            //});

            //modelBuilder.Entity<Modelreverspic>(entity =>
            //{
            //    entity.HasKey(e => e.Idreverspic)
            //        .HasName("PK__modelrev__22472F0BC66FC7C5");

            //    entity.ToTable("modelreverspic");

            //    entity.HasIndex(e => e.Idorderitem, "ix_idorderitem");

            //    entity.Property(e => e.Idreverspic).HasColumnName("idreverspic");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Strimage)
            //        .IsUnicode(false)
            //        .HasColumnName("strimage");
            //});

            //modelBuilder.Entity<Modelscript>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelscript)
            //        .HasName("pk_modelscript");

            //    entity.ToTable("modelscript");

            //    entity.HasIndex(e => e.Guid, "UQ__modelscript__33EB5ADF")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idmodelpart, "idx_modelscript_idmodelpart");

            //    entity.HasIndex(e => e.Idversion, "idx_modelscript_idversion");

            //    entity.Property(e => e.Idmodelscript)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelscript");

            //    entity.Property(e => e.Activescript).HasColumnName("activescript");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.Property(e => e.Scriptgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("scriptgroup");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Modelscripts)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_modelscript_modelpart");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Modelscripts)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_modelscript_version");
            //});

            //modelBuilder.Entity<MoversSalary>(entity =>
            //{
            //    entity.HasKey(e => e.IdmoversSalary)
            //        .HasName("PK_movers_salary_column1");

            //    entity.ToTable("movers_salary");

            //    entity.Property(e => e.IdmoversSalary).HasColumnName("idmovers_salary");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.PickoutPyr)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("pickout_pyr");

            //    entity.Property(e => e.PickupPyr)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("pickup_pyr");

            //    entity.Property(e => e.PriceAlGl)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_al_gl");

            //    entity.Property(e => e.PriceAlTep)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_al_tep");

            //    entity.Property(e => e.PriceDop)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_dop");

            //    entity.Property(e => e.PriceDv)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_dv");

            //    entity.Property(e => e.PricePms)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_pms");

            //    entity.Property(e => e.PricePrRam)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_pr_ram");

            //    entity.Property(e => e.PricePrStv)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_pr_stv");

            //    entity.Property(e => e.PricePvh)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_pvh");

            //    entity.Property(e => e.PriceSand)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_sand");

            //    entity.Property(e => e.PriceSp)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price_sp");
            //});

            //modelBuilder.Entity<MyAltaPerson>(entity =>
            //{
            //    entity.HasKey(e => e.Personid)
            //        .HasName("PK_PERSONS");

            //    entity.ToTable("MY_ALTA_PERSONS");

            //    entity.Property(e => e.Personid)
            //        .ValueGeneratedNever()
            //        .HasColumnName("PERSONID");

            //    entity.Property(e => e.MyQ)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("MY_q");

            //    entity.Property(e => e.MyWsBarcode)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("MY_WS_BARCODE");

            //    entity.Property(e => e.MyWsEmhex)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("MY_WS_EMHEX");

            //    entity.Property(e => e.Personlastname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("PERSONLASTNAME");

            //    entity.Property(e => e.Personmiddle)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("PERSONMIDDLE");

            //    entity.Property(e => e.Personname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("PERSONNAME");

            //    entity.Property(e => e.Persontitle)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("PERSONTITLE");

            //    entity.Property(e => e.Username)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("USERNAME");
            //});

            //modelBuilder.Entity<MyAltaVsWdGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("MY_ALTA_VS_WD_GOODS");

            //    entity.Property(e => e.IdgoodAlta).HasColumnName("idgood_alta");

            //    entity.Property(e => e.IdgoodWd).HasColumnName("idgood_wd");
            //});

            //modelBuilder.Entity<MyApdexGroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idapdexgroup)
            //        .HasName("pk_my_apdex_group");

            //    entity.ToTable("my_apdex_group");

            //    entity.Property(e => e.Idapdexgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idapdexgroup");

            //    entity.Property(e => e.Catalog)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .HasColumnName("catalog");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyApdexPerfomancelog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_apdex_perfomancelog");

            //    entity.Property(e => e.ApdexlogId).HasColumnName("apdexlog_id");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Objectid).HasColumnName("objectid");
            //});

            //modelBuilder.Entity<MyApdexkey>(entity =>
            //{
            //    entity.HasKey(e => e.Idapdexkey)
            //        .HasName("pk_my_apdexkey");

            //    entity.ToTable("my_apdexkey");

            //    entity.HasIndex(e => e.Idapdexgroup, "idx_apdexkey_idapdexgroup");

            //    entity.Property(e => e.Idapdexkey)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idapdexkey");

            //    entity.Property(e => e.Idapdexgroup).HasColumnName("idapdexgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(100)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Priority).HasColumnName("priority");

            //    entity.Property(e => e.T).HasColumnName("t");

            //    entity.Property(e => e.Uid).HasColumnName("uid");

            //    entity.HasOne(d => d.IdapdexgroupNavigation)
            //        .WithMany(p => p.MyApdexkeys)
            //        .HasForeignKey(d => d.Idapdexgroup)
            //        .HasConstraintName("FK_my_apdexkey_group");
            //});

            //modelBuilder.Entity<MyApdexlog>(entity =>
            //{
            //    entity.HasKey(e => e.Idapdexlog)
            //        .HasName("pk_my_apdexlog");

            //    entity.ToTable("my_apdexlog");

            //    entity.HasIndex(e => e.Idapdexkey, "idx_apdexlog_idapdexkey");

            //    entity.HasIndex(e => e.Dt, "ix_my_apdexlog");

            //    entity.Property(e => e.Idapdexlog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idapdexlog");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt1");

            //    entity.Property(e => e.Dt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt2");

            //    entity.Property(e => e.Hostname)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .HasColumnName("hostname");

            //    entity.Property(e => e.Idapdexkey).HasColumnName("idapdexkey");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iduser).HasColumnName("iduser");

            //    entity.Property(e => e.Param)
            //        .IsUnicode(false)
            //        .HasColumnName("param");

            //    entity.Property(e => e.T).HasColumnName("t");

            //    entity.HasOne(d => d.IdapdexkeyNavigation)
            //        .WithMany(p => p.MyApdexlogs)
            //        .HasForeignKey(d => d.Idapdexkey)
            //        .HasConstraintName("FK_my_apdexlog_group");
            //});

            //modelBuilder.Entity<MyBelt>(entity =>
            //{
            //    entity.HasKey(e => e.Idbelt);

            //    entity.ToTable("my_belt");

            //    entity.Property(e => e.Idbelt)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idbelt");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");
            //});

            //modelBuilder.Entity<MyBeltSign>(entity =>
            //{
            //    entity.HasKey(e => e.Idbeltsign);

            //    entity.ToTable("my_belt_sign");

            //    entity.Property(e => e.Idbeltsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idbeltsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Idbelt).HasColumnName("idbelt");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Pyramid)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pyramid");

            //    entity.HasOne(d => d.IdbeltNavigation)
            //        .WithMany(p => p.MyBeltSigns)
            //        .HasForeignKey(d => d.Idbelt)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_my_belt_sign_my_belt");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.MyBeltSigns)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_my_belt_sign_delivdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyBeltSignIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_my_belt_sign_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.MyBeltSignIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_my_belt_sign_people_2");
            //});

            //modelBuilder.Entity<MyBrandToModelConvert>(entity =>
            //{
            //    entity.ToTable("my_brand_to_model_convert");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Brand)
            //        .HasMaxLength(100)
            //        .HasColumnName("brand")
            //        .IsFixedLength();

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(100)
            //        .HasColumnName("comment")
            //        .IsFixedLength();

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Modelname)
            //        .HasMaxLength(100)
            //        .HasColumnName("modelname")
            //        .IsFixedLength();
            //});

            //modelBuilder.Entity<MyBufferedGetBalka>(entity =>
            //{
            //    entity.HasKey(e => new { e.IdmanufactdocParam, e.Id })
            //        .HasName("pk_my_buffered_get_balka");

            //    entity.ToTable("my_buffered_get_balka");

            //    entity.Property(e => e.IdmanufactdocParam).HasColumnName("idmanufactdoc_param");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.BalkaId).HasColumnName("balka_id");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.C1Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("c1_name");

            //    entity.Property(e => e.C2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("c2_name");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.FurnSysName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("furnSysName");

            //    entity.Property(e => e.HandleTypeStr)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("HandleType_str");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Idoptimdocpos).HasColumnName("idoptimdocpos");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.ImpostPos)
            //        .IsUnicode(false)
            //        .HasColumnName("impost_pos");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MarkingArm)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking_arm");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameMf)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name_mf");

            //    entity.Property(e => e.NameO)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name_o");

            //    entity.Property(e => e.NumElement).HasColumnName("num_element");

            //    entity.Property(e => e.NumosOi).HasColumnName("numos_oi");

            //    entity.Property(e => e.Numpair).HasColumnName("numpair");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numposbalka).HasColumnName("numposbalka");

            //    entity.Property(e => e.Numwhip).HasColumnName("numwhip");

            //    entity.Property(e => e.OpiNumpos).HasColumnName("opi_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.Property(e => e.ProfileType)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("profile_type");

            //    entity.Property(e => e.QuNumpair).HasColumnName("qu_numpair");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.SideStr)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("Side_str");

            //    entity.Property(e => e.Sort).HasColumnName("sort");

            //    entity.Property(e => e.SortProfileType).HasColumnName("sort_profile_type");

            //    entity.Property(e => e.SvarkaSide)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("svarka_side");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.ThickArm).HasColumnName("thick_arm");

            //    entity.Property(e => e.ThickDouble)
            //        .HasColumnType("numeric(15, 1)")
            //        .HasColumnName("thick_double");

            //    entity.Property(e => e.Whiplen)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("whiplen");
            //});

            //modelBuilder.Entity<MyBufferedGetLeanBalkaXml>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorderitem, e.Idpos });

            //    entity.ToTable("my_buffered_get_lean_balka_xml");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpos).HasColumnName("idpos");

            //    entity.Property(e => e.BalkatypeStr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("balkatype_str");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.SideStr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("Side_str");
            //});

            //modelBuilder.Entity<MyBufferedGetLeanStvorkaXml>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorderitem, e.Idpos });

            //    entity.ToTable("my_buffered_get_lean_stvorka_xml");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpos).HasColumnName("idpos");

            //    entity.Property(e => e.HandleTypeStr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("HandleType_str");

            //    entity.Property(e => e.Id).HasColumnName("ID");

            //    entity.Property(e => e.OtkrivanieTypeStr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("otkrivanieType_str");
            //});

            //modelBuilder.Entity<MyBufferedModel>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem)
            //        .HasName("pk_my_buffered_model");

            //    entity.ToTable("my_buffered_model");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Class)
            //        .HasColumnType("xml")
            //        .HasColumnName("class");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");
            //});

            //modelBuilder.Entity<MyBufferedPgGetGoodsForManufactdoc>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idmanufactdoc, e.Idmanufactdocpos, e.Idpos });

            //    entity.ToTable("my_buffered_pg_get_goods_for_manufactdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idpos).HasColumnName("idpos");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodtype2).HasColumnName("idgoodtype2");

            //    entity.Property(e => e.QustoreClear)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore_clear");

            //    entity.Property(e => e.QustorePlanDelOst)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore_plan_del_ost");
            //});

            //modelBuilder.Entity<MyBufferedSpdoc692Mc>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idsave, e.Ordpos });

            //    entity.ToTable("my_buffered_spdoc_692_mc");

            //    entity.Property(e => e.Idsave).HasColumnName("IDSave");

            //    entity.Property(e => e.Ordpos).HasColumnName("ordpos");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Drez).HasColumnName("drez");

            //    entity.Property(e => e.Dv).HasColumnName("dv");

            //    entity.Property(e => e.Freza).HasColumnName("freza");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Idoptimdocpos).HasColumnName("idoptimdocpos");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(200)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameMf)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name_mf");

            //    entity.Property(e => e.NameO2)
            //        .IsUnicode(false)
            //        .HasColumnName("name_o2");

            //    entity.Property(e => e.Numpair).HasColumnName("numpair");

            //    entity.Property(e => e.Numposbalka).HasColumnName("numposbalka");

            //    entity.Property(e => e.Obrez).HasColumnName("obrez");

            //    entity.Property(e => e.Param)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("param");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.PictureProf).HasColumnName("picture_prof");

            //    entity.Property(e => e.Procobrez)
            //        .HasColumnType("numeric(25, 13)")
            //        .HasColumnName("procobrez");

            //    entity.Property(e => e.QuNumpair).HasColumnName("qu_numpair");

            //    entity.Property(e => e.Shortcolor)
            //        .HasMaxLength(78)
            //        .IsUnicode(false)
            //        .HasColumnName("shortcolor");

            //    entity.Property(e => e.SideStr)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("side_str");

            //    entity.Property(e => e.Sort).HasColumnName("sort");

            //    entity.Property(e => e.SqrExt)
            //        .HasColumnType("decimal(38, 6)")
            //        .HasColumnName("sqr_ext");

            //    entity.Property(e => e.SqrInt)
            //        .HasColumnType("decimal(38, 6)")
            //        .HasColumnName("sqr_int");

            //    entity.Property(e => e.Sumthick).HasColumnName("sumthick");

            //    entity.Property(e => e.ThickDouble2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("thick_double2");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Win)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("win");

            //    entity.Property(e => e.Workost).HasColumnName("workost");
            //});

            //modelBuilder.Entity<MyBufferedZagLamProposalManufact>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder)
            //        .HasName("pk_my_buffered_zag_lam_proposal_manufact");

            //    entity.ToTable("my_buffered_zag_lam_proposal_manufact");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.Done).HasColumnName("done");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");
            //});

            //modelBuilder.Entity<MyBufferedZagLamProposalManufactRownum>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorder, e.Idorderitem })
            //        .HasName("pk_my_buffered_zag_lam_proposal_manufact_rownum");

            //    entity.ToTable("my_buffered_zag_lam_proposal_manufact_rownum");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Rownumber).HasColumnName("rownumber");
            //});

            //modelBuilder.Entity<MyBufferedhGetBalka>(entity =>
            //{
            //    entity.HasKey(e => e.IdmanufactdocParam)
            //        .HasName("pk_my_bufferedh_get_balka");

            //    entity.ToTable("my_bufferedh_get_balka");

            //    entity.Property(e => e.IdmanufactdocParam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoc_param");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");
            //});

            //modelBuilder.Entity<MyBufferedhGetLeanBalkaXml>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem);

            //    entity.ToTable("my_bufferedh_get_lean_balka_xml");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");
            //});

            //modelBuilder.Entity<MyBufferedhGetLeanStvorkaXml>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem);

            //    entity.ToTable("my_bufferedh_get_lean_stvorka_xml");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");
            //});

            //modelBuilder.Entity<MyBufferedhPgGetGoodsForManufactdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoc);

            //    entity.ToTable("my_bufferedh_pg_get_goods_for_manufactdoc");

            //    entity.HasIndex(e => e.Deleted, "ix_my_bufferedh_pg_get_goods_for_manufactdoc");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");
            //});

            //modelBuilder.Entity<MyCardriveritem>(entity =>
            //{
            //    entity.HasKey(e => new { e.Iddelivdoc, e.Idmanufactdocpos });

            //    entity.ToTable("my_cardriveritems");

            //    entity.HasIndex(e => e.Iddelivdoc, "idx_my_cardriveritems_iddelivdoc");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_my_cardriveritems_idmanufactdocpos");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Carleavetime)
            //        .HasColumnType("datetime")
            //        .HasColumnName("carleavetime");

            //    entity.Property(e => e.Customerinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("customerinfo");

            //    entity.Property(e => e.Customername)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("customername");

            //    entity.Property(e => e.Delivdocname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("delivdocname");

            //    entity.Property(e => e.Drivername)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("drivername");

            //    entity.Property(e => e.Factdeliverytime)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdeliverytime");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Itembarcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("itembarcode");

            //    entity.Property(e => e.Itemname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("itemname");

            //    entity.Property(e => e.Kpptime)
            //        .HasColumnType("datetime")
            //        .HasColumnName("kpptime");

            //    entity.Property(e => e.Lastsyncdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("lastsyncdate");

            //    entity.Property(e => e.Ordername)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("ordername");

            //    entity.Property(e => e.Plandeliverytime)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandeliverytime");

            //    entity.Property(e => e.Pointnum).HasColumnName("pointnum");

            //    entity.Property(e => e.Pointrank).HasColumnName("pointrank");
            //});

            //modelBuilder.Entity<MyCastorama>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_castorama");

            //    entity.Property(e => e.AddressPos)
            //        .IsUnicode(false)
            //        .HasColumnName("address_pos");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Furn)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("furn");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MarkingPos)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("marking_pos");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(200)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PosName)
            //        .IsUnicode(false)
            //        .HasColumnName("pos_name");

            //    entity.Property(e => e.Price).HasColumnName("price");

            //    entity.Property(e => e.PriceNds).HasColumnName("price_nds");

            //    entity.Property(e => e.Profile)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("profile");

            //    entity.Property(e => e.Sp)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("sp");
            //});

            //modelBuilder.Entity<MyCauserdepart>(entity =>
            //{
            //    entity.HasKey(e => e.Idcauserdepart);

            //    entity.ToTable("my_causerdepart");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_my_causerdepart_idsignvalue");

            //    entity.Property(e => e.Idcauserdepart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcauserdepart");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.MyCauserdeparts)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_causerdepart_idsignvalue");
            //});

            //modelBuilder.Entity<MyClearDelivDoc>(entity =>
            //{
            //    entity.HasKey(e => e.IdDelivDoc)
            //        .HasName("pk_my_clear_DelivDoc");

            //    entity.ToTable("my_clear_DelivDoc");

            //    entity.Property(e => e.IdDelivDoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idDelivDoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyClearManufactdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoc)
            //        .HasName("pk_my_clear_manufactdoc");

            //    entity.ToTable("my_clear_manufactdoc");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");

            //    entity.Property(e => e.DoneMc).HasColumnName("done_mc");

            //    entity.Property(e => e.DoneOd).HasColumnName("done_od");
            //});

            //modelBuilder.Entity<MyClearOrder>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder)
            //        .HasName("pk_my_clear_orders");

            //    entity.ToTable("my_clear_orders");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");

            //    entity.Property(e => e.DoneLogistitem).HasColumnName("done_logistitem");

            //    entity.Property(e => e.DoneMc).HasColumnName("done_mc");
            //});

            //modelBuilder.Entity<MyClearOrders2021>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder)
            //        .HasName("pk_my_clear_orders_copy");

            //    entity.ToTable("my_clear_orders_2021");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");

            //    entity.Property(e => e.DoneLogistitem).HasColumnName("done_logistitem");

            //    entity.Property(e => e.DoneMc).HasColumnName("done_mc");
            //});

            //modelBuilder.Entity<MyClearParam>(entity =>
            //{
            //    entity.HasKey(e => e.Name)
            //        .HasName("pk_my_clear_param");

            //    entity.ToTable("my_clear_param");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Paramvalue)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .HasColumnName("paramvalue");
            //});

            //modelBuilder.Entity<MyClearProductiondoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiondoc)
            //        .HasName("pk_my_clear_productiondoc");

            //    entity.ToTable("my_clear_productiondoc");

            //    entity.Property(e => e.Idproductiondoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiondoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyClearSaveModelcalc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmodelcalc)
            //        .HasName("PK__my_clear__B983D0CA502314AC");

            //    entity.ToTable("my_clear_Save_modelcalc");

            //    entity.HasIndex(e => e.Oldid, "ix_my_clear_Save_modelcalc");

            //    entity.Property(e => e.Idmodelcalc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Oldid).HasColumnName("oldid");
            //});

            //modelBuilder.Entity<MyClearStoreDoc>(entity =>
            //{
            //    entity.HasKey(e => e.IdstoreDoc)
            //        .HasName("pk_my_clear_storeDoc");

            //    entity.ToTable("my_clear_storeDoc");

            //    entity.Property(e => e.IdstoreDoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoreDoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyClearSupplydoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydoc)
            //        .HasName("pk_my_clear_supplydoc");

            //    entity.ToTable("my_clear_supplydoc");

            //    entity.Property(e => e.Idsupplydoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyClearTechdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdoc)
            //        .HasName("pk_my_clear_techdoc");

            //    entity.ToTable("my_clear_techdoc");

            //    entity.Property(e => e.Idtechdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdoc");

            //    entity.Property(e => e.DoneDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyDelivdocClass>(entity =>
            //{
            //    entity.HasKey(e => new { e.Iddelivdoc, e.Typ, e.Id })
            //        .HasName("pk_my_delivdoc_class");

            //    entity.ToTable("my_delivdoc_class");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyDelivdocSm>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivdocsms);

            //    entity.ToTable("my_delivdoc_sms");

            //    entity.HasIndex(e => e.Iddelivdoc, "NonClusteredIndex-20181018-155659");

            //    entity.Property(e => e.Iddelivdocsms).HasColumnName("iddelivdocsms");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");
            //});

            //modelBuilder.Entity<MyDelivschedule>(entity =>
            //{
            //    entity.HasKey(e => e.Iddelivschedule)
            //        .HasName("pk_my_delivschedule");

            //    entity.ToTable("my_delivschedule");

            //    entity.Property(e => e.Iddelivschedule)
            //        .ValueGeneratedNever()
            //        .HasColumnName("iddelivschedule");

            //    entity.Property(e => e.D1).HasColumnName("d1");

            //    entity.Property(e => e.D2).HasColumnName("d2");

            //    entity.Property(e => e.D3).HasColumnName("d3");

            //    entity.Property(e => e.D4).HasColumnName("d4");

            //    entity.Property(e => e.D5).HasColumnName("d5");

            //    entity.Property(e => e.D6).HasColumnName("d6");

            //    entity.Property(e => e.D7).HasColumnName("d7");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Delivday).HasColumnName("delivday");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Maketime)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("maketime");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(100)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyDelivscheduleitem>(entity =>
            //{
            //    entity.HasKey(e => new { e.Iddelivschedule, e.Iddelivscheduleitem })
            //        .HasName("pk_my_delivscheduleitem");

            //    entity.ToTable("my_delivscheduleitem");

            //    entity.Property(e => e.Iddelivschedule).HasColumnName("iddelivschedule");

            //    entity.Property(e => e.Iddelivscheduleitem).HasColumnName("iddelivscheduleitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");
            //});

            //modelBuilder.Entity<MyGeoLocation>(entity =>
            //{
            //    entity.HasKey(e => e.GeoLocationKey);

            //    entity.ToTable("my_GeoLocation");

            //    entity.Property(e => e.GeoLocationKey)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.AddressDesc)
            //        .HasMaxLength(200)
            //        .IsUnicode(false);

            //    entity.Property(e => e.AddressName)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.LowerCorner)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("lowerCorner");

            //    entity.Property(e => e.Point)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Precision)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("precision");

            //    entity.Property(e => e.UpperCorner)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("upperCorner");
            //});

            //modelBuilder.Entity<MyGeolog>(entity =>
            //{
            //    entity.HasKey(e => e.Idgeolog)
            //        .HasName("PK_geolog");

            //    entity.ToTable("my_geolog");

            //    entity.HasIndex(e => e.Dt, "idx_geolog_dt");

            //    entity.Property(e => e.Idgeolog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgeolog");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Meth)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("meth");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Request)
            //        .IsUnicode(false)
            //        .HasColumnName("request");

            //    entity.Property(e => e.Response)
            //        .IsUnicode(false)
            //        .HasColumnName("response");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyGeologs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_geolog_people");
            //});

            //modelBuilder.Entity<MyGlasstrash>(entity =>
            //{
            //    entity.HasKey(e => e.Idglasstrash);

            //    entity.ToTable("my_glasstrash");

            //    entity.HasIndex(e => e.Idgood, "idx_my_glasstrash_idgood");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_my_glasstrash_idmanufactdoc");

            //    entity.Property(e => e.Idglasstrash)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idglasstrash");

            //    entity.Property(e => e.Areatot)
            //        .HasColumnType("numeric(15, 7)")
            //        .HasColumnName("AREATOT");

            //    entity.Property(e => e.Codcom)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("CODCOM")
            //        .HasComment("Наименование резки в OptyWay");

            //    entity.Property(e => e.Codmat)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("CODMAT");

            //    entity.Property(e => e.Datecreated)
            //        .IsRowVersion()
            //        .IsConcurrencyToken()
            //        .HasColumnName("DATECREATED")
            //        .HasComment("Дата и время создания записи");

            //    entity.Property(e => e.DtPrc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("DT_PRC")
            //        .HasComment("Дата и время копирования процента обрези из резки OptyWay");

            //    entity.Property(e => e.Idgood)
            //        .HasColumnName("idgood")
            //        .HasComment("Материал WD, соответвтующий материалу из резки CODCOM в OptyWay");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .HasColumnName("idmanufactdoc")
            //        .HasComment("Сменное задание, соответствующее резке OptyWay (CODCOM)");

            //    entity.Property(e => e.Leafs)
            //        .HasColumnName("LEAFS")
            //        .HasComment("Количество листов стекла, затраченных для резки оптимизации CODCOM (из поля TOTELAB таблицы COMMESSE)");

            //    entity.Property(e => e.Parts)
            //        .HasColumnName("PARTS")
            //        .HasComment("Количество кусков резки");

            //    entity.Property(e => e.Prc)
            //        .HasColumnType("numeric(15, 7)")
            //        .HasColumnName("PRC")
            //        .HasComment("Процент обрези (из поля WTOT таблицы COMMESSE) по резке CODCOM");

            //    entity.Property(e => e.Prc2)
            //        .HasColumnType("numeric(15, 7)")
            //        .HasColumnName("PRC2")
            //        .HasComment("Реальный процент обрези (из поля WREAL таблицы COMMESSE) по резке CODCOM");

            //    entity.Property(e => e.S).HasColumnType("numeric(15, 7)");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.MyGlasstrashes)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_my_glasstrash_good");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.MyGlasstrashes)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_my_glasstrash_manufactdoc");
            //});

            //modelBuilder.Entity<MyGoodzakaz>(entity =>
            //{
            //    entity.HasKey(e => e.Idgoodzakaz);

            //    entity.ToTable("my_goodzakaz");

            //    entity.HasIndex(e => e.Idcolor1, "idx_my_goodzakaz_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_my_goodzakaz_idcolor2");

            //    entity.HasIndex(e => e.Idgood, "idx_my_goodzakaz_idgood");

            //    entity.Property(e => e.Idgoodzakaz)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idgoodzakaz");

            //    entity.Property(e => e.Brandmask)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brandmask");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Dtupdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtupdate");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Mindeliverydate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("mindeliverydate");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.MyGoodzakazIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_goodzakaz_color");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.MyGoodzakazIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_my_goodzakaz_color1");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.MyGoodzakazs)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_my_goodzakaz_good");
            //});

            //modelBuilder.Entity<MyImg>(entity =>
            //{
            //    entity.HasKey(e => e.Idimg)
            //        .HasName("PK__my_img_s__047FBD7841B16CCB");

            //    entity.ToTable("my_img_s");

            //    entity.HasIndex(e => e.Tag, "my_img_s_uq")
            //        .IsUnique();

            //    entity.Property(e => e.Idimg).HasColumnName("idimg");

            //    entity.Property(e => e.Img)
            //        .HasColumnType("image")
            //        .HasColumnName("img");

            //    entity.Property(e => e.Tag)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("tag");
            //});

            //modelBuilder.Entity<MyInv>(entity =>
            //{
            //    entity.HasKey(e => e.IdInv)
            //        .HasName("PK_MY_INV_");

            //    entity.ToTable("MY_INV");

            //    entity.HasIndex(e => e.Goodsid, "IDX_MY_INV_GOODSID");

            //    entity.HasIndex(e => e.Whlistid, "IDX_MY_INV_WHLISTID");

            //    entity.HasIndex(e => e.Bar, "MY_INV_BAR");

            //    entity.Property(e => e.IdInv).HasColumnName("ID_INV");

            //    entity.Property(e => e.Bar)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("BAR");

            //    entity.Property(e => e.Goodsid).HasColumnName("GOODSID");

            //    entity.Property(e => e.Height).HasColumnName("HEIGHT");

            //    entity.Property(e => e.Pka).HasColumnName("PKA");

            //    entity.Property(e => e.Thick).HasColumnName("THICK");

            //    entity.Property(e => e.Whlistid).HasColumnName("WHLISTID");

            //    entity.Property(e => e.Width).HasColumnName("WIDTH");
            //});

            //modelBuilder.Entity<MyInvGarbage>(entity =>
            //{
            //    entity.HasKey(e => e.IdInv)
            //        .HasName("PK_MY_INV_GARBAGE_");

            //    entity.ToTable("MY_INV_GARBAGE");

            //    entity.HasIndex(e => e.Bar, "MY_INV_BAR");

            //    entity.Property(e => e.IdInv)
            //        .ValueGeneratedNever()
            //        .HasColumnName("ID_INV");

            //    entity.Property(e => e.Bar)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("BAR");

            //    entity.Property(e => e.Goodsid).HasColumnName("GOODSID");

            //    entity.Property(e => e.Height).HasColumnName("HEIGHT");

            //    entity.Property(e => e.Pka).HasColumnName("PKA");

            //    entity.Property(e => e.Thick).HasColumnName("THICK");

            //    entity.Property(e => e.Whlistid).HasColumnName("WHLISTID");

            //    entity.Property(e => e.Width).HasColumnName("WIDTH");
            //});

            //modelBuilder.Entity<MyInvWhlist>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("my_inv_whlist");

            //    entity.Property(e => e.Rname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rname");

            //    entity.Property(e => e.Whlistid).HasColumnName("whlistid");
            //});

            //modelBuilder.Entity<MyLamGoodDouble>(entity =>
            //{
            //    entity.HasKey(e => e.Idlamgooddouble);

            //    entity.ToTable("my_lam_good_double");

            //    entity.Property(e => e.Idlamgooddouble).HasColumnName("idlamgooddouble");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");
            //});

            //modelBuilder.Entity<MyLamGroupGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_lam_group_goods");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.IdGroup).HasColumnName("id_group");

            //    entity.Property(e => e.LamSide)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("lam_side");

            //    entity.Property(e => e.Manufact)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("manufact");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.ProfileTypeName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("profile_type_name");

            //    entity.Property(e => e.SuperGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("super_group");

            //    entity.Property(e => e.Time)
            //        .HasColumnType("decimal(18, 0)")
            //        .HasColumnName("time");
            //});

            //modelBuilder.Entity<MyLamGroupGoodsNew>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_lam_group_goods_new");

            //    entity.Property(e => e.IdGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("id_group");

            //    entity.Property(e => e.LamSide)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("lam_side");

            //    entity.Property(e => e.Manufact)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("manufact");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.SuperGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("super_group");

            //    entity.Property(e => e.Time)
            //        .HasColumnType("decimal(18, 0)")
            //        .HasColumnName("time");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MyLamGroupGoodsTemp3>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_lam_group_goods_temp3");

            //    entity.Property(e => e.IdGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("id_group");

            //    entity.Property(e => e.LamSide)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("lam_side");

            //    entity.Property(e => e.Manufact)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("manufact");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.SuperGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("super_group");

            //    entity.Property(e => e.Time)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("time");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("type");
            //});

            //modelBuilder.Entity<MyLamSortDetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idlamsortdetail)
            //        .HasName("PK_lamsortdetail");

            //    entity.ToTable("my_lam_sort_detail");

            //    entity.Property(e => e.Idlamsortdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlamsortdetail");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idlamsortgroup).HasColumnName("idlamsortgroup");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Pos).HasColumnName("pos");
            //});

            //modelBuilder.Entity<MyLamSortGroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idlamsortgroup)
            //        .HasName("PK_idlamsortgroup");

            //    entity.ToTable("my_lam_sort_group");

            //    entity.Property(e => e.Idlamsortgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlamsortgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Name)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Pos).HasColumnName("pos");
            //});

            //modelBuilder.Entity<MyLine>(entity =>
            //{
            //    entity.HasKey(e => e.Idline)
            //        .HasName("PK_line");

            //    entity.ToTable("my_line");

            //    entity.Property(e => e.Idline)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idline");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<MyLoadTesting>(entity =>
            //{
            //    entity.HasKey(e => e.Idloadtesting)
            //        .HasName("PK_my_load_testing_idloadtesting");

            //    entity.ToTable("my_load_testing");

            //    entity.Property(e => e.Idloadtesting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idloadtesting");

            //    entity.Property(e => e.AvgTime).HasColumnName("avg_time");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.MeasurNum).HasColumnName("measur_num");

            //    entity.Property(e => e.MinMaxT).HasColumnName("min_max_t");

            //    entity.Property(e => e.T).HasColumnName("t");

            //    entity.Property(e => e.TestingCondition)
            //        .IsUnicode(false)
            //        .HasColumnName("testing_condition");

            //    entity.Property(e => e.TestingGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("testing_group");

            //    entity.Property(e => e.Units)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("units");
            //});

            //modelBuilder.Entity<MyLoadTestingParam>(entity =>
            //{
            //    entity.HasKey(e => e.Name)
            //        .HasName("pk_my_load_testing_param");

            //    entity.ToTable("my_load_testing_param");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Paramvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("paramvalue");

            //    entity.Property(e => e.TestingGroup)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("testing_group");
            //});

            //modelBuilder.Entity<MyLogistItem>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorder, e.Idorderitem, e.Orderitemnum });

            //    entity.ToTable("My_LogistItem");

            //    entity.HasIndex(e => e.IdManufactDocPos, "ix_My_LogistItem_IdManufactDocPos");

            //    entity.HasIndex(e => e.PlanLogistDate, "ix_My_LogistItem_Planlogistdate");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "ix_My_LogistItem_idorderitem");

            //    entity.HasIndex(e => e.LogistDate, "ix_My_LogistItem_logistdate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Idlogistitem).HasColumnName("idlogistitem");

            //    entity.Property(e => e.IsKpp).HasColumnName("isKPP");

            //    entity.Property(e => e.Isbox).HasColumnName("isbox");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Isupdatedstate).HasColumnName("isupdatedstate");

            //    entity.Property(e => e.LogistDate).HasColumnType("datetime");

            //    entity.Property(e => e.MdpLastLogistStateid).HasColumnName("mdp_LastLogistStateid");

            //    entity.Property(e => e.MdpLastReadyStateid).HasColumnName("mdp_LastReadyStateid");

            //    entity.Property(e => e.MdpLastSignId).HasColumnName("mdp_last_sign_id");

            //    entity.Property(e => e.PlanLogistDate).HasColumnType("datetime");

            //    entity.Property(e => e.Secnum).HasColumnName("secnum");

            //    entity.Property(e => e.Source).HasColumnName("source");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<MyLogistOrder>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder);

            //    entity.ToTable("My_LogistOrders");

            //    entity.HasIndex(e => e.LogistDate, "ix_My_LogistOrders_logistdate");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.LogistDate).HasColumnType("datetime");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyLogistOrderItem>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorder, e.Idorderitem });

            //    entity.ToTable("My_LogistOrderItem");

            //    entity.HasIndex(e => e.Idorderitem, "ix_My_LogistOrderItem_idorderitem");

            //    entity.HasIndex(e => e.LogistDate, "ix_My_LogistOrderItem_logistdate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.IsSpForAlu).HasColumnName("isSP_FOR_ALU");

            //    entity.Property(e => e.Ispf).HasColumnName("ispf");

            //    entity.Property(e => e.LogistDate).HasColumnType("datetime");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Qu).HasColumnName("qu");
            //});

            //modelBuilder.Entity<MyLogistOtgrFact>(entity =>
            //{
            //    entity.HasKey(e => e.Idlogistotgrfact)
            //        .HasName("PK_logistotgrfact");

            //    entity.ToTable("my_logist_otgr_fact");

            //    entity.HasIndex(e => new { e.Iddelivdoc, e.Pyramid, e.Idpyramid }, "idx_my_logist_otgr_fact_iddelivdoc");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_my_logist_otgr_fact_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_my_logist_otgr_fact_idstoredoc");

            //    entity.HasIndex(e => new { e.Iddelivdoc, e.Idmanufactdocpos, e.Idstoredoc }, "uc_iddelivdoc_idmanufactdocpos_idstoredoc")
            //        .IsUnique();

            //    entity.Property(e => e.Idlogistotgrfact)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlogistotgrfact");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreated)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreated");

            //    entity.Property(e => e.Idbox).HasColumnName("idbox");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Pyramid)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pyramid");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.MyLogistOtgrFacts)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .HasConstraintName("FK_my_logist_otgr_fact_delivdoc");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.MyLogistOtgrFacts)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_logist_otgr_fact_manufactdocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyLogistOtgrFacts)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_logist_otgr_fact_people");

            //    entity.HasOne(d => d.Idpyram)
            //        .WithMany(p => p.MyLogistOtgrFacts)
            //        .HasForeignKey(d => d.Idpyramid)
            //        .HasConstraintName("FK_my_logist_otgr_fact_pyramid");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.MyLogistOtgrFacts)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_logist_otgr_fact_storedoc");
            //});

            //modelBuilder.Entity<MyLogistOtgrPlan>(entity =>
            //{
            //    entity.ToTable("my_logist_otgr_plan");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Date)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date");

            //    entity.Property(e => e.Plan).HasColumnName("plan");

            //    entity.Property(e => e.Smena).HasColumnName("smena");
            //});

            //modelBuilder.Entity<MyLogistPlantime>(entity =>
            //{
            //    entity.HasKey(e => e.Idmylogistplantime)
            //        .HasName("PK_my_logist_plantime_idmylogistplantime");

            //    entity.ToTable("my_logist_plantime");

            //    entity.Property(e => e.Idmylogistplantime)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmylogistplantime");

            //    entity.Property(e => e.Idcarmarking).HasColumnName("idcarmarking");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Plantime)
            //        .HasColumnType("decimal(18, 0)")
            //        .HasColumnName("plantime");
            //});

            //modelBuilder.Entity<MyLogistitemsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idlogistitemsign)
            //        .HasName("pk_logistitemsign")
            //        .IsClustered(false);

            //    entity.ToTable("my_logistitemsign");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum, e.Idlogistitemsign }, "idx_logistitemsign_idorderitem_orderitemnum")
            //        .IsClustered();

            //    entity.HasIndex(e => e.Idpeople, "idx_logistitemsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_logistitemsign_idsign");

            //    entity.Property(e => e.Idlogistitemsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlogistitemsign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.MyLogistitemsigns)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_manufactsign_orderitem");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyLogistitemsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_logistitemsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.MyLogistitemsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_logistitemsign_sign");
            //});

            //modelBuilder.Entity<MyLogistroute>(entity =>
            //{
            //    entity.HasKey(e => e.Idlogistroute)
            //        .HasName("pk_my_logistroute");

            //    entity.ToTable("my_logistroute");

            //    entity.Property(e => e.Idlogistroute)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idlogistroute");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(100)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyLogistrouteitem>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idlogistroute, e.Idlogistrouteitem })
            //        .HasName("pk_my_logistrouteitem");

            //    entity.ToTable("my_logistrouteitem");

            //    entity.Property(e => e.Idlogistroute).HasColumnName("idlogistroute");

            //    entity.Property(e => e.Idlogistrouteitem).HasColumnName("idlogistrouteitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");
            //});

            //modelBuilder.Entity<MyMbLinkFre>(entity =>
            //{
            //    entity.HasKey(e => e.IdLmf);

            //    entity.ToTable("my_mb_link_fre");

            //    entity.HasComment("фрезеровка наша и к3");

            //    entity.Property(e => e.IdLmf)
            //        .HasColumnName("id_lmf")
            //        .HasComment("ключ");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code")
            //        .HasComment("наша фрезеровка");

            //    entity.Property(e => e.IdMbf)
            //        .HasColumnName("id_mbf")
            //        .HasComment("к3 фрезеровка");
            //});

            //modelBuilder.Entity<MyMbLinkGood>(entity =>
            //{
            //    entity.HasKey(e => e.IdLmb)
            //        .HasName("PK_MY_MB_LINK_GOODS");

            //    entity.ToTable("my_mb_link_goods");

            //    entity.HasComment("материлы для к3");

            //    entity.Property(e => e.IdLmb)
            //        .HasColumnName("id_lmb")
            //        .HasComment("ключ");

            //    entity.Property(e => e.IdMb)
            //        .HasColumnName("id_mb")
            //        .HasComment("материал из к3");

            //    entity.Property(e => e.Idgood)
            //        .HasColumnName("idgood")
            //        .HasComment("материал");
            //});

            //modelBuilder.Entity<MyMdposStoredocLink>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredoc)
            //        .HasName("PK_my_mdpos_storedoc_link_idstoredoc");

            //    entity.ToTable("my_mdpos_storedoc_link");

            //    entity.Property(e => e.Idstoredoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");
            //});

            //modelBuilder.Entity<MyOrdernopart>(entity =>
            //{
            //    entity.HasKey(e => e.Idordernopart);

            //    entity.ToTable("my_ordernopart");

            //    entity.Property(e => e.Idordernopart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordernopart");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");
            //});

            //modelBuilder.Entity<MyOrdernovalue>(entity =>
            //{
            //    entity.HasKey(e => e.Idordernovalue)
            //        .HasName("PK_my_orderno_value");

            //    entity.ToTable("my_ordernovalue");

            //    entity.HasIndex(e => e.Idordernopart, "idx_my_ordernovalue_idordernopart");

            //    entity.Property(e => e.Idordernovalue)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordernovalue");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Idordernopart).HasColumnName("idordernopart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Ordernovalue)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("ordernovalue");

            //    entity.HasOne(d => d.IdordernopartNavigation)
            //        .WithMany(p => p.MyOrdernovalues)
            //        .HasForeignKey(d => d.Idordernopart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_my_orderno_value_my_ordernopart");
            //});

            //modelBuilder.Entity<MyOrderpricehistory>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idorder, e.Idorderpricehistory })
            //        .HasName("pk_my_orderpricehistory");

            //    entity.ToTable("my_orderpricehistory");

            //    entity.HasIndex(e => e.Idorderpricehistory, "uq_my_orderpricehistory")
            //        .IsUnique();

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderpricehistory).HasColumnName("idorderpricehistory");

            //    entity.Property(e => e.Basesm)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("basesm");

            //    entity.Property(e => e.Discountsm)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("discountsm");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Pricechangejson)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechangejson");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("sm");
            //});

            //modelBuilder.Entity<MyPerfomancelog>(entity =>
            //{
            //    entity.HasKey(e => e.Idperfomancelog);

            //    entity.ToTable("my_perfomancelog");

            //    entity.Property(e => e.Idperfomancelog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idperfomancelog");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.ObjectId).HasColumnName("OBJECT_ID");

            //    entity.Property(e => e.Param)
            //        .IsUnicode(false)
            //        .HasColumnName("param");

            //    entity.Property(e => e.Result)
            //        .HasColumnType("xml")
            //        .HasColumnName("result");

            //    entity.Property(e => e.Resultstr)
            //        .IsUnicode(false)
            //        .HasColumnName("resultstr");
            //});

            //modelBuilder.Entity<MyPorter>(entity =>
            //{
            //    entity.HasKey(e => e.Idporter);

            //    entity.ToTable("my_porter");

            //    entity.HasIndex(e => e.Idpeople, "idx_my_porter_idpeople");

            //    entity.Property(e => e.Idporter)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idporter");

            //    entity.Property(e => e.Appointment)
            //        .HasMaxLength(120)
            //        .IsUnicode(false)
            //        .HasColumnName("appointment");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmaster).HasColumnName("idmaster");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyPortershift>(entity =>
            //{
            //    entity.HasKey(e => e.Idportershift);

            //    entity.ToTable("my_portershift");

            //    entity.HasIndex(e => e.Start, "idx_my_portershift_start");

            //    entity.Property(e => e.Idportershift)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idportershift");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.End)
            //        .HasColumnType("datetime")
            //        .HasColumnName("end");

            //    entity.Property(e => e.Idmaster).HasColumnName("idmaster");

            //    entity.Property(e => e.Idporter).HasColumnName("idporter");

            //    entity.Property(e => e.Shiftnum).HasColumnName("shiftnum");

            //    entity.Property(e => e.Start)
            //        .HasColumnType("datetime")
            //        .HasColumnName("start");

            //    entity.HasOne(d => d.IdmasterNavigation)
            //        .WithMany(p => p.MyPortershifts)
            //        .HasForeignKey(d => d.Idmaster)
            //        .HasConstraintName("FK_my_portershift_porter");
            //});

            //modelBuilder.Entity<MyPortershiftPlan>(entity =>
            //{
            //    entity.HasKey(e => e.IdportershiftPlan)
            //        .HasName("PK_idportershift_plan");

            //    entity.ToTable("my_portershift_plan");

            //    entity.HasIndex(e => new { e.Dt, e.ShiftType }, "idx_my_portershift_plan_dt");

            //    entity.Property(e => e.IdportershiftPlan)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idportershift_plan")
            //        .HasComment("ИД Смены");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt")
            //        .HasComment("Дата смены");

            //    entity.Property(e => e.Hours)
            //        .HasColumnName("hours")
            //        .HasComment("Кол-во плановых часов в смене");

            //    entity.Property(e => e.Idmaster)
            //        .HasColumnName("idmaster")
            //        .HasComment("Мастер смены из таблицы my_porters");

            //    entity.Property(e => e.ShiftType)
            //        .HasColumnName("shift_type")
            //        .HasComment("Тип смены (0 - ночная, 1 - дневная, 2 - unknown)");
            //});

            //modelBuilder.Entity<MyPortershiftsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idportershiftsign)
            //        .HasName("pk_portershiftsign");

            //    entity.ToTable("my_portershiftsign");

            //    entity.HasIndex(e => e.Idshift, "idx_portershiftsign_idshift");

            //    entity.HasIndex(e => e.Idsign, "idx_portershiftsign_idsign");

            //    entity.HasIndex(e => new { e.Intvalue, e.Idsign }, "idx_portershiftsign_intvalue");

            //    entity.Property(e => e.Idportershiftsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idportershiftsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idshift).HasColumnName("idshift");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(125)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");
            //});

            //modelBuilder.Entity<MyProfilecutHardware>(entity =>
            //{
            //    entity.HasKey(e => e.Idhardware)
            //        .HasName("PK_my_profilecut_hardawre");

            //    entity.ToTable("my_profilecut_hardware");

            //    entity.Property(e => e.Idhardware)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idhardware");

            //    entity.Property(e => e.Idhardwaretemplate)
            //        .HasColumnName("idhardwaretemplate")
            //        .HasComment("idhardware оборудования с которого берем шаблон");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyProfilecutLog>(entity =>
            //{
            //    entity.HasKey(e => e.Idlog);

            //    entity.ToTable("my_profilecut_log");

            //    entity.Property(e => e.Idlog).HasColumnName("idlog");

            //    entity.Property(e => e.Data)
            //        .IsUnicode(false)
            //        .HasColumnName("data");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idhardware).HasColumnName("idhardware");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Iserror).HasColumnName("iserror");
            //});

            //modelBuilder.Entity<MyProfilecutTemplate>(entity =>
            //{
            //    entity.HasKey(e => e.Idtemplate);

            //    entity.ToTable("my_profilecut_template");

            //    entity.Property(e => e.Idtemplate).HasColumnName("idtemplate");

            //    entity.Property(e => e.AppendLineBreak).HasColumnName("append_line_break");

            //    entity.Property(e => e.Idhardware).HasColumnName("idhardware");

            //    entity.Property(e => e.RecordCode)
            //        .HasMaxLength(50)
            //        .HasColumnName("record_code");

            //    entity.Property(e => e.TemplateData).HasColumnName("template_data");
            //});

            //modelBuilder.Entity<MyPyrStoredoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_pyr_storedoc");

            //    entity.HasComment("Позиции фурнитуры в пирамиде");

            //    entity.HasIndex(e => e.Idstoredoc, "IDX_my_pyr_storedoc_idstoredoc");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .HasColumnName("idmanufactdoc")
            //        .HasComment("idmanufactdoc from manufactdocpyramidpos");

            //    entity.Property(e => e.Idmanufactdocpyramid).HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.HasOne(d => d.Idmanufactdocpyram)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idmanufactdocpyramid)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_pyr_manufactdocpyramid");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pyr_storedoc");
            //});

            //modelBuilder.Entity<MyQueue>(entity =>
            //{
            //    entity.ToTable("my_queue");

            //    entity.HasIndex(e => new { e.Iddoc, e.Doctype, e.Action, e.Status, e.Name }, "IDX_my_queue_iddoc");

            //    entity.HasIndex(e => new { e.Status, e.DtCre, e.Name, e.Action, e.Doctype, e.Iddoc }, "IDX_my_queue_status");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Action)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("action")
            //        .HasDefaultValueSql("('exec')");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Doctype)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("doctype");

            //    entity.Property(e => e.DtCre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtCre")
            //        .HasDefaultValueSql("(getdate())");

            //    entity.Property(e => e.DtEdit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtEdit");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Message)
            //        .IsUnicode(false)
            //        .HasColumnName("message");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Param)
            //        .IsUnicode(false)
            //        .HasColumnName("param");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("status")
            //        .HasDefaultValueSql("('none')");
            //});

            //modelBuilder.Entity<MyRandomNumberView>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("myRandomNumberView");

            //    entity.Property(e => e.RandomNumber).HasColumnName("randomNumber");
            //});

            //modelBuilder.Entity<MyReservation>(entity =>
            //{
            //    entity.HasKey(e => e.Idreservation)
            //        .HasName("PK_reservation");

            //    entity.ToTable("my_reservation");

            //    entity.Property(e => e.Idreservation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreservation");

            //    entity.Property(e => e.Goodtypes2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtypes2");

            //    entity.Property(e => e.IddocoperDiv).HasColumnName("iddocoper_div");

            //    entity.Property(e => e.IddocoperMf).HasColumnName("iddocoper_mf");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.IdstoredepartDiv).HasColumnName("idstoredepart_div");
            //});

            //modelBuilder.Entity<MySaveManufactdocposModelcalc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_save_manufactdocpos_modelcalc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");
            //});

            //modelBuilder.Entity<MySelfcontrolQuery>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_selfcontrol_query");

            //    entity.Property(e => e.Idselfcontrolquery).HasColumnName("idselfcontrolquery");

            //    entity.Property(e => e.Query)
            //        .IsUnicode(false)
            //        .HasColumnName("query");
            //});

            //modelBuilder.Entity<MyServicereasondepart>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicereasondepart)
            //        .HasName("PK_servicereasondepart");

            //    entity.ToTable("my_servicereasondepart");

            //    entity.HasIndex(e => e.Idcauserdepart, "idx_my_servicereasondepart_idcauserdepart");

            //    entity.HasIndex(e => e.Idservicereason, "idx_my_servicereasondepart_idservicereason");

            //    entity.Property(e => e.Idservicereasondepart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicereasondepart");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcauserdepart).HasColumnName("idcauserdepart");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.HasOne(d => d.IdcauserdepartNavigation)
            //        .WithMany(p => p.MyServicereasondeparts)
            //        .HasForeignKey(d => d.Idcauserdepart)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_servicereasondepart_reasondepart");

            //    entity.HasOne(d => d.IdservicereasonNavigation)
            //        .WithMany(p => p.MyServicereasondeparts)
            //        .HasForeignKey(d => d.Idservicereason)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_servicereasondepart_servicereason");
            //});

            //modelBuilder.Entity<MyServicereasonline>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicereasonline)
            //        .HasName("PK_servicereasonline");

            //    entity.ToTable("my_servicereasonline");

            //    entity.HasIndex(e => e.Idline, "idx_my_servicereasonline_idline");

            //    entity.HasIndex(e => e.Idservicereason, "idx_my_servicereasonline_idservicereason");

            //    entity.Property(e => e.Idservicereasonline)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicereasonline");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idline).HasColumnName("idline");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.HasOne(d => d.IdlineNavigation)
            //        .WithMany(p => p.MyServicereasonlines)
            //        .HasForeignKey(d => d.Idline)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_servicereasonline_reasonline");

            //    entity.HasOne(d => d.IdservicereasonNavigation)
            //        .WithMany(p => p.MyServicereasonlines)
            //        .HasForeignKey(d => d.Idservicereason)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_servicereasonline_servicereason");
            //});

            //modelBuilder.Entity<MyShiftKtu>(entity =>
            //{
            //    entity.HasKey(e => new { e.StartShift, e.Shift })
            //        .HasName("PK__MY_SHIFT__4E1596CB0AF59BB2");

            //    entity.ToTable("MY_SHIFT_KTU");

            //    entity.Property(e => e.StartShift)
            //        .HasColumnType("datetime")
            //        .HasColumnName("startShift");

            //    entity.Property(e => e.Shift).HasColumnName("shift");

            //    entity.Property(e => e.DtCalc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtCalc");

            //    entity.Property(e => e.FactComplect).HasColumnName("factComplect");

            //    entity.Property(e => e.FactLoad).HasColumnName("factLoad");

            //    entity.Property(e => e.Idporter).HasColumnName("idporter");

            //    entity.Property(e => e.KtuAverage)
            //        .HasColumnType("decimal(10, 2)")
            //        .HasColumnName("ktuAverage");

            //    entity.Property(e => e.KtuComplect)
            //        .HasColumnType("decimal(10, 2)")
            //        .HasColumnName("ktuComplect");

            //    entity.Property(e => e.KtuLoad)
            //        .HasColumnType("decimal(10, 2)")
            //        .HasColumnName("ktuLoad");

            //    entity.Property(e => e.PlanComplect).HasColumnName("planComplect");

            //    entity.Property(e => e.PlanComplectSm).HasColumnName("planComplectSm");

            //    entity.Property(e => e.PlanLoad).HasColumnName("planLoad");

            //    entity.Property(e => e.PlanLoadSm).HasColumnName("planLoadSm");

            //    entity.Property(e => e.PorterComplectAverage)
            //        .HasColumnType("decimal(10, 1)")
            //        .HasColumnName("porterComplectAverage");

            //    entity.Property(e => e.PortersCount).HasColumnName("portersCount");
            //});

            //modelBuilder.Entity<MyShtpRegWork>(entity =>
            //{
            //    entity.HasKey(e => e.Idshtpregwork)
            //        .HasName("PK_shtpregwork");

            //    entity.ToTable("my_shtp_reg_work");

            //    entity.HasIndex(e => e.Dtvalue, "NonClusteredIndex-20180420-164845");

            //    entity.HasIndex(e => new { e.Shtp, e.Dtvalue }, "NonClusteredIndex-20180420-181821");

            //    entity.Property(e => e.Idshtpregwork).HasColumnName("idshtpregwork");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Shtp)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("shtp");
            //});

            //modelBuilder.Entity<MyShuttlepyramid>(entity =>
            //{
            //    entity.HasKey(e => e.Idshuttlepyramid);

            //    entity.ToTable("my_shuttlepyramid");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_my_shuttlepyramid_idstoredepart");

            //    entity.HasIndex(e => e.Num, "idx_my_shuttlepyramid_num");

            //    entity.Property(e => e.Idshuttlepyramid)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshuttlepyramid");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Driver)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("driver");

            //    entity.Property(e => e.Dtstate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstate");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Num)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("num");

            //    entity.Property(e => e.State)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("state");

            //    entity.Property(e => e.Type).HasColumnName("type");

            //    entity.HasOne(d => d.IddelivdocNavigation)
            //        .WithMany(p => p.MyShuttlepyramids)
            //        .HasForeignKey(d => d.Iddelivdoc)
            //        .HasConstraintName("FK_my_shuttlepyramid_delivdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyShuttlepyramids)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_my_shuttlepyramid_people");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.MyShuttlepyramids)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_my_shuttlepyramid_storedepart");
            //});

            //modelBuilder.Entity<MyShuttlepyramidaddress>(entity =>
            //{
            //    entity.HasKey(e => e.Idshuttlepyramidaddress);

            //    entity.ToTable("my_shuttlepyramidaddress");

            //    entity.HasIndex(e => e.Idshuttlepyramid, "idx_my_shuttlepyramidaddress_idshuttlepyramid");

            //    entity.HasIndex(e => e.Idstorageaddress, "idx_my_shuttlepyramidaddress_idstorageaddress");

            //    entity.Property(e => e.Idshuttlepyramidaddress)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshuttlepyramidaddress");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idshuttlepyramid).HasColumnName("idshuttlepyramid");

            //    entity.Property(e => e.Idstorageaddress).HasColumnName("idstorageaddress");

            //    entity.Property(e => e.Time)
            //        .HasColumnType("datetime")
            //        .HasColumnName("time");

            //    entity.HasOne(d => d.Idshuttlepyram)
            //        .WithMany(p => p.MyShuttlepyramidaddresses)
            //        .HasForeignKey(d => d.Idshuttlepyramid)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_my_shuttlepyramidaddress_shuttlepyramid");

            //    entity.HasOne(d => d.IdstorageaddressNavigation)
            //        .WithMany(p => p.MyShuttlepyramidaddresses)
            //        .HasForeignKey(d => d.Idstorageaddress)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_my_shuttlepyramidaddress_storageaddress");
            //});

            //modelBuilder.Entity<MySoapError>(entity =>
            //{
            //    entity.HasKey(e => e.Idsoaperror);

            //    entity.ToTable("my_soap_error");

            //    entity.Property(e => e.Idsoaperror).HasColumnName("idsoaperror");

            //    entity.Property(e => e.Datecreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("datecreate");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Method)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("method");

            //    entity.Property(e => e.Textmessage)
            //        .IsUnicode(false)
            //        .HasColumnName("textmessage");
            //});

            //modelBuilder.Entity<MySoapOk>(entity =>
            //{
            //    entity.HasKey(e => e.Idsoapok);

            //    entity.ToTable("my_soap_ok");

            //    entity.Property(e => e.Idsoapok).HasColumnName("idsoapok");

            //    entity.Property(e => e.Datecreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("datecreate");

            //    entity.Property(e => e.Descr)
            //        .HasMaxLength(500)
            //        .IsUnicode(false)
            //        .HasColumnName("descr");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Method)
            //        .HasMaxLength(50)
            //        .HasColumnName("method");
            //});

            //modelBuilder.Entity<MySpaceusedlog>(entity =>
            //{
            //    entity.HasKey(e => new { e.Dt, e.Name })
            //        .HasName("pk_my_spaceusedlog");

            //    entity.ToTable("my_spaceusedlog");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(100)
            //        .HasColumnName("name");

            //    entity.Property(e => e.IndexSize).HasColumnName("index_size");
            //});

            //modelBuilder.Entity<MyStorageaddress>(entity =>
            //{
            //    entity.HasKey(e => e.Idstorageaddress);

            //    entity.ToTable("my_storageaddress");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_my_storageaddress_idstoredepart");

            //    entity.Property(e => e.Idstorageaddress)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstorageaddress");

            //    entity.Property(e => e.Area)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("area");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Place).HasColumnName("place");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.MyStorageaddresses)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_my_storageaddress_storedepart");
            //});

            //modelBuilder.Entity<MySyncha>(entity =>
            //{
            //    entity.ToTable("my_syncha");

            //    entity.HasIndex(e => new { e.Iddoc, e.Tp }, "IDX_iddoc_tp");

            //    entity.HasIndex(e => new { e.Iddoc, e.Tp, e.Status }, "IDX_iddoc_tp_status");

            //    entity.HasIndex(e => e.Status, "my_syncha_status");

            //    entity.Property(e => e.Id)
            //        .HasColumnName("id")
            //        .HasComment("ключ");

            //    entity.Property(e => e.Ds)
            //        .HasColumnType("datetime")
            //        .HasColumnName("ds")
            //        .HasDefaultValueSql("(getdate())")
            //        .HasComment("дата добавления строки");

            //    entity.Property(e => e.Du)
            //        .HasColumnType("datetime")
            //        .HasColumnName("du")
            //        .HasDefaultValueSql("(getdate())")
            //        .HasComment("дата изменения строки");

            //    entity.Property(e => e.Iddoc)
            //        .HasColumnName("iddoc")
            //        .HasComment("ключ из таблицы указанной в tp");

            //    entity.Property(e => e.Infa)
            //        .IsUnicode(false)
            //        .HasColumnName("infa")
            //        .HasComment("текст ошибки или сообщения от 1c");

            //    entity.Property(e => e.Meth)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("meth")
            //        .HasDefaultValueSql("('create_peremeshhenie_tovarov_wd')")
            //        .HasComment("1С метод");

            //    entity.Property(e => e.Pars)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("pars")
            //        .HasComment("параметры для sp которая формирует XML");

            //    entity.Property(e => e.Queue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("queue");

            //    entity.Property(e => e.Sp)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("sp")
            //        .HasDefaultValueSql("('my_xml_order')")
            //        .HasComment("ms sql sp для формирование XML");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("status")
            //        .HasDefaultValueSql("('none')")
            //        .HasComment("статус (none - будет отсылаться в rabbit)");

            //    entity.Property(e => e.Tp)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("tp")
            //        .HasDefaultValueSql("('orders')")
            //        .HasComment("таблица в которой документ");

            //    entity.Property(e => e.TryCount)
            //        .HasColumnName("try_count")
            //        .HasDefaultValueSql("((0))");
            //});

            //modelBuilder.Entity<MyTemp2>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("my_temp2");

            //    entity.HasIndex(e => e.Tag, "IDX_my_temp2_tag");

            //    entity.HasIndex(e => e.TmpInt, "IDX_my_temp2_tmp_int");

            //    entity.Property(e => e.Tag)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("tag");

            //    entity.Property(e => e.TmpFloat)
            //        .HasColumnType("decimal(18, 2)")
            //        .HasColumnName("tmp_float");

            //    entity.Property(e => e.TmpInt).HasColumnName("tmp_int");

            //    entity.Property(e => e.TmpStr)
            //        .HasMaxLength(2048)
            //        .IsUnicode(false)
            //        .HasColumnName("tmp_str");
            //});

            //modelBuilder.Entity<MyTriproute>(entity =>
            //{
            //    entity.HasKey(e => e.IdDelivDoc);

            //    entity.ToTable("my_triproute");

            //    entity.HasIndex(e => e.WialonId, "IX_my_triproute_WialonId");

            //    entity.Property(e => e.IdDelivDoc).ValueGeneratedNever();

            //    entity.Property(e => e.EndProcessed).HasColumnType("datetime");

            //    entity.Property(e => e.PlanData).IsUnicode(false);

            //    entity.Property(e => e.ShipmentPlanDate).HasColumnType("datetime");

            //    entity.Property(e => e.StartProcessed).HasColumnType("datetime");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StatusDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyTriprouteSm>(entity =>
            //{
            //    entity.HasKey(e => new { e.IdDelivDoc, e.Idcustomer, e.PlanDate });

            //    entity.ToTable("my_triproute_sms");

            //    entity.HasIndex(e => e.Id, "UQ_my_triproute_sms")
            //        .IsUnique();

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.PlanDate).HasColumnType("datetime");

            //    entity.Property(e => e.DtCreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtCreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Id)
            //        .ValueGeneratedOnAdd()
            //        .HasColumnName("id");
            //});

            //modelBuilder.Entity<MyTriprouteorder>(entity =>
            //{
            //    entity.HasKey(e => new { e.IdDelivDoc, e.PointNum, e.IdOrder });

            //    entity.ToTable("my_triprouteorders");

            //    entity.HasIndex(e => e.IdOrder, "IX_my_triprouteorders");
            //});

            //modelBuilder.Entity<MyTriproutepoint>(entity =>
            //{
            //    entity.HasKey(e => new { e.IdDelivDoc, e.PointNum });

            //    entity.ToTable("my_triproutepoint");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(300)
            //        .IsUnicode(false);

            //    entity.Property(e => e.AddressPlace)
            //        .HasMaxLength(300)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Coordinate)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.FactDate).HasColumnType("datetime");

            //    entity.Property(e => e.FactDate2).HasColumnType("datetime");

            //    entity.Property(e => e.NotifyTime).HasColumnType("datetime");

            //    entity.Property(e => e.PlanDate).HasColumnType("datetime");

            //    entity.Property(e => e.PlanDate2).HasColumnType("datetime");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.StatusDate).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<MyTriproutepointstate>(entity =>
            //{
            //    entity.HasKey(e => new { e.IdDelivDoc, e.PointNum, e.StatusFlag });

            //    entity.ToTable("my_triproutepointstate");

            //    entity.Property(e => e.Date).HasColumnType("datetime");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<MyWorkstation>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkstation);

            //    entity.ToTable("my_workstation");

            //    entity.Property(e => e.Idworkstation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkstation");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Computername)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("computername");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idline).HasColumnName("idline");

            //    entity.Property(e => e.Idworkstationlayout).HasColumnName("idworkstationlayout");

            //    entity.Property(e => e.Ip)
            //        .HasMaxLength(15)
            //        .IsUnicode(false)
            //        .HasColumnName("ip");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Nopaperdata)
            //        .HasColumnType("text")
            //        .HasColumnName("nopaperdata");

            //    entity.Property(e => e.Pos).HasColumnName("pos");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.Supershort)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("supershort");

            //    entity.Property(e => e.Wsinterface).HasColumnName("wsinterface");

            //    entity.HasOne(d => d.IdlineNavigation)
            //        .WithMany(p => p.MyWorkstations)
            //        .HasForeignKey(d => d.Idline)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_workstation");

            //    entity.HasOne(d => d.IdworkstationlayoutNavigation)
            //        .WithMany(p => p.MyWorkstations)
            //        .HasForeignKey(d => d.Idworkstationlayout)
            //        .HasConstraintName("FK_my_workstation_workstationlayout");
            //});

            //modelBuilder.Entity<MyWorkstationActivity>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkstationactivity);

            //    entity.ToTable("my_workstation_activity");

            //    entity.HasIndex(e => e.Dtvalue, "ix_da_my_workstation_activity_dtvalue_includes");

            //    entity.HasIndex(e => new { e.Idworkstation, e.Dtvalue }, "ix_da_my_workstation_activity_idworkstation_dtvalue");

            //    entity.Property(e => e.Idworkstationactivity)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkstationactivity");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idworkstation).HasColumnName("idworkstation");

            //    entity.Property(e => e.Intvalue).HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdworkstationNavigation)
            //        .WithMany(p => p.MyWorkstationActivities)
            //        .HasForeignKey(d => d.Idworkstation)
            //        .HasConstraintName("FK_my_workstation_activity");
            //});

            //modelBuilder.Entity<MyWorkstationSign>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkstationsign)
            //        .HasName("pk_my_workstation_sign");

            //    entity.ToTable("my_workstation_sign");

            //    entity.HasIndex(e => e.Dtcreate, "NonClusteredIndex-20181003-155343");

            //    entity.HasIndex(e => new { e.Idsign, e.Dtvalue }, "ix_da_my_workstation_sign_idsign_dtvalue_includes");

            //    entity.HasIndex(e => new { e.Idworkstation, e.Dtvalue }, "ix_da_my_workstation_sign_idworkstation_dtvalue_includes");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "ix_my_workstation_sign_manufactdocpos");

            //    entity.Property(e => e.Idworkstationsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkstationsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idworkstation).HasColumnName("idworkstation");

            //    entity.Property(e => e.Intvalue).HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2).HasColumnName("intvalue2");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.MyWorkstationSigns)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_workstation_sign_manufactdocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyWorkstationSigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_my_workstation_sign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.MyWorkstationSigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_my_workstation_sign_sign");

            //    entity.HasOne(d => d.IdworkstationNavigation)
            //        .WithMany(p => p.MyWorkstationSigns)
            //        .HasForeignKey(d => d.Idworkstation)
            //        .HasConstraintName("FK_my_workstation_sign_workstation");
            //});

            //modelBuilder.Entity<MyWorkstationlayout>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkstationlayout);

            //    entity.ToTable("my_workstationlayout");

            //    entity.Property(e => e.Idworkstationlayout)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkstationlayout");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Layout)
            //        .HasColumnType("text")
            //        .HasColumnName("layout");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<MyZaManufactdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idmanufactdoc)
            //        .HasName("pk_my_za_manufactdoc");

            //    entity.ToTable("my_za_manufactdoc");

            //    entity.Property(e => e.Idmanufactdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idmanufactdocsign).HasColumnName("idmanufactdocsign");

            //    entity.Property(e => e.Loaddate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("loaddate");
            //});

            //modelBuilder.Entity<MyZaManufactdocpo>(entity =>
            //{
            //    entity.HasKey(e => new { e.Idmanufactdoc, e.Idorderitem, e.Orderitemnum })
            //        .HasName("pk_my_za_manufactdocpos");

            //    entity.ToTable("my_za_manufactdocpos");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.IdorderitemParent).HasColumnName("idorderitem_parent");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("decimal(15, 4)")
            //        .HasColumnName("qu");
            //});

            //modelBuilder.Entity<MyZapak>(entity =>
            //{
            //    entity.HasKey(e => e.Idzapak);

            //    entity.ToTable("my_zapak");

            //    entity.Property(e => e.Idzapak)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idzapak");

            //    entity.Property(e => e.Datecreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("datecreate");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idworkstation).HasColumnName("idworkstation");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany(p => p.MyZapaks)
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .HasConstraintName("FK_my_zapak_manufactdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.MyZapaks)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_my_zapak_people");

            //    entity.HasOne(d => d.IdworkstationNavigation)
            //        .WithMany(p => p.MyZapaks)
            //        .HasForeignKey(d => d.Idworkstation)
            //        .HasConstraintName("FK_my_zapak_workstation");
            //});

            //modelBuilder.Entity<Nopaper>(entity =>
            //{
            //    entity.HasKey(e => e.Idnopaper);

            //    entity.ToTable("nopaper");

            //    entity.HasIndex(e => e.Idorderitem, "idx_nopaper_idorderitem");

            //    entity.Property(e => e.Idnopaper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idnopaper");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defect).HasColumnName("defect");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtship)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtship");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople1).HasColumnName("idpeople1");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Nodefect).HasColumnName("nodefect");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Quship).HasColumnName("quship");

            //    entity.Property(e => e.Ship).HasColumnName("ship");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Nopapers)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_nopaper_orderitem");
            //});

            //modelBuilder.Entity<Optimdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdoc);

            //    entity.ToTable("optimdoc");

            //    entity.HasIndex(e => e.Idcustomer, "idx_optimdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_optimdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_optimdoc_iddocstate");

            //    entity.HasIndex(e => e.Idmanufactdoc, "idx_optimdoc_idmanufactdoc");

            //    entity.HasIndex(e => e.Idoptimdocgroup, "idx_optimdoc_idoptimdocgroup");

            //    entity.HasIndex(e => e.Idorder, "idx_optimdoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_optimdoc_idpeople");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_optimdoc_idstoredoc");

            //    entity.Property(e => e.Idoptimdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idoptimdocgroup).HasColumnName("idoptimdocgroup");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdoc_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_optimdoc_docstate");

            //    entity.HasOne(d => d.IdoptimdocgroupNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Idoptimdocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdoc_optimdocgroup");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdoc_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdoc_people");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Optimdocs)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdoc_storedoc");
            //});

            //modelBuilder.Entity<Optimdocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocdiraction);

            //    entity.ToTable("optimdocdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_optimdocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocdiraction_idoptimdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_optimdocdiraction_idpeople");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_optimdocdiraction_idpeopleedit");

            //    entity.HasIndex(e => e.Idpeopleexec, "idx_optimdocdiraction_idpeopleexec");

            //    entity.Property(e => e.Idoptimdocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasComment("Дата создания этапа");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата редактирования этапа");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Пользователь, создавший этап");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Пользователь, редактировавший этап");

            //    entity.Property(e => e.Idpeopleexec)
            //        .HasColumnName("idpeopleexec")
            //        .HasComment("Исполнитель этапа");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Optimdocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocdiraction_diraction");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocdiractions)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocdiraction_optimdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.OptimdocdiractionIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_optimdocdiraction_people");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.OptimdocdiractionIdpeopleeditNavigations)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_optimdocdiraction_people1");

            //    entity.HasOne(d => d.IdpeopleexecNavigation)
            //        .WithMany(p => p.OptimdocdiractionIdpeopleexecNavigations)
            //        .HasForeignKey(d => d.Idpeopleexec)
            //        .HasConstraintName("FK_optimdocdiraction_people2");
            //});

            //modelBuilder.Entity<Optimdocdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocdiractionpeople);

            //    entity.ToTable("optimdocdiractionpeople");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocdiractionpeople_idoptimdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_optimdocdiractionpeople_idpeople");

            //    entity.Property(e => e.Idoptimdocdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocdiraction).HasColumnName("idoptimdocdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Optimdocdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_optimdocdiractionpeople_people");
            //});

            //modelBuilder.Entity<Optimdocgoodin>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocgoodin);

            //    entity.ToTable("optimdocgoodin");

            //    entity.HasIndex(e => e.Idgood, "idx_optimdocgoodin_idgood");

            //    entity.HasIndex(e => e.Idgoodbuffer, "idx_optimdocgoodin_idgoodbuffer");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocgoodin_idoptimdoc");

            //    entity.HasIndex(e => e.Idoptimdocgoodout, "idx_optimdocgoodin_idoptimdocgoodout");

            //    entity.HasIndex(e => e.Idoptimdocpic, "idx_optimdocgoodin_idoptimdocpic");

            //    entity.HasIndex(e => e.Parentid, "idx_optimdocgoodin_parentid");

            //    entity.Property(e => e.Idoptimdocgoodin)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocgoodin");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolorbase).HasColumnName("idcolorbase");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgoodout).HasColumnName("idoptimdocgoodout");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Optimdocgoodins)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocgoodin_good");

            //    entity.HasOne(d => d.IdgoodbufferNavigation)
            //        .WithMany(p => p.Optimdocgoodins)
            //        .HasForeignKey(d => d.Idgoodbuffer)
            //        .HasConstraintName("FK_optimdocgoodin_goodbuffer");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocgoodins)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocgoodin_optimdoc");

            //    entity.HasOne(d => d.IdoptimdocgoodoutNavigation)
            //        .WithMany(p => p.Optimdocgoodins)
            //        .HasForeignKey(d => d.Idoptimdocgoodout)
            //        .HasConstraintName("FK_optimdocgoodin_optimdocgoodout");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_optimdocgoodin_optimdocgoodin");
            //});

            //modelBuilder.Entity<Optimdocgoodout>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocgoodout);

            //    entity.ToTable("optimdocgoodout");

            //    entity.HasIndex(e => e.Idgood, "idx_optimdocgoodout_idgood");

            //    entity.HasIndex(e => e.Idgoodbuffer, "idx_optimdocgoodout_idgoodbuffer");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocgoodout_idoptimdoc");

            //    entity.HasIndex(e => e.Idoptimdocpic, "idx_optimdocgoodout_idoptimdocpic");

            //    entity.Property(e => e.Idoptimdocgoodout)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocgoodout");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolorbase).HasColumnName("idcolorbase");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Optimdocgoodouts)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocgoodout_good");

            //    entity.HasOne(d => d.IdgoodbufferNavigation)
            //        .WithMany(p => p.Optimdocgoodouts)
            //        .HasForeignKey(d => d.Idgoodbuffer)
            //        .HasConstraintName("FK_optimdocgoodout_goodbuffer");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocgoodouts)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocgoodout_optimdoc");
            //});

            //modelBuilder.Entity<Optimdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocgroup);

            //    entity.ToTable("optimdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_optimdocgroup_parentid");

            //    entity.Property(e => e.Idoptimdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Optimdocpic>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocpic);

            //    entity.ToTable("optimdocpic");

            //    entity.HasIndex(e => e.Idgood, "idx_optimdocpic_idgood");

            //    entity.HasIndex(e => e.Idgoodbuffer, "idx_optimdocpic_idgoodbuffer");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocpic_idoptimdoc");

            //    entity.HasIndex(e => e.Idoptimdocgoodin, "idx_optimdocpic_idoptimdocgoodin");

            //    entity.HasIndex(e => e.Parentid, "idx_optimdocpic_parentid");

            //    entity.Property(e => e.Idoptimdocpic)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Class)
            //        .HasColumnName("class")
            //        .HasComment("Сериализованный результат оптимизации");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgoodin).HasColumnName("idoptimdocgoodin");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Thickost).HasColumnName("thickost");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Optimdocpics)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpic_good");

            //    entity.HasOne(d => d.IdgoodbufferNavigation)
            //        .WithMany(p => p.Optimdocpics)
            //        .HasForeignKey(d => d.Idgoodbuffer)
            //        .HasConstraintName("FK_optimdocpic_goodbuffer");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocpics)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpic_optimdoc");

            //    entity.HasOne(d => d.IdoptimdocgoodinNavigation)
            //        .WithMany(p => p.Optimdocpics)
            //        .HasForeignKey(d => d.Idoptimdocgoodin)
            //        .HasConstraintName("FK_optimdocpic_optimdocgoodin");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_optimdocpic_optimdocpic");
            //});

            //modelBuilder.Entity<Optimdocpicsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocpicsign);

            //    entity.ToTable("optimdocpicsign");

            //    entity.HasIndex(e => e.Idoptimdocpic, "idx_optimdocpicsign_idoptimdocpic");

            //    entity.HasIndex(e => e.Idorderitem, "idx_optimdocpicsign_idorderitem");

            //    entity.HasIndex(e => e.Idpeople, "idx_optimdocpicsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_optimdocpicsign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_optimdocpicsign_idsignvalue");

            //    entity.HasIndex(e => e.Intvalue, "idx_optimdocpicsign_intvalue");

            //    entity.Property(e => e.Idoptimdocpicsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocpicsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdoptimdocpicNavigation)
            //        .WithMany(p => p.Optimdocpicsigns)
            //        .HasForeignKey(d => d.Idoptimdocpic)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpicsign_optimdoc");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Optimdocpicsigns)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_optimdocpicsign_optimdocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Optimdocpicsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdocpicsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Optimdocpicsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdocpicsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Optimdocpicsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_optimdocpicsign_signvalue");
            //});

            //modelBuilder.Entity<Optimdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocpos);

            //    entity.ToTable("optimdocpos");

            //    entity.HasIndex(e => e.Barcode, "idx_optimdocpos_barcode");

            //    entity.HasIndex(e => e.Idgood, "idx_optimdocpos_idgood");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocpos_idoptimdoc");

            //    entity.HasIndex(e => e.Idoptimdocpic, "idx_optimdocpos_idoptimdocpic");

            //    entity.HasIndex(e => e.Idorder, "idx_optimdocpos_idorder");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "ind_optimdocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idmodelcalc, "ind_optimdocpos_idmodelcalc");

            //    entity.HasIndex(e => e.Idorderitem, "ind_optimdocpos_idorderitem");

            //    entity.Property(e => e.Idoptimdocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem)
            //        .HasColumnName("idorderitem")
            //        .HasComment("Позиция заказа");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpair).HasColumnName("numpair");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpos2).HasColumnName("numpos2");

            //    entity.Property(e => e.Numpos3).HasColumnName("numpos3");

            //    entity.Property(e => e.Numposbalka).HasColumnName("numposbalka");

            //    entity.Property(e => e.Numwhip).HasColumnName("numwhip");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Row).HasColumnName("row");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpos_good");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_optimdocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdmodelcalcNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idmodelcalc)
            //        .HasConstraintName("FK_optimdocpos_modelcalc");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpos_optimdoc");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_optimdocpos_order");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Optimdocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocpos_orderitem");
            //});

            //modelBuilder.Entity<Optimdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idoptimdocsign);

            //    entity.ToTable("optimdocsign");

            //    entity.HasIndex(e => e.Idoptimdoc, "idx_optimdocsign_idoptimdoc");

            //    entity.HasIndex(e => e.Idorderitem, "idx_optimdocsign_idorderitem");

            //    entity.HasIndex(e => e.Idpeople, "idx_optimdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_optimdocsign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_optimdocsign_idsignvalue");

            //    entity.Property(e => e.Idoptimdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idoptimdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdoptimdocNavigation)
            //        .WithMany(p => p.Optimdocsigns)
            //        .HasForeignKey(d => d.Idoptimdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_optimdocsign_optimdoc");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Optimdocsigns)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_optimdocsign_optimdocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Optimdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Optimdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_optimdocsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Optimdocsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_optimdocsign_signvalue");
            //});

            //modelBuilder.Entity<Order>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder)
            //        .HasName("pk_order");

            //    entity.ToTable("orders");

            //    entity.HasIndex(e => e.Iddepartment, "idx_orders_iddepartment");

            //    entity.HasIndex(e => e.Iddestanation, "idx_orders_iddestanation");

            //    entity.HasIndex(e => e.Iddocoper, "idx_orders_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_orders_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_orders_idpeople");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Adddt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt2");

            //    entity.Property(e => e.Adddt3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt3");

            //    entity.Property(e => e.Addinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Addtext)
            //        .HasColumnType("text")
            //        .HasColumnName("addtext");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idadvertisingaction).HasColumnName("idadvertisingaction");

            //    entity.Property(e => e.Idagree).HasColumnName("idagree");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Idcustomer3).HasColumnName("idcustomer3");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idordersgroup).HasColumnName("idordersgroup");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2)
            //        .HasColumnName("idpeople2")
            //        .HasComment("Сотрудник 2");

            //    entity.Property(e => e.Idpeople3)
            //        .HasColumnName("idpeople3")
            //        .HasComment("Сотрудник 3");

            //    entity.Property(e => e.Idpeople4)
            //        .HasColumnName("idpeople4")
            //        .HasComment("Сотрудник 4");

            //    entity.Property(e => e.Idpeopledesigner).HasColumnName("idpeopledesigner");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsourceinfo).HasColumnName("idsourceinfo");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Installinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("installinfo");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Productinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("productinfo");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Saved2).HasColumnName("saved2");

            //    entity.Property(e => e.Sizeinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("sizeinfo");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Supplyinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("supplyinfo");

            //    entity.Property(e => e.Transportinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("transportinfo");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idaddress)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_address");

            //    entity.HasOne(d => d.IdagreeNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idagree)
            //        .HasConstraintName("FK_orders_agree");

            //    entity.HasOne(d => d.IdagreementNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idagreement)
            //        .HasConstraintName("FK_orders_agreement");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.OrderIdcustomerNavigations)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_customer");

            //    entity.HasOne(d => d.Idcustomer2Navigation)
            //        .WithMany(p => p.OrderIdcustomer2Navigations)
            //        .HasForeignKey(d => d.Idcustomer2)
            //        .HasConstraintName("FK_orders_customer1");

            //    entity.HasOne(d => d.Idcustomer3Navigation)
            //        .WithMany(p => p.OrderIdcustomer3Navigations)
            //        .HasForeignKey(d => d.Idcustomer3)
            //        .HasConstraintName("FK_orders_customer2");

            //    entity.HasOne(d => d.IddepartmentNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Iddepartment)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_department");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_destanation");

            //    entity.HasOne(d => d.IddiscardNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Iddiscard)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_discard");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_orders_docstate");

            //    entity.HasOne(d => d.IdordersgroupNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idordersgroup)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_ordersgroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.OrderIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_people");

            //    entity.HasOne(d => d.IdpeopledesignerNavigation)
            //        .WithMany(p => p.OrderIdpeopledesignerNavigations)
            //        .HasForeignKey(d => d.Idpeopledesigner)
            //        .HasConstraintName("FK_orders_peopledesigner");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idseller)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_seller");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_valut");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Orders)
            //        .HasForeignKey(d => d.Idversion)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_version");
            //});

            //modelBuilder.Entity<Orderbudget>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderbudget);

            //    entity.ToTable("orderbudget");

            //    entity.HasIndex(e => e.Idbudget, "idx_orderbudget_idbudget");

            //    entity.HasIndex(e => e.Idorder, "idx_orderbudget_idorder");

            //    entity.Property(e => e.Idorderbudget)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderbudget");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.D)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("d");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idbudget).HasColumnName("idbudget");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.K)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.HasOne(d => d.IdbudgetNavigation)
            //        .WithMany(p => p.Orderbudgets)
            //        .HasForeignKey(d => d.Idbudget)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderbudget_budget");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderbudgets)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderbudget_orders");
            //});

            //modelBuilder.Entity<Orderchange>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderchange)
            //        .HasName("PK__ordercha__D2CF015202495C27");

            //    entity.ToTable("orderchange");

            //    entity.HasIndex(e => e.Dt, "idx_orderchange_dt");

            //    entity.HasIndex(e => e.Idorder, "idx_orderchange_idorder");

            //    entity.Property(e => e.Idorderchange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderchange");

            //    entity.Property(e => e.Addressnew)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addressnew");

            //    entity.Property(e => e.Addressold)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addressold");

            //    entity.Property(e => e.Appealtype)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("appealtype");

            //    entity.Property(e => e.Delivdocnamenew)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("delivdocnamenew");

            //    entity.Property(e => e.Delivdocnameold)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("delivdocnameold");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtapply)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtapply");

            //    entity.Property(e => e.Idaddressnew).HasColumnName("idaddressnew");

            //    entity.Property(e => e.Idaddressold).HasColumnName("idaddressold");

            //    entity.Property(e => e.Iddestanationnew).HasColumnName("iddestanationnew");

            //    entity.Property(e => e.Iddestanationold).HasColumnName("iddestanationold");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderadditional).HasColumnName("idorderadditional");

            //    entity.Property(e => e.Idpeopleeditor).HasColumnName("idpeopleeditor");

            //    entity.Property(e => e.Idpeopleinitiator).HasColumnName("idpeopleinitiator");

            //    entity.Property(e => e.Kladrnew)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrnew");

            //    entity.Property(e => e.Kladrold)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrold");

            //    entity.Property(e => e.Logistdatenew)
            //        .HasColumnType("datetime")
            //        .HasColumnName("logistdatenew");

            //    entity.Property(e => e.Logistdateold)
            //        .HasColumnType("datetime")
            //        .HasColumnName("logistdateold");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Pricedeliverynew)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("pricedeliverynew");

            //    entity.Property(e => e.Pricedeliveryold)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("pricedeliveryold");

            //    entity.HasOne(d => d.IddestanationnewNavigation)
            //        .WithMany(p => p.OrderchangeIddestanationnewNavigations)
            //        .HasForeignKey(d => d.Iddestanationnew)
            //        .HasConstraintName("FK_orderchange_destanationnew");

            //    entity.HasOne(d => d.IddestanationoldNavigation)
            //        .WithMany(p => p.OrderchangeIddestanationoldNavigations)
            //        .HasForeignKey(d => d.Iddestanationold)
            //        .HasConstraintName("FK_orderchange_destanationold");

            //    entity.HasOne(d => d.IdpeopleeditorNavigation)
            //        .WithMany(p => p.OrderchangeIdpeopleeditorNavigations)
            //        .HasForeignKey(d => d.Idpeopleeditor)
            //        .HasConstraintName("FK_orderchange_peopleeditor");

            //    entity.HasOne(d => d.IdpeopleinitiatorNavigation)
            //        .WithMany(p => p.OrderchangeIdpeopleinitiatorNavigations)
            //        .HasForeignKey(d => d.Idpeopleinitiator)
            //        .HasConstraintName("FK_orderchange_peopleinitiator");
            //});

            //modelBuilder.Entity<Orderchangeapproved>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderchangeapproved)
            //        .HasName("PK_OrderChangeApproved");

            //    entity.ToTable("orderchangeapproved");

            //    entity.Property(e => e.Idorderchangeapproved)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderchangeapproved");

            //    entity.Property(e => e.Approved).HasColumnName("approved");

            //    entity.Property(e => e.Idchange).HasColumnName("idchange");

            //    entity.Property(e => e.Idorderchange).HasColumnName("idorderchange");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Orderdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderdiraction)
            //        .HasName("pk_orderdiraction");

            //    entity.ToTable("orderdiraction");

            //    entity.HasIndex(e => new { e.Idorder, e.Iddiraction, e.Dtcreate }, "idx_lastval");

            //    entity.HasIndex(e => e.Iddiraction, "idx_orderdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idorder, "idx_orderdiraction_idorder");

            //    entity.HasIndex(e => new { e.Idorder, e.Iddiraction }, "idx_tr_idorder_iddiraction");

            //    entity.HasIndex(e => new { e.Iddiraction, e.Plandate }, "idx_tr_orderdiraction_iddiraction");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum, e.Iddiraction }, "idx_tr_orderdiraction_idorderitem");

            //    entity.Property(e => e.Idorderdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.Property(e => e.Poolnum).HasColumnName("poolnum");

            //    entity.Property(e => e.Poolnumcustom).HasColumnName("poolnumcustom");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.Property(e => e.Sortnum).HasColumnName("sortnum");

            //    entity.Property(e => e.Workshop).HasColumnName("workshop");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Orderdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderdiraction_diraction");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderdiractions)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderdiraction_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Orderdiractions)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderdiraction_people");
            //});

            //modelBuilder.Entity<Orderdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderdiractionpeople)
            //        .HasName("PK_diractionpeople");

            //    entity.ToTable("orderdiractionpeople");

            //    entity.HasIndex(e => e.Idorderdiraction, "idx_orderdiractionpeople_idorderdiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_orderdiractionpeople_idpeople");

            //    entity.Property(e => e.Idorderdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderdiraction).HasColumnName("idorderdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.HasOne(d => d.IdorderdiractionNavigation)
            //        .WithMany(p => p.Orderdiractionpeople)
            //        .HasForeignKey(d => d.Idorderdiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderdiractionpeople_orderdiraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Orderdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_orderdiractionpeople_people");
            //});

            //modelBuilder.Entity<Orderdiscard>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderdiscard);

            //    entity.ToTable("orderdiscard");

            //    entity.HasIndex(e => e.Iddiscard, "idx_orderdiscard_iddiscard");

            //    entity.HasIndex(e => e.Idorder, "idx_orderdiscard_idorder");

            //    entity.Property(e => e.Idorderdiscard)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderdiscard");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qu2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.HasOne(d => d.IddiscardNavigation)
            //        .WithMany(p => p.Orderdiscards)
            //        .HasForeignKey(d => d.Iddiscard)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderdiscard_discard");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderdiscards)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderdiscard_orders");
            //});

            //modelBuilder.Entity<Ordererror>(entity =>
            //{
            //    entity.HasKey(e => e.Idordererror);

            //    entity.ToTable("ordererror");

            //    entity.HasIndex(e => e.Iderror, "idx_ordererror_iderror");

            //    entity.HasIndex(e => e.Idorder, "idx_ordererror_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_ordererror_idorderitem");

            //    entity.Property(e => e.Idordererror)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordererror");

            //    entity.Property(e => e.Addinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart")
            //        .HasComment("Часть модели");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Ordererrors)
            //        .HasForeignKey(d => d.Iderror)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordererror_error");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Ordererrors)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_ordererror_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Ordererrors)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordererror_orderitem");
            //});

            //modelBuilder.Entity<Orderevent>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderevent);

            //    entity.ToTable("orderevent");

            //    entity.HasIndex(e => e.Guid, "UQ__orderevent__05EF8605")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idordereventgroup, "idx_orderevent_idordereventgroup");

            //    entity.Property(e => e.Idorderevent)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderevent");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idordereventgroup).HasColumnName("idordereventgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.HasOne(d => d.IdordereventgroupNavigation)
            //        .WithMany(p => p.Orderevents)
            //        .HasForeignKey(d => d.Idordereventgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderevent_ordereventgroup");
            //});

            //modelBuilder.Entity<Ordereventgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idordereventgroup);

            //    entity.ToTable("ordereventgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__ordereventgroup__48E677C5")
            //        .IsUnique();

            //    entity.Property(e => e.Idordereventgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordereventgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Orderfile>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderfile);

            //    entity.ToTable("orderfile");

            //    entity.HasIndex(e => e.Idorder, "idx_orderfile_idorder");

            //    entity.Property(e => e.Idorderfile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtfile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfile");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderfiles)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderfile_orders");
            //});

            //modelBuilder.Entity<Ordergood>(entity =>
            //{
            //    entity.HasKey(e => e.Idordergood);

            //    entity.ToTable("ordergood");

            //    entity.HasIndex(e => e.Idgood, "idx_ordergood_idgood")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idorder, "idx_ordergood_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_ordergood_idorderitem")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Parentid, "idx_ordergood_parentid")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Width, "idx_ordergood_width")
            //        .HasFillFactor(80);

            //    entity.Property(e => e.Idordergood)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordergood");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact)
            //        .HasColumnName("quinmanufact")
            //        .HasComment("Количество в производственном задании");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Ordergoods)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordergood_good");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Ordergoods)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_ordergood_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Ordergoods)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordergood_orderitem");
            //});

            //modelBuilder.Entity<Ordergoodservice>(entity =>
            //{
            //    entity.HasKey(e => e.Idordergoodservice);

            //    entity.ToTable("ordergoodservice");

            //    entity.HasIndex(e => e.Idgoodservice, "idx_ordergoodservice_idgoodservice");

            //    entity.HasIndex(e => e.Idorder, "idx_ordergoodservice_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_ordergoodservice_idorderitem");

            //    entity.HasIndex(e => e.Idvalut, "idx_ordergoodservice_idvalut");

            //    entity.Property(e => e.Idordergoodservice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordergoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Date1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date1")
            //        .HasComment("Дата 1(смысл на усмотрение компании)");

            //    entity.Property(e => e.Date2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date2")
            //        .HasComment("Дата 2(смысл на усмотрение компании)");

            //    entity.Property(e => e.Date3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date3")
            //        .HasComment("Дата 3(смысл на усмотрение компании)");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdgoodserviceNavigation)
            //        .WithMany(p => p.Ordergoodservices)
            //        .HasForeignKey(d => d.Idgoodservice)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordergoodservice_goodservice");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Ordergoodservices)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordergoodservice_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Ordergoodservices)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_ordergoodservice_orderitem");
            //});

            //modelBuilder.Entity<Orderitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem)
            //        .HasName("pk_orderitem");

            //    entity.ToTable("orderitem");

            //    entity.HasIndex(e => e.Addint, "idx_orderitem_addint");

            //    entity.HasIndex(e => e.Idcolorin, "idx_orderitem_idcolorin");

            //    entity.HasIndex(e => e.Idcolorout, "idx_orderitem_idcolorout");

            //    entity.HasIndex(e => e.Idgood, "idx_orderitem_idgood");

            //    entity.HasIndex(e => e.Idmodel, "idx_orderitem_idmodel");

            //    entity.HasIndex(e => e.Idorder, "idx_orderitem_idorder");

            //    entity.HasIndex(e => e.Idpower, "idx_orderitem_idpower");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_orderitem_idproductiontype");

            //    entity.HasIndex(e => e.Idversion, "idx_orderitem_idversion");

            //    entity.HasIndex(e => new { e.Parentid, e.Idconstructiontype }, "idx_orderitem_parentid");

            //    entity.HasIndex(e => e.Width, "idx_orderitem_width");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addnum6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum6");

            //    entity.Property(e => e.Addnum7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum7");

            //    entity.Property(e => e.Addnum8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum8");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrnum).HasColumnName("constrnum");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Hide).HasColumnName("hide");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfurnsys).HasColumnName("idfurnsys");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitemold).HasColumnName("idorderitemold");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isaddgood).HasColumnName("isaddgood");

            //    entity.Property(e => e.Isglass).HasColumnName("isglass");

            //    entity.Property(e => e.Ismoskit).HasColumnName("ismoskit");

            //    entity.Property(e => e.Ispf).HasColumnName("ispf");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Isstandart).HasColumnName("isstandart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact).HasColumnName("quinmanufact");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ)
            //        .HasColumnName("typ")
            //        .HasComment("Тип записи. 0-Доп.материал, 1-2D модель, 2-3D модель, 3-Продукция");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.Property(e => e.Winue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue2");

            //    entity.Property(e => e.Winue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue3");

            //    entity.HasOne(d => d.IdcolorinNavigation)
            //        .WithMany(p => p.OrderitemIdcolorinNavigations)
            //        .HasForeignKey(d => d.Idcolorin)
            //        .HasConstraintName("FK_orderitem_color");

            //    entity.HasOne(d => d.IdcoloroutNavigation)
            //        .WithMany(p => p.OrderitemIdcoloroutNavigations)
            //        .HasForeignKey(d => d.Idcolorout)
            //        .HasConstraintName("FK_orderitem_color1");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Orderitems)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderitem_good");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderitems)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_orderitem_orders");

            //    entity.HasOne(d => d.IdpowerNavigation)
            //        .WithMany(p => p.Orderitems)
            //        .HasForeignKey(d => d.Idpower)
            //        .HasConstraintName("FK_orderitem_power");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Orderitems)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderitem_produtiontype");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Orderitems)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_orderitem_versions");
            //});

            //modelBuilder.Entity<Orderpricechange>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderpricechange);

            //    entity.ToTable("orderpricechange");

            //    entity.HasIndex(e => e.Idorder, "idx_orderpricechange_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_orderpricechange_idorderitem");

            //    entity.HasIndex(e => e.Idpricechange, "idx_orderpricechange_idpricechange");

            //    entity.HasIndex(e => e.Idvalut, "idx_orderpricechange_idvalut");

            //    entity.Property(e => e.Idorderpricechange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderpricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Orderpricechanges)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderpricechange_orders");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Orderpricechanges)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_orderpricechange_pricechange");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Orderpricechanges)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orderpricechange_valut");
            //});

            //modelBuilder.Entity<OrdersChangeaddress>(entity =>
            //{
            //    entity.HasKey(e => e.Idorder)
            //        .HasName("pk_orders_changeaddress");

            //    entity.ToTable("orders_changeaddress");

            //    entity.Property(e => e.Idorder)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorder");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.ChangeAddressDate).HasColumnType("datetime");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(1000)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.OldAddress)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("old_address");

            //    entity.Property(e => e.OldAddstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("old_addstr1");

            //    entity.Property(e => e.OldIdaddress).HasColumnName("old_idaddress");

            //    entity.Property(e => e.OldIddestanation).HasColumnName("old_iddestanation");
            //});

            //modelBuilder.Entity<Ordersetting>(entity =>
            //{
            //    entity.HasKey(e => e.Idordersetting);

            //    entity.ToTable("ordersetting");

            //    entity.HasIndex(e => e.Idmodel, "idx_ordersetting_idmodel");

            //    entity.HasIndex(e => e.Idorder, "idx_ordersetting_idorder");

            //    entity.HasIndex(e => e.Idsetting, "idx_ordersetting_idsetting");

            //    entity.Property(e => e.Idordersetting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordersetting");

            //    entity.Property(e => e.Blbvalue).HasColumnName("blbvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Ordersettings)
            //        .HasForeignKey(d => d.Idmodel)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordersetting_model");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Ordersettings)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_ordersetting_orders");

            //    entity.HasOne(d => d.IdsettingNavigation)
            //        .WithMany(p => p.Ordersettings)
            //        .HasForeignKey(d => d.Idsetting)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordersetting_setting");
            //});

            //modelBuilder.Entity<Ordersfilter>(entity =>
            //{
            //    entity.HasKey(e => e.Idordersfilter)
            //        .HasName("PK_ordersfilter_column1");

            //    entity.ToTable("ordersfilter");

            //    entity.HasIndex(e => e.Idpeople, "idx_ordersfilter_idpeople");

            //    entity.Property(e => e.Idordersfilter).HasColumnName("idordersfilter");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Num).HasColumnName("num");
            //});

            //modelBuilder.Entity<Ordersgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idordersgroup)
            //        .HasName("ordersgroup_pkey");

            //    entity.ToTable("ordersgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_ordersgroup_parentid");

            //    entity.Property(e => e.Idordersgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordersgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Ordersign>(entity =>
            //{
            //    entity.HasKey(e => e.Idordersign)
            //        .HasName("pk_ordersign");

            //    entity.ToTable("ordersign");

            //    entity.HasIndex(e => new { e.Idorderitem, e.Idsign, e.Deleted }, "NonClusteredIndex-20181022-181248");

            //    entity.HasIndex(e => e.Idorder, "idx_ordersign_idorder");

            //    entity.HasIndex(e => new { e.Idorder, e.Idsign, e.Deleted, e.Idsignvalue }, "idx_ordersign_idorder_idsign_deleted_idsignvalue");

            //    entity.HasIndex(e => e.Idsign, "idx_ordersign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_ordersign_idsignvalue");

            //    entity.HasIndex(e => new { e.Intvalue, e.Idsign }, "idx_ordersign_intvalue_ar");

            //    entity.Property(e => e.Idordersign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idordersign");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Ordersigns)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordersign_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Ordersigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_ordersign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Ordersigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .HasConstraintName("ordersign_fk1");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Ordersigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("fk_ordersign_3");
            //});

            //modelBuilder.Entity<OstStore>(entity =>
            //{
            //    entity.HasKey(e => e.Idso);

            //    entity.ToTable("ost_store");

            //    entity.Property(e => e.Idso)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idso");

            //    entity.Property(e => e.Flownum).HasColumnName("flownum");

            //    entity.Property(e => e.Flownums)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("flownums");

            //    entity.Property(e => e.Iddefaultstore).HasColumnName("iddefaultstore");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idgoodtype2).HasColumnName("idgoodtype2");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Intvalue).HasColumnName("intvalue");
            //});

            //modelBuilder.Entity<OtvetkaModel>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem)
            //        .HasName("PK_OtvetkaModel_idorderitem");

            //    entity.ToTable("OtvetkaModel");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Image).HasColumnName("image");

            //    entity.Property(e => e.Model)
            //        .IsUnicode(false)
            //        .HasColumnName("model");
            //});

            //modelBuilder.Entity<Pallet>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("pallets");

            //    entity.Property(e => e.Capacity).HasColumnName("capacity");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.HeightIzd).HasColumnName("heightIzd");

            //    entity.Property(e => e.Idpallet).HasColumnName("idpallet");

            //    entity.Property(e => e.IsDop).HasColumnName("isDop");

            //    entity.Property(e => e.Lenght).HasColumnName("lenght");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OiWeight).HasColumnName("oiWeight");

            //    entity.Property(e => e.ShortName)
            //        .HasMaxLength(256)
            //        .HasColumnName("shortName");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(18, 2)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Payment>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("payment");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpayment).HasColumnName("idpayment");

            //    entity.Property(e => e.Idpaymentdocgroup).HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<Paymentdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idpaymentdoc)
            //        .HasName("payment_pkey");

            //    entity.ToTable("paymentdoc");

            //    entity.HasIndex(e => e.Guid, "UQ__paymentdoc__4ACEC037")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcustomer, "idx_payment_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_payment_iddocoper");

            //    entity.HasIndex(e => e.Idorder, "idx_payment_idorder");

            //    entity.HasIndex(e => e.Idpaymentgroup, "idx_payment_idpaymentgroup");

            //    entity.HasIndex(e => e.Idpeople, "idx_payment_idpeople");

            //    entity.HasIndex(e => e.Idcashbox, "idx_paymentdoc_idcashbox");

            //    entity.HasIndex(e => e.Iddocstate, "idx_paymentdoc_iddocstate");

            //    entity.HasIndex(e => e.Idpaymentdocgroup, "idx_paymentdoc_idpaymentdocgroup");

            //    entity.HasIndex(e => e.Idseller, "idx_paymentdoc_idseller");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_paymentdoc_idservicedoc");

            //    entity.HasIndex(e => e.Idsupplydoc, "idx_paymentdoc_idsupplydoc");

            //    entity.HasIndex(e => e.Idvalut, "idx_paymentdoc_idvalut");

            //    entity.HasIndex(e => e.Parentid, "idx_paymentdoc_parentid");

            //    entity.Property(e => e.Idpaymentdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpaymentdocgroup).HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdcashboxNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idcashbox)
            //        .HasConstraintName("FK_paymentdoc_cashbox");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_payment_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_payment_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_paymentdoc_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_payment_orders");

            //    entity.HasOne(d => d.IdpaymentdocgroupNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idpaymentdocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_payment_paymentdocgroup");

            //    entity.HasOne(d => d.IdpaymentgroupNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idpaymentgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_payment_paymentgroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_paymentdoc_people");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idseller)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_payment_seller");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .HasConstraintName("FK_paymentdoc_servicedoc");

            //    entity.HasOne(d => d.IdsupplydocNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idsupplydoc)
            //        .HasConstraintName("FK_paymentdoc_supplydoc");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Paymentdocs)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_payment_valut");
            //});

            //modelBuilder.Entity<Paymentdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpaymentdocgroup);

            //    entity.ToTable("paymentdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_paymentdocgroup_parentid");

            //    entity.Property(e => e.Idpaymentdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Paymentdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idpaymentdocsign);

            //    entity.ToTable("paymentdocsign");

            //    entity.HasIndex(e => e.Idpaymentdoc, "idx_paymentdocsign_idpaymentdoc");

            //    entity.HasIndex(e => e.Idpeople, "idx_paymentdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_paymentdocsign_idsign");

            //    entity.Property(e => e.Idpaymentdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpaymentdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpaymentdoc).HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpaymentdocNavigation)
            //        .WithMany(p => p.Paymentdocsigns)
            //        .HasForeignKey(d => d.Idpaymentdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_paymentdocsign_paymentdoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Paymentdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_paymentdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Paymentdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_paymentdocsign_sign");
            //});

            //modelBuilder.Entity<Paymentgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpaymentgroup)
            //        .HasName("paymentgroup_pkey");

            //    entity.ToTable("paymentgroup");

            //    entity.Property(e => e.Idpaymentgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<PeopleBackup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeople)
            //        .HasName("pk_people_copy");

            //    entity.ToTable("people_backup");

            //    entity.HasIndex(e => e.Guid, "UQ__people_b__497F6CB5D9FBE19A")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idpeoplepost, "idx_people_idpeoplepost");

            //    entity.HasIndex(e => e.Middlename, "idx_people_middlename");

            //    entity.Property(e => e.Idpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeople");

            //    entity.Property(e => e.AdAuthorization).HasColumnName("ad_authorization");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Alienorder).HasColumnName("alienorder");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddepartment)
            //        .HasColumnName("iddepartment")
            //        .HasComment("Ссылка на отдел");

            //    entity.Property(e => e.Idpeoplepost).HasColumnName("idpeoplepost");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Isadmin).HasColumnName("isadmin");

            //    entity.Property(e => e.Iscrypt).HasColumnName("iscrypt");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Oneconnect).HasColumnName("oneconnect");

            //    entity.Property(e => e.Passport)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("passport");

            //    entity.Property(e => e.Peoplegroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Tabno)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("tabno");

            //    entity.Property(e => e.Userlogin)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userlogin");

            //    entity.Property(e => e.Userpassword)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userpassword");

            //    entity.HasOne(d => d.IdpeoplepostNavigation)
            //        .WithMany(p => p.PeopleBackups)
            //        .HasForeignKey(d => d.Idpeoplepost)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_people_peoplepost_copy");
            //});

            //modelBuilder.Entity<Peoplegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeoplegroup);

            //    entity.ToTable("peoplegroup");

            //    entity.HasIndex(e => e.Parentid, "idx_peoplegroup_parentid");

            //    entity.Property(e => e.Idpeoplegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grants).HasColumnName("grants");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Peoplegrouplist>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeoplegrouplist);

            //    entity.ToTable("peoplegrouplist");

            //    entity.HasIndex(e => e.Idpeople, "idx_peoplegrouplist_idpeople");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_peoplegrouplist_idpeoplegroup");

            //    entity.Property(e => e.Idpeoplegrouplist)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeoplegrouplist");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Peoplegrouplists)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_peoplegrouplist_people");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Peoplegrouplists)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_peoplegrouplist_peoplegroup");
            //});

            //modelBuilder.Entity<Peoplepost>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeoplepost);

            //    entity.ToTable("peoplepost");

            //    entity.HasIndex(e => e.Idpeoplepostgroup, "idx_peoplepost_idpeoplepostgroup");

            //    entity.Property(e => e.Idpeoplepost)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeoplepost");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeoplepostgroup)
            //        .HasColumnName("idpeoplepostgroup")
            //        .HasComment("Ссылка на группу должностей");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdpeoplepostgroupNavigation)
            //        .WithMany(p => p.Peopleposts)
            //        .HasForeignKey(d => d.Idpeoplepostgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_peoplepost_peoplepostgroup");
            //});

            //modelBuilder.Entity<Peoplepostgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeoplepostgroup);

            //    entity.ToTable("peoplepostgroup");

            //    entity.HasComment("Группы должностей");

            //    entity.HasIndex(e => e.Parentid, "idx_peoplepostgroup_parentid");

            //    entity.Property(e => e.Idpeoplepostgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeoplepostgroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удалённости");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование группы");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на верхний уровень");
            //});

            //modelBuilder.Entity<Peoplesettinggrouplist>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeoplesettinggrouplist)
            //        .HasName("PK_peoplesettinggrouplist_1");

            //    entity.ToTable("peoplesettinggrouplist");

            //    entity.Property(e => e.Idpeoplesettinggrouplist)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeoplesettinggrouplist");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Idsettinggroup).HasColumnName("idsettinggroup");
            //});

            //modelBuilder.Entity<People>(entity =>
            //{
            //    entity.HasKey(e => e.Idpeople)
            //        .HasName("pk_people");

            //    entity.ToTable("people");

            //    entity.HasIndex(e => e.Guid, "UQ__people__37BBEBC3")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idpeoplepost, "idx_people_idpeoplepost");

            //    entity.HasIndex(e => e.Middlename, "idx_people_middlename");

            //    entity.Property(e => e.Idpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpeople");

            //    entity.Property(e => e.AdAuthorization).HasColumnName("ad_authorization");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Alienorder).HasColumnName("alienorder");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CurrentIdorder).HasColumnName("current_idorder");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddepartment)
            //        .HasColumnName("iddepartment")
            //        .HasComment("Ссылка на отдел");

            //    entity.Property(e => e.Idpeoplepost).HasColumnName("idpeoplepost");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Isadmin).HasColumnName("isadmin");

            //    entity.Property(e => e.Iscrypt).HasColumnName("iscrypt");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Oneconnect).HasColumnName("oneconnect");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Passport)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("passport");

            //    entity.Property(e => e.Peoplegroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Tabno)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("tabno");

            //    entity.Property(e => e.Userlogin)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userlogin");

            //    entity.Property(e => e.Userpassword)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userpassword");

            //    entity.HasOne(d => d.IdpeoplepostNavigation)
            //        .WithMany(p => p.People)
            //        .HasForeignKey(d => d.Idpeoplepost)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_people_peoplepost");
            //});

            //modelBuilder.Entity<PfGlass>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfGlass);

            //    entity.ToTable("pf_glass");

            //    entity.HasIndex(e => e.Idcolor1, "idx_pf_glass_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_pf_glass_idcolor2");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_glass_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelparam1, "idx_pf_glass_idmodelparam1");

            //    entity.HasIndex(e => e.Idmodelparam2, "idx_pf_glass_idmodelparam2");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_pf_glass_idproductiontype");

            //    entity.HasIndex(e => e.IdsystemFurniture, "idx_pf_glass_idsystem_furniture");

            //    entity.HasIndex(e => e.IdsystemProfile, "idx_pf_glass_idsystem_profile");

            //    entity.Property(e => e.IdpfGlass)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_glass");

            //    entity.Property(e => e.Constructor).HasColumnName("constructor");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelparam1).HasColumnName("idmodelparam1");

            //    entity.Property(e => e.Idmodelparam2).HasColumnName("idmodelparam2");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.IdsystemFurniture).HasColumnName("idsystem_furniture");

            //    entity.Property(e => e.IdsystemProfile).HasColumnName("idsystem_profile");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.PfGlassIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_pf_glass_color");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.PfGlassIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_pf_glass_color1");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfGlasses)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_glass_constructiontype");

            //    entity.HasOne(d => d.Idmodelparam1Navigation)
            //        .WithMany(p => p.PfGlassIdmodelparam1Navigations)
            //        .HasForeignKey(d => d.Idmodelparam1)
            //        .HasConstraintName("FK_pf_glass_modelparam");

            //    entity.HasOne(d => d.Idmodelparam2Navigation)
            //        .WithMany(p => p.PfGlassIdmodelparam2Navigations)
            //        .HasForeignKey(d => d.Idmodelparam2)
            //        .HasConstraintName("FK_pf_glass_modelparam1");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.PfGlasses)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_pf_glass_productiontype");

            //    entity.HasOne(d => d.IdsystemFurnitureNavigation)
            //        .WithMany(p => p.PfGlassIdsystemFurnitureNavigations)
            //        .HasForeignKey(d => d.IdsystemFurniture)
            //        .HasConstraintName("FK_pf_glass_system_furniture");

            //    entity.HasOne(d => d.IdsystemProfileNavigation)
            //        .WithMany(p => p.PfGlassIdsystemProfileNavigations)
            //        .HasForeignKey(d => d.IdsystemProfile)
            //        .HasConstraintName("FK_pf_glass_system_profile");
            //});

            //modelBuilder.Entity<PfGlassCtSource>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfGlassCtSource);

            //    entity.ToTable("pf_glass_ct_source");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_glass_ct_source_idconstructiontype");

            //    entity.HasIndex(e => e.IdpfGlass, "idx_pf_glass_ct_source_idpf_glass");

            //    entity.Property(e => e.IdpfGlassCtSource)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_glass_ct_source");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.IdpfGlass).HasColumnName("idpf_glass");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfGlassCtSources)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_glass_ct_source_constructiontype");

            //    entity.HasOne(d => d.IdpfGlassNavigation)
            //        .WithMany(p => p.PfGlassCtSources)
            //        .HasForeignKey(d => d.IdpfGlass)
            //        .HasConstraintName("FK_pf_glass_ct_source_pf_glass");
            //});

            //modelBuilder.Entity<PfGlassSourceGe>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfGlassSourceGe);

            //    entity.ToTable("pf_glass_source_ge");

            //    entity.HasIndex(e => e.Idglasselement, "idx_pf_glass_source_ge_idglasselement");

            //    entity.HasIndex(e => e.IdpfGlass, "idx_pf_glass_source_ge_idpf_glass");

            //    entity.Property(e => e.IdpfGlassSourceGe)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_glass_source_ge");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idglasselement).HasColumnName("idglasselement");

            //    entity.Property(e => e.IdpfGlass).HasColumnName("idpf_glass");

            //    entity.HasOne(d => d.IdglasselementNavigation)
            //        .WithMany(p => p.PfGlassSourceGes)
            //        .HasForeignKey(d => d.Idglasselement)
            //        .HasConstraintName("FK_pf_glass_source_ge_glasselement");

            //    entity.HasOne(d => d.IdpfGlassNavigation)
            //        .WithMany(p => p.PfGlassSourceGes)
            //        .HasForeignKey(d => d.IdpfGlass)
            //        .HasConstraintName("FK_pf_glass_source_ge_pf_glass");
            //});

            //modelBuilder.Entity<PfGlassSourceGlass>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfGlassSourceGlass);

            //    entity.ToTable("pf_glass_source_glass");

            //    entity.HasIndex(e => e.Idglass, "idx_pf_glass_source_glass_idglass");

            //    entity.HasIndex(e => e.IdpfGlass, "idx_pf_glass_source_glass_idpf_glass");

            //    entity.Property(e => e.IdpfGlassSourceGlass)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_glass_source_glass");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.IdpfGlass).HasColumnName("idpf_glass");

            //    entity.HasOne(d => d.IdglassNavigation)
            //        .WithMany(p => p.PfGlassSourceGlasses)
            //        .HasForeignKey(d => d.Idglass)
            //        .HasConstraintName("FK_pf_glass_source_glass_glass");

            //    entity.HasOne(d => d.IdpfGlassNavigation)
            //        .WithMany(p => p.PfGlassSourceGlasses)
            //        .HasForeignKey(d => d.IdpfGlass)
            //        .HasConstraintName("FK_pf_glass_source_glass_pf_glass");
            //});

            //modelBuilder.Entity<PfM>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfMs);

            //    entity.ToTable("pf_ms");

            //    entity.HasIndex(e => e.Idcolor1, "idx_pf_ms_idcolor1");

            //    entity.HasIndex(e => e.Idcolor2, "idx_pf_ms_idcolor2");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_ms_idconstructiontype");

            //    entity.HasIndex(e => e.Idglass, "idx_pf_ms_idglass");

            //    entity.HasIndex(e => e.Idmodelparam1, "idx_pf_ms_idmodelparam1");

            //    entity.HasIndex(e => e.Idmodelparam2, "idx_pf_ms_idmodelparam2");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_ms_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_pf_ms_idproductiontype");

            //    entity.HasIndex(e => e.IdsystemFurniture, "idx_pf_ms_idsystem_furniture");

            //    entity.HasIndex(e => e.IdsystemProfile, "idx_pf_ms_idsystem_profile");

            //    entity.Property(e => e.IdpfMs)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_ms");

            //    entity.Property(e => e.AddH)
            //        .HasColumnType("numeric(5, 1)")
            //        .HasColumnName("add_h");

            //    entity.Property(e => e.AddW)
            //        .HasColumnType("numeric(5, 1)")
            //        .HasColumnName("add_w");

            //    entity.Property(e => e.AlignStvImp).HasColumnName("align_stv_imp");

            //    entity.Property(e => e.Carrier).HasColumnName("carrier");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.Idmodelparam1).HasColumnName("idmodelparam1");

            //    entity.Property(e => e.Idmodelparam2).HasColumnName("idmodelparam2");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.IdsystemFurniture).HasColumnName("idsystem_furniture");

            //    entity.Property(e => e.IdsystemProfile).HasColumnName("idsystem_profile");

            //    entity.Property(e => e.MaxH).HasColumnName("max_h");

            //    entity.Property(e => e.MaxW).HasColumnName("max_w");

            //    entity.Property(e => e.MinH).HasColumnName("min_h");

            //    entity.Property(e => e.MinW).HasColumnName("min_w");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.QuH).HasColumnName("qu_h");

            //    entity.Property(e => e.QuW).HasColumnName("qu_w");

            //    entity.Property(e => e.SetOpenType).HasColumnName("set_open_type");

            //    entity.Property(e => e.StepH).HasColumnName("step_h");

            //    entity.Property(e => e.StepW).HasColumnName("step_w");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.PfMIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_pf_ms_color");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.PfMIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_pf_ms_color1");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfMs)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_ms_constructiontype");

            //    entity.HasOne(d => d.IdglassNavigation)
            //        .WithMany(p => p.PfMs)
            //        .HasForeignKey(d => d.Idglass)
            //        .HasConstraintName("FK_pf_ms_glass");

            //    entity.HasOne(d => d.Idmodelparam1Navigation)
            //        .WithMany(p => p.PfMIdmodelparam1Navigations)
            //        .HasForeignKey(d => d.Idmodelparam1)
            //        .HasConstraintName("FK_pf_ms_idmodelparam1");

            //    entity.HasOne(d => d.Idmodelparam2Navigation)
            //        .WithMany(p => p.PfMIdmodelparam2Navigations)
            //        .HasForeignKey(d => d.Idmodelparam2)
            //        .HasConstraintName("FK_pf_ms_idmodelparam2");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfMs)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_ms_modelparamvalue");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.PfMs)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_pf_ms_productiontype");

            //    entity.HasOne(d => d.IdsystemFurnitureNavigation)
            //        .WithMany(p => p.PfMIdsystemFurnitureNavigations)
            //        .HasForeignKey(d => d.IdsystemFurniture)
            //        .HasConstraintName("FK_pf_ms_system");

            //    entity.HasOne(d => d.IdsystemProfileNavigation)
            //        .WithMany(p => p.PfMIdsystemProfileNavigations)
            //        .HasForeignKey(d => d.IdsystemProfile)
            //        .HasConstraintName("FK_pf_ms_system1");
            //});

            //modelBuilder.Entity<PfMsCtSource>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfMsCtSource);

            //    entity.ToTable("pf_ms_ct_source");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_ms_ct_source_idconstructiontype");

            //    entity.HasIndex(e => e.IdpfMs, "idx_pf_ms_ct_source_idpf_ms");

            //    entity.Property(e => e.IdpfMsCtSource)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_ms_ct_source");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.IdpfMs).HasColumnName("idpf_ms");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfMsCtSources)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_ms_ct_source_constructiontype");

            //    entity.HasOne(d => d.IdpfMsNavigation)
            //        .WithMany(p => p.PfMsCtSources)
            //        .HasForeignKey(d => d.IdpfMs)
            //        .HasConstraintName("FK_pf_ms_ct_source_pf_ms");
            //});

            //modelBuilder.Entity<PfMsMpFiltr>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfMsMpFiltr)
            //        .HasName("PK_pf_ms_mp");

            //    entity.ToTable("pf_ms_mp_filtr");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_ms_mp_filtr_idmodelparamvalue");

            //    entity.HasIndex(e => e.IdpfMs, "idx_pf_ms_mp_filtr_idpf_ms");

            //    entity.Property(e => e.IdpfMsMpFiltr)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_ms_mp_filtr");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.IdpfMs).HasColumnName("idpf_ms");

            //    entity.Property(e => e.Isvalue1)
            //        .IsRequired()
            //        .HasColumnName("isvalue1")
            //        .HasDefaultValueSql("((1))");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfMsMpFiltrs)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_ms_mp_modelparamvalue");

            //    entity.HasOne(d => d.IdpfMsNavigation)
            //        .WithMany(p => p.PfMsMpFiltrs)
            //        .HasForeignKey(d => d.IdpfMs)
            //        .HasConstraintName("FK_pf_ms_mp_pf_ms");
            //});

            //modelBuilder.Entity<PfMsMpSet>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfMsMpSet);

            //    entity.ToTable("pf_ms_mp_set");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_ms_mp_set_idmodelparamvalue");

            //    entity.HasIndex(e => e.IdpfMs, "idx_pf_ms_mp_set_idpf_ms");

            //    entity.Property(e => e.IdpfMsMpSet)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_ms_mp_set");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.IdpfMs).HasColumnName("idpf_ms");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfMsMpSets)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_ms_mp_set_modelparamvalue");

            //    entity.HasOne(d => d.IdpfMsNavigation)
            //        .WithMany(p => p.PfMsMpSets)
            //        .HasForeignKey(d => d.IdpfMs)
            //        .HasConstraintName("FK_pf_ms_mp_set_pf_ms");
            //});

            //modelBuilder.Entity<PfPt>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfPt);

            //    entity.ToTable("pf_pt");

            //    entity.HasIndex(e => e.Idcoloraccordance1, "idx_pf_pt_idcoloraccordance1");

            //    entity.HasIndex(e => e.Idcoloraccordance2, "idx_pf_pt_idcoloraccordance2");

            //    entity.HasIndex(e => e.Idmodelparam1, "idx_pf_pt_idmodelparam1");

            //    entity.HasIndex(e => e.Idmodelparam2, "idx_pf_pt_idmodelparam2");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_pf_pt_idproductiontype");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_pf_pt_idsystemdetail");

            //    entity.Property(e => e.IdpfPt)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_pt");

            //    entity.Property(e => e.AddH)
            //        .HasColumnType("numeric(5, 1)")
            //        .HasColumnName("add_h");

            //    entity.Property(e => e.AddT)
            //        .HasColumnType("numeric(5, 1)")
            //        .HasColumnName("add_t");

            //    entity.Property(e => e.AddW)
            //        .HasColumnType("numeric(5, 1)")
            //        .HasColumnName("add_w");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Hide)
            //        .IsRequired()
            //        .HasColumnName("hide")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.Idcoloraccordance1).HasColumnName("idcoloraccordance1");

            //    entity.Property(e => e.Idcoloraccordance2).HasColumnName("idcoloraccordance2");

            //    entity.Property(e => e.Idmodelparam1).HasColumnName("idmodelparam1");

            //    entity.Property(e => e.Idmodelparam2).HasColumnName("idmodelparam2");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Rulecolor1).HasColumnName("rulecolor1");

            //    entity.Property(e => e.Rulecolor2).HasColumnName("rulecolor2");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.Idcoloraccordance1Navigation)
            //        .WithMany(p => p.PfPtIdcoloraccordance1Navigations)
            //        .HasForeignKey(d => d.Idcoloraccordance1)
            //        .HasConstraintName("FK_pf_pt_coloraccordance1");

            //    entity.HasOne(d => d.Idcoloraccordance2Navigation)
            //        .WithMany(p => p.PfPtIdcoloraccordance2Navigations)
            //        .HasForeignKey(d => d.Idcoloraccordance2)
            //        .HasConstraintName("FK_pf_pt_coloraccordance2");

            //    entity.HasOne(d => d.Idmodelparam1Navigation)
            //        .WithMany(p => p.PfPtIdmodelparam1Navigations)
            //        .HasForeignKey(d => d.Idmodelparam1)
            //        .HasConstraintName("FK_pf_pt_idmodelparam1");

            //    entity.HasOne(d => d.Idmodelparam2Navigation)
            //        .WithMany(p => p.PfPtIdmodelparam2Navigations)
            //        .HasForeignKey(d => d.Idmodelparam2)
            //        .HasConstraintName("FK_pf_pt_idmodelparam2");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.PfPts)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_pf_pt_productiontype");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.PfPts)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_pf_pt_systemdetail");
            //});

            //modelBuilder.Entity<PfPtCtSource>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfPtCtSource);

            //    entity.ToTable("pf_pt_ct_source");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_pt_ct_source_idconstructiontype");

            //    entity.HasIndex(e => e.IdpfPt, "idx_pf_pt_ct_source_idpf_pt");

            //    entity.Property(e => e.IdpfPtCtSource)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_pt_ct_source");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.IdpfPt).HasColumnName("idpf_pt");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfPtCtSources)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_pt_ct_source_constructiontype");

            //    entity.HasOne(d => d.IdpfPtNavigation)
            //        .WithMany(p => p.PfPtCtSources)
            //        .HasForeignKey(d => d.IdpfPt)
            //        .HasConstraintName("FK_pf_pt_ct_source_pf_pt");
            //});

            //modelBuilder.Entity<PfPtMpFiltr>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfPtMpFiltr);

            //    entity.ToTable("pf_pt_mp_filtr");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_pt_mp_filtr_idmodelparamvalue");

            //    entity.HasIndex(e => e.IdpfPt, "idx_pf_pt_mp_filtr_idpf_pt");

            //    entity.Property(e => e.IdpfPtMpFiltr)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_pt_mp_filtr");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.IdpfPt).HasColumnName("idpf_pt");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfPtMpFiltrs)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_pt_mp_modelparamvalue");

            //    entity.HasOne(d => d.IdpfPtNavigation)
            //        .WithMany(p => p.PfPtMpFiltrs)
            //        .HasForeignKey(d => d.IdpfPt)
            //        .HasConstraintName("FK_pf_pt_mp_pf_pt");
            //});

            //modelBuilder.Entity<PfPtMpSet>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfPtMpSet);

            //    entity.ToTable("pf_pt_mp_set");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_pt_mp_set_idmodelparamvalue");

            //    entity.HasIndex(e => e.IdpfPt, "idx_pf_pt_mp_set_idpf_pt");

            //    entity.Property(e => e.IdpfPtMpSet)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_pt_mp_set");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.IdpfPt).HasColumnName("idpf_pt");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfPtMpSets)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_pt_mp_set_modelparamvalue");

            //    entity.HasOne(d => d.IdpfPtNavigation)
            //        .WithMany(p => p.PfPtMpSets)
            //        .HasForeignKey(d => d.IdpfPt)
            //        .HasConstraintName("FK_pf_pt_mp_set_pf_pt");
            //});

            //modelBuilder.Entity<PfStv>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfStv);

            //    entity.ToTable("pf_stv");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_stv_idconstructiontype");

            //    entity.HasIndex(e => e.Idglass, "idx_pf_stv_idglass");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_pf_stv_idproductiontype");

            //    entity.Property(e => e.IdpfStv)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_stv");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfStvs)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_stv_constructiontype");

            //    entity.HasOne(d => d.IdglassNavigation)
            //        .WithMany(p => p.PfStvs)
            //        .HasForeignKey(d => d.Idglass)
            //        .HasConstraintName("FK_pf_stv_glass");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.PfStvs)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_pf_stv_productiontype");
            //});

            //modelBuilder.Entity<PfStvCtSource>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfStvCtSource);

            //    entity.ToTable("pf_stv_ct_source");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_pf_stv_ct_source_idconstructiontype");

            //    entity.HasIndex(e => e.IdpfStv, "idx_pf_stv_ct_source_idpf_stv");

            //    entity.Property(e => e.IdpfStvCtSource)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_stv_ct_source");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.IdpfStv).HasColumnName("idpf_stv");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.PfStvCtSources)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_pf_stv_ct_source_constructiontype");

            //    entity.HasOne(d => d.IdpfStvNavigation)
            //        .WithMany(p => p.PfStvCtSources)
            //        .HasForeignKey(d => d.IdpfStv)
            //        .HasConstraintName("FK_pf_stv_ct_source_pf_stv");
            //});

            //modelBuilder.Entity<PfStvMp>(entity =>
            //{
            //    entity.HasKey(e => e.IdpfStvMp);

            //    entity.ToTable("pf_stv_mp");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_pf_stv_mp_idmodelparamvalue");

            //    entity.HasIndex(e => e.IdpfStv, "idx_pf_stv_mp_idpf_stv");

            //    entity.Property(e => e.IdpfStvMp)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpf_stv_mp");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.IdpfStv).HasColumnName("idpf_stv");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.PfStvMps)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_pf_stv_mp_modelparamvalue");

            //    entity.HasOne(d => d.IdpfStvNavigation)
            //        .WithMany(p => p.PfStvMps)
            //        .HasForeignKey(d => d.IdpfStv)
            //        .HasConstraintName("FK_pf_stv_mp_pf_stv");
            //});

            //modelBuilder.Entity<Pg1cViewCustomer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_customer");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Cs)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cs");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kpp).HasColumnName("kpp");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Ogrn)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("ogrn");

            //    entity.Property(e => e.Okato)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("okato");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.Property(e => e.Rs)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rs");

            //    entity.Property(e => e.TypeCustomer)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("type_customer");
            //});

            //modelBuilder.Entity<Pg1cViewDeliv>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_deliv");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.DDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("d_dtdoc");

            //    entity.Property(e => e.DName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("d_name");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Idseller)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idseller");

            //    entity.Property(e => e.Idsklad).HasColumnName("idsklad");

            //    entity.Property(e => e.InPz).HasColumnName("in_pz");

            //    entity.Property(e => e.OrdersNotIn1c).HasColumnName("orders_not_in_1c");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sklad)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .HasColumnName("sklad");
            //});

            //modelBuilder.Entity<Pg1cViewDelivpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_delivpos");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.DName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("d_name");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idnom)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.NameO)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name_o");

            //    entity.Property(e => e.OiNumpos).HasColumnName("oi_numpos");

            //    entity.Property(e => e.OrderitemMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_marking");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.PercSkidka).HasColumnName("perc_skidka");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Pricechange).HasColumnName("pricechange");

            //    entity.Property(e => e.PtName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pt_name");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Skidka).HasColumnName("skidka");

            //    entity.Property(e => e.Sklad)
            //        .HasMaxLength(8)
            //        .IsUnicode(false)
            //        .HasColumnName("sklad");

            //    entity.Property(e => e.Usl).HasColumnName("usl");
            //});

            //modelBuilder.Entity<Pg1cViewGp>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_gp");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cell");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Dtin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtin");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idnom)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idrotoxhouse).HasColumnName("idrotoxhouse");

            //    entity.Property(e => e.Idseller)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idseller");

            //    entity.Property(e => e.Idsklad).HasColumnName("idsklad");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.ODtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("o_dtdoc");

            //    entity.Property(e => e.OIdseller).HasColumnName("o_idseller");

            //    entity.Property(e => e.OSellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("o_seller_name");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_marking");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.PdName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pd_name");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.PtName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pt_name");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Skidka)
            //        .HasColumnType("numeric(16, 4)")
            //        .HasColumnName("skidka");

            //    entity.Property(e => e.Sklad)
            //        .HasMaxLength(8)
            //        .IsUnicode(false)
            //        .HasColumnName("sklad");

            //    entity.Property(e => e.Usl).HasColumnName("usl");
            //});

            //modelBuilder.Entity<Pg1cViewGpHead>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_gp_head");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idseller)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idseller");

            //    entity.Property(e => e.Idsklad).HasColumnName("idsklad");

            //    entity.Property(e => e.NameMf)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name_mf");

            //    entity.Property(e => e.PdName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pd_name");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sklad)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .HasColumnName("sklad");
            //});

            //modelBuilder.Entity<Pg1cViewOrderinfo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_orderinfo");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.DtOtgr)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_otgr");

            //    entity.Property(e => e.DtPrin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_prin");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idseller)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idseller");

            //    entity.Property(e => e.Idsklad).HasColumnName("idsklad");

            //    entity.Property(e => e.InPz).HasColumnName("in_pz");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sklad)
            //        .HasMaxLength(5)
            //        .IsUnicode(false)
            //        .HasColumnName("sklad");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");
            //});

            //modelBuilder.Entity<Pg1cViewOrderpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_orderpos");

            //    entity.Property(e => e.C1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("c1_name");

            //    entity.Property(e => e.C2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("c2_name");

            //    entity.Property(e => e.Hide).HasColumnName("hide");

            //    entity.Property(e => e.Id)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("id");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idnom)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Isprod).HasColumnName("isprod");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NomName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("nom_name");

            //    entity.Property(e => e.OiQu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("oi_qu");

            //    entity.Property(e => e.PercSkidka).HasColumnName("perc_skidka");

            //    entity.Property(e => e.Pid)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("pid");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Skidka).HasColumnName("skidka");

            //    entity.Property(e => e.Usl).HasColumnName("usl");
            //});

            //modelBuilder.Entity<Pg1cViewPay>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_pay");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpaymentdoc).HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.PName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("p_name");

            //    entity.Property(e => e.PaymentgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("paymentgroup_name");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");
            //});

            //modelBuilder.Entity<Pg1cViewStore>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_store");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idorganization)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("idorganization");

            //    entity.Property(e => e.Idotpravitel).HasColumnName("idotpravitel");

            //    entity.Property(e => e.Idpoluchatel).HasColumnName("idpoluchatel");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.InPer).HasColumnName("in_per");

            //    entity.Property(e => e.IsLamin).HasColumnName("is_lamin");

            //    entity.Property(e => e.OrgName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("org_name");

            //    entity.Property(e => e.Otpravitel)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("otpravitel");

            //    entity.Property(e => e.PdName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pd_name");

            //    entity.Property(e => e.Poluchatel)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("poluchatel");

            //    entity.Property(e => e.SdDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("sd_dtdoc");

            //    entity.Property(e => e.SdName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sd_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");
            //});

            //modelBuilder.Entity<Pg1cViewStorepo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_storepos");

            //    entity.Property(e => e.C1Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("c1_shortname");

            //    entity.Property(e => e.C2Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("c2_shortname");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.IdmeasureOut).HasColumnName("idmeasure_out");

            //    entity.Property(e => e.Idnom)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom");

            //    entity.Property(e => e.IdnomOut)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom_out");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.InPer).HasColumnName("in_per");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MarkingOut)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking_out");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureShortnameOut)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname_out");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameOut)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name_out");

            //    entity.Property(e => e.OName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("o_name");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(38, 6)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(38, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Skidka).HasColumnName("skidka");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Usluga).HasColumnName("usluga");
            //});

            //modelBuilder.Entity<Pg1cViewSupply>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_supply");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DtCheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_check");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Idorganization)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("idorganization");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.OrgName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("org_name");

            //    entity.Property(e => e.SdDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("sd_dtdoc");

            //    entity.Property(e => e.SdName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sd_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");
            //});

            //modelBuilder.Entity<Pg1cViewSupplypo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_1c_view_supplypos");

            //    entity.Property(e => e.C1Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("c1_shortname");

            //    entity.Property(e => e.C2Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("c2_shortname");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcustomer)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idcustomer");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.IdmeasureOut).HasColumnName("idmeasure_out");

            //    entity.Property(e => e.Idnom)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom");

            //    entity.Property(e => e.IdnomOut)
            //        .HasMaxLength(31)
            //        .IsUnicode(false)
            //        .HasColumnName("idnom_out");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MarkingOut)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("marking_out");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureShortnameOut)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname_out");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameOut)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name_out");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Skidka).HasColumnName("skidka");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Usluga).HasColumnName("usluga");
            //});

            //modelBuilder.Entity<PgViewNeedGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_view_need_good");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.DocName)
            //        .IsUnicode(false)
            //        .HasColumnName("doc_name");

            //    entity.Property(e => e.DtNeed)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt_need");

            //    entity.Property(e => e.Idavailabilitygroup).HasColumnName("idavailabilitygroup");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Source)
            //        .IsUnicode(false)
            //        .HasColumnName("source");
            //});

            //modelBuilder.Entity<PgViewPayment>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("pg_view_payment");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.CashboxName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cashbox_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpaymentdoc).HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Idpaymentdocgroup).HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PaymentgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("paymentgroup_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.SumCurPay)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("sum_cur_pay");

            //    entity.Property(e => e.SumOrder)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sum_order");

            //    entity.Property(e => e.SupplydocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("supplydoc_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<Picture>(entity =>
            //{
            //    entity.HasKey(e => e.Idpicture);

            //    entity.ToTable("picture");

            //    entity.Property(e => e.Idpicture)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpicture");

            //    entity.Property(e => e.Bevel).HasColumnName("bevel");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture1).HasColumnName("picture");

            //    entity.Property(e => e.Stretchhorizontal).HasColumnName("stretchhorizontal");

            //    entity.Property(e => e.Stretchvertical).HasColumnName("stretchvertical");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Poll>(entity =>
            //{
            //    entity.HasKey(e => e.Idpoll);

            //    entity.ToTable("poll");

            //    entity.HasIndex(e => e.Idpollgroup, "idx_poll_idpollgroup");

            //    entity.Property(e => e.Idpoll)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpoll");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Idpollgroup).HasColumnName("idpollgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdpollgroupNavigation)
            //        .WithMany(p => p.Polls)
            //        .HasForeignKey(d => d.Idpollgroup)
            //        .HasConstraintName("FK_poll_pollgroup");
            //});

            //modelBuilder.Entity<Pollanswer>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollanswer);

            //    entity.ToTable("pollanswer");

            //    entity.Property(e => e.Idpollanswer)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollanswer");

            //    entity.Property(e => e.Answer)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("answer");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Weightanswer)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weightanswer");
            //});

            //modelBuilder.Entity<Pollexecuting>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecuting);

            //    entity.ToTable("pollexecuting");

            //    entity.HasIndex(e => e.Idcustomer, "idx_pollexecuting_idcustomer");

            //    entity.HasIndex(e => e.Idcustomer2, "idx_pollexecuting_idcustomer2");

            //    entity.HasIndex(e => e.Iddocoper, "idx_pollexecuting_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_pollexecuting_iddocstate");

            //    entity.HasIndex(e => e.Idorder, "idx_pollexecuting_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_pollexecuting_idpeople");

            //    entity.HasIndex(e => e.Idpeoplecreate, "idx_pollexecuting_idpeoplecreate");

            //    entity.HasIndex(e => e.Idpoll, "idx_pollexecuting_idpoll");

            //    entity.HasIndex(e => e.Idpollexecutinggroup, "idx_pollexecuting_idpollexecutinggroup");

            //    entity.Property(e => e.Idpollexecuting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplecreate).HasColumnName("idpeoplecreate");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollexecutinggroup).HasColumnName("idpollexecutinggroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.State).HasColumnName("state");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.PollexecutingIdcustomerNavigations)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_pollexecuting_customer");

            //    entity.HasOne(d => d.Idcustomer2Navigation)
            //        .WithMany(p => p.PollexecutingIdcustomer2Navigations)
            //        .HasForeignKey(d => d.Idcustomer2)
            //        .HasConstraintName("FK_pollexecuting_customer2");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Pollexecutings)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .HasConstraintName("FK_pollexecuting_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Pollexecutings)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_pollexecuting_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Pollexecutings)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_pollexecuting_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.PollexecutingIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_pollexecuting_people");

            //    entity.HasOne(d => d.IdpeoplecreateNavigation)
            //        .WithMany(p => p.PollexecutingIdpeoplecreateNavigations)
            //        .HasForeignKey(d => d.Idpeoplecreate)
            //        .HasConstraintName("FK_pollexecuting_people_cre");

            //    entity.HasOne(d => d.IdpollNavigation)
            //        .WithMany(p => p.Pollexecutings)
            //        .HasForeignKey(d => d.Idpoll)
            //        .HasConstraintName("FK_pollexecuting_poll");

            //    entity.HasOne(d => d.IdpollexecutinggroupNavigation)
            //        .WithMany(p => p.Pollexecutings)
            //        .HasForeignKey(d => d.Idpollexecutinggroup)
            //        .HasConstraintName("FK_pollexecuting_pollexecutinggroup");
            //});

            //modelBuilder.Entity<Pollexecutingdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecutingdiraction);

            //    entity.ToTable("pollexecutingdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_pollexecutingdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeopleсreate, "idx_pollexecutingdiraction_idpeopleсreate");

            //    entity.HasIndex(e => e.Idpollexecuting, "idx_pollexecutingdiraction_idpollexecuting");

            //    entity.Property(e => e.Idpollexecutingdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecutingdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Pollexecutingdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .HasConstraintName("FK_pollexecutingdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleсreateNavigation)
            //        .WithMany(p => p.Pollexecutingdiractions)
            //        .HasForeignKey(d => d.Idpeopleсreate)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_pollexecutingdiraction_people");

            //    entity.HasOne(d => d.IdpollexecutingNavigation)
            //        .WithMany(p => p.Pollexecutingdiractions)
            //        .HasForeignKey(d => d.Idpollexecuting)
            //        .HasConstraintName("FK_pollexecutingdiraction_pollexecuting");
            //});

            //modelBuilder.Entity<Pollexecutinggroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecutinggroup);

            //    entity.ToTable("pollexecutinggroup");

            //    entity.HasIndex(e => e.Parentid, "idx_pollexecutinggroup_parentid");

            //    entity.Property(e => e.Idpollexecutinggroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecutinggroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .IsUnicode(false)
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Pollexecutingitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecutingitem);

            //    entity.ToTable("pollexecutingitem");

            //    entity.HasIndex(e => e.Idpollexecuting, "idx_pollexecutingitem_idpollexecuting");

            //    entity.HasIndex(e => e.Idpollrelation, "idx_pollexecutingitem_idpollrelation");

            //    entity.Property(e => e.Idpollexecutingitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecutingitem");

            //    entity.Property(e => e.Checkvalue).HasColumnName("checkvalue");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollrelation).HasColumnName("idpollrelation");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpollexecutingNavigation)
            //        .WithMany(p => p.Pollexecutingitems)
            //        .HasForeignKey(d => d.Idpollexecuting)
            //        .HasConstraintName("FK_pollexecutingitem_pollexecuting");

            //    entity.HasOne(d => d.IdpollrelationNavigation)
            //        .WithMany(p => p.Pollexecutingitems)
            //        .HasForeignKey(d => d.Idpollrelation)
            //        .HasConstraintName("FK_pollexecutingitem_pollrelation");
            //});

            //modelBuilder.Entity<Pollexecutingitemanswer>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecutingitemanswer);

            //    entity.ToTable("pollexecutingitemanswer");

            //    entity.HasIndex(e => e.Idpollexecutingitem, "idx_pollexecutingitemanswer_idpollexecutingitem");

            //    entity.HasIndex(e => e.Idpollrelation, "idx_pollexecutingitemanswer_idpollrelation");

            //    entity.Property(e => e.Idpollexecutingitemanswer)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecutingitemanswer");

            //    entity.Property(e => e.Checkedstate).HasColumnName("checkedstate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpollexecutingitem).HasColumnName("idpollexecutingitem");

            //    entity.Property(e => e.Idpollrelation).HasColumnName("idpollrelation");

            //    entity.HasOne(d => d.IdpollexecutingitemNavigation)
            //        .WithMany(p => p.Pollexecutingitemanswers)
            //        .HasForeignKey(d => d.Idpollexecutingitem)
            //        .HasConstraintName("FK_pollexecutingitemanswer_pollexecutingitem");

            //    entity.HasOne(d => d.IdpollrelationNavigation)
            //        .WithMany(p => p.Pollexecutingitemanswers)
            //        .HasForeignKey(d => d.Idpollrelation)
            //        .HasConstraintName("FK_pollexecutingitemanswer_pollrelation");
            //});

            //modelBuilder.Entity<Pollexecutingsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollexecutingsign);

            //    entity.ToTable("pollexecutingsign");

            //    entity.HasIndex(e => e.Idpeople, "idx_pollexecutingsign_idpeople");

            //    entity.HasIndex(e => e.Idpollexecuting, "idx_pollexecutingsign_idpollexecuting");

            //    entity.HasIndex(e => e.Idsign, "idx_pollexecutingsign_idsign");

            //    entity.Property(e => e.Idpollexecutingsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollexecutingsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Pollexecutingsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_pollexecutingsign_people");

            //    entity.HasOne(d => d.IdpollexecutingNavigation)
            //        .WithMany(p => p.Pollexecutingsigns)
            //        .HasForeignKey(d => d.Idpollexecuting)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pollexecutingsign_pollexecuting");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Pollexecutingsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_pollexecutingsign_sign");
            //});

            //modelBuilder.Entity<Pollgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollgroup);

            //    entity.ToTable("pollgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_pollgroup_parentid");

            //    entity.Property(e => e.Idpollgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .IsUnicode(false)
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Pollquestion>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollquestion);

            //    entity.ToTable("pollquestion");

            //    entity.HasIndex(e => e.Idpoll, "idx_pollquestion_idpoll");

            //    entity.Property(e => e.Idpollquestion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollquestion");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Explanation)
            //        .IsUnicode(false)
            //        .HasColumnName("explanation");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Obligatory).HasColumnName("obligatory");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Query)
            //        .IsUnicode(false)
            //        .HasColumnName("query");

            //    entity.Property(e => e.Question)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("question");

            //    entity.Property(e => e.Typeanswer)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("typeanswer");

            //    entity.HasOne(d => d.IdpollNavigation)
            //        .WithMany(p => p.Pollquestions)
            //        .HasForeignKey(d => d.Idpoll)
            //        .HasConstraintName("FK_pollquestion_poll");
            //});

            //modelBuilder.Entity<Pollrelation>(entity =>
            //{
            //    entity.HasKey(e => e.Idpollrelation);

            //    entity.ToTable("pollrelation");

            //    entity.HasIndex(e => e.Idpollanswer, "idx_pollrelation_idpollanswer");

            //    entity.HasIndex(e => e.Idpollquestion, "idx_pollrelation_idpollquestion");

            //    entity.HasIndex(e => e.Parentid, "idx_pollrelation_parentid");

            //    entity.Property(e => e.Idpollrelation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpollrelation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpollanswer).HasColumnName("idpollanswer");

            //    entity.Property(e => e.Idpollquestion).HasColumnName("idpollquestion");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.HasOne(d => d.IdpollanswerNavigation)
            //        .WithMany(p => p.Pollrelations)
            //        .HasForeignKey(d => d.Idpollanswer)
            //        .HasConstraintName("FK_pollrelation_pollanswer");

            //    entity.HasOne(d => d.IdpollquestionNavigation)
            //        .WithMany(p => p.Pollrelations)
            //        .HasForeignKey(d => d.Idpollquestion)
            //        .HasConstraintName("FK_pollrelation_pollquestion");
            //});

            //modelBuilder.Entity<PorterShift>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("porterShifts");

            //    entity.Property(e => e.Appointment)
            //        .HasMaxLength(120)
            //        .IsUnicode(false)
            //        .HasColumnName("appointment");

            //    entity.Property(e => e.End)
            //        .HasColumnType("datetime")
            //        .HasColumnName("end");

            //    entity.Property(e => e.Idmaster).HasColumnName("idmaster");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(129)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.ShiftDate)
            //        .HasColumnType("date")
            //        .HasColumnName("shiftDate");

            //    entity.Property(e => e.ShiftType).HasColumnName("shiftType");

            //    entity.Property(e => e.Start)
            //        .HasColumnType("datetime")
            //        .HasColumnName("start");
            //});

            //modelBuilder.Entity<Power>(entity =>
            //{
            //    entity.HasKey(e => e.Idpower);

            //    entity.ToTable("power");

            //    entity.HasIndex(e => e.Iddiraction1, "idx_power_iddiraction1");

            //    entity.HasIndex(e => e.Iddiraction2, "idx_power_iddiraction2");

            //    entity.HasIndex(e => e.Iddocoper, "idx_power_iddocoper");

            //    entity.HasIndex(e => e.Idfinparam, "idx_power_idfinparam");

            //    entity.HasIndex(e => e.Idganttchart, "idx_power_idganttchart");

            //    entity.HasIndex(e => e.Idproductionsite, "idx_power_idproductionsite");

            //    entity.HasIndex(e => e.Parentid, "idx_power_parentid");

            //    entity.Property(e => e.Idpower)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpower");

            //    entity.Property(e => e.Checkpower).HasColumnName("checkpower");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddiraction1).HasColumnName("iddiraction1");

            //    entity.Property(e => e.Iddiraction2).HasColumnName("iddiraction2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idganttchart).HasColumnName("idganttchart");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Limit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("limit");

            //    entity.Property(e => e.Maxval)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxval");

            //    entity.Property(e => e.Model)
            //        .IsUnicode(false)
            //        .HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NeedMorePrecise).HasColumnName("need_more_precise");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Powergroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("powergroup");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.Iddiraction1Navigation)
            //        .WithMany(p => p.PowerIddiraction1Navigations)
            //        .HasForeignKey(d => d.Iddiraction1)
            //        .HasConstraintName("FK_power_diraction1");

            //    entity.HasOne(d => d.Iddiraction2Navigation)
            //        .WithMany(p => p.PowerIddiraction2Navigations)
            //        .HasForeignKey(d => d.Iddiraction2)
            //        .HasConstraintName("FK_power_diraction2");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Powers)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .HasConstraintName("FK_power_iddocoper");

            //    entity.HasOne(d => d.IdfinparamNavigation)
            //        .WithMany(p => p.Powers)
            //        .HasForeignKey(d => d.Idfinparam)
            //        .HasConstraintName("FK_power_finparam");

            //    entity.HasOne(d => d.IdganttchartNavigation)
            //        .WithMany(p => p.Powers)
            //        .HasForeignKey(d => d.Idganttchart)
            //        .HasConstraintName("FK_power_ganttchart");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Powers)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_power_productionsite");
            //});

            //modelBuilder.Entity<Powergrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idpowergrant);

            //    entity.ToTable("powergrant");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_powergrant_idpeoplegroup");

            //    entity.HasIndex(e => e.Idpower, "idx_powergrant_idpower");

            //    entity.Property(e => e.Idpowergrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpowergrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Powergrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_powergrant_peoplegroup");

            //    entity.HasOne(d => d.IdpowerNavigation)
            //        .WithMany(p => p.Powergrants)
            //        .HasForeignKey(d => d.Idpower)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_powergrant_power");
            //});

            //modelBuilder.Entity<Powerplan>(entity =>
            //{
            //    entity.HasKey(e => e.Idpowerplan);

            //    entity.ToTable("powerplan");

            //    entity.HasIndex(e => e.Idpower, "idx_powerplan_idpower");

            //    entity.Property(e => e.Idpowerplan)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpowerplan");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");

            //    entity.Property(e => e.Workshop1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop1");

            //    entity.Property(e => e.Workshop2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop2");

            //    entity.Property(e => e.Workshop3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop3");

            //    entity.HasOne(d => d.IdpowerNavigation)
            //        .WithMany(p => p.Powerplans)
            //        .HasForeignKey(d => d.Idpower)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_powerplan_power");
            //});

            //modelBuilder.Entity<Powerplanchange>(entity =>
            //{
            //    entity.HasKey(e => e.Idpowerplanchanges);

            //    entity.ToTable("powerplanchanges");

            //    entity.Property(e => e.Idpowerplanchanges)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpowerplanchanges");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Idpeoplechanged).HasColumnName("idpeoplechanged");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idpowerplan).HasColumnName("idpowerplan");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");

            //    entity.Property(e => e.Workshop1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop1");

            //    entity.Property(e => e.Workshop2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop2");

            //    entity.Property(e => e.Workshop3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("workshop3");
            //});

            //modelBuilder.Entity<Powerrel>(entity =>
            //{
            //    entity.HasKey(e => e.Idpowerrel);

            //    entity.ToTable("powerrel");

            //    entity.HasIndex(e => e.Idpowermaster, "idx_powerrel_idpowermaster");

            //    entity.HasIndex(e => e.Idpowerslave, "idx_powerrel_idpowerslave");

            //    entity.Property(e => e.Idpowerrel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpowerrel");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Idpowermaster).HasColumnName("idpowermaster");

            //    entity.Property(e => e.Idpowerslave).HasColumnName("idpowerslave");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IdpowermasterNavigation)
            //        .WithMany(p => p.PowerrelIdpowermasterNavigations)
            //        .HasForeignKey(d => d.Idpowermaster)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_powerrel_master_power");

            //    entity.HasOne(d => d.IdpowerslaveNavigation)
            //        .WithMany(p => p.PowerrelIdpowerslaveNavigations)
            //        .HasForeignKey(d => d.Idpowerslave)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_powerrel_slave_power");
            //});

            //modelBuilder.Entity<Preference>(entity =>
            //{
            //    entity.HasKey(e => e.Idpreference);

            //    entity.ToTable("preference");

            //    entity.HasIndex(e => e.Guid, "UQ_preference_guid")
            //        .IsUnique();

            //    entity.Property(e => e.Idpreference)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpreference");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grouping).HasColumnName("grouping");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Heightvariate).HasColumnName("heightvariate");

            //    entity.Property(e => e.Multigroup).HasColumnName("multigroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Rowvariate).HasColumnName("rowvariate");

            //    entity.Property(e => e.Stack).HasColumnName("stack");

            //    entity.Property(e => e.Widthvariate).HasColumnName("widthvariate");
            //});

            //modelBuilder.Entity<Pricechange>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricechange);

            //    entity.ToTable("pricechange");

            //    entity.HasIndex(e => e.Guid, "UQ__pricechange__7A7DD359")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idpricechangegroup, "idx_pricechange_idpricechangegroup");

            //    entity.Property(e => e.Idpricechange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defaultvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("defaultvalue");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Fororder).HasColumnName("fororder");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpricechangegroup).HasColumnName("idpricechangegroup");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Isperc).HasColumnName("isperc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Visibledealer)
            //        .HasColumnName("visibledealer")
            //        .HasComment("Видимость в дилерской версии");

            //    entity.HasOne(d => d.IdpricechangegroupNavigation)
            //        .WithMany(p => p.Pricechanges)
            //        .HasForeignKey(d => d.Idpricechangegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricechange_pricechangegroup");
            //});

            //modelBuilder.Entity<Pricechangegrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricechangegrant);

            //    entity.ToTable("pricechangegrant");

            //    entity.HasComment("Права на скидки и наценки");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_pricechangegrant_idpeoplegroup");

            //    entity.HasIndex(e => e.Idpricechange, "idx_pricechangegrant_idpricechange");

            //    entity.Property(e => e.Idpricechangegrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricechangegrant")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeoplegroup)
            //        .HasColumnName("idpeoplegroup")
            //        .HasComment("Скидка на группу пользователей");

            //    entity.Property(e => e.Idpricechange)
            //        .HasColumnName("idpricechange")
            //        .HasComment("Ссылка на скидку");

            //    entity.Property(e => e.Isedit)
            //        .IsRequired()
            //        .HasColumnName("isedit")
            //        .HasDefaultValueSql("((1))");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Pricechangegrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricechangegrant_peoplegroup");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Pricechangegrants)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricechangegrant_pricechange");
            //});

            //modelBuilder.Entity<Pricechangegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricechangegroup);

            //    entity.ToTable("pricechangegroup");

            //    entity.HasIndex(e => e.Guid, "UQ__pricechangegroup__3B8C7CA7")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_pricechangegroup_parentid");

            //    entity.Property(e => e.Idpricechangegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricechangegroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Pricelist>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelist);

            //    entity.ToTable("pricelist");

            //    entity.HasIndex(e => e.Idcustomer, "idx_pricelist_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_pricelist_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_pricelist_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_pricelist_idpeople");

            //    entity.HasIndex(e => e.Idpricelistgroup, "idx_pricelist_idpricelistgroup");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_pricelist_idproductiontype");

            //    entity.HasIndex(e => e.Idseller, "idx_pricelist_idseller");

            //    entity.HasIndex(e => e.Idvalut, "idx_pricelist_idvalut");

            //    entity.HasIndex(e => e.Idversion, "idx_pricelist_idversion");

            //    entity.HasIndex(e => e.Idversion2, "idx_pricelist_idversion2");

            //    entity.Property(e => e.Idpricelist)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelist");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorderdocoper).HasColumnName("idorderdocoper");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricelistgroup).HasColumnName("idpricelistgroup");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Idversion2).HasColumnName("idversion2");

            //    entity.Property(e => e.Modeltype).HasColumnName("modeltype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .HasConstraintName("FK_pricelist_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_pricelist_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_pricelist_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelist_people");

            //    entity.HasOne(d => d.IdpricelistgroupNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idpricelistgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelist_pricelistgroup");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_pricelist_productiontype");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_pricelist_seller");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Pricelists)
            //        .HasForeignKey(d => d.Idversion)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelist_versions");
            //});

            //modelBuilder.Entity<Pricelistgoodservice>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelistgoodservice);

            //    entity.ToTable("pricelistgoodservice");

            //    entity.HasIndex(e => e.Idgoodservice, "idx_pricelistgoodservice_idgoodservice");

            //    entity.HasIndex(e => e.Idpricelist, "idx_pricelistgoodservice_idpricelist");

            //    entity.HasIndex(e => e.Idpricelistitem, "idx_pricelistgoodservice_idpricelistitem");

            //    entity.Property(e => e.Idpricelistgoodservice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelistgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Idpricelistitem).HasColumnName("idpricelistitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdgoodserviceNavigation)
            //        .WithMany(p => p.Pricelistgoodservices)
            //        .HasForeignKey(d => d.Idgoodservice)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelistgoodservice_goodservice");

            //    entity.HasOne(d => d.IdpricelistNavigation)
            //        .WithMany(p => p.Pricelistgoodservices)
            //        .HasForeignKey(d => d.Idpricelist)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelistgoodservice_orders");

            //    entity.HasOne(d => d.IdpricelistitemNavigation)
            //        .WithMany(p => p.Pricelistgoodservices)
            //        .HasForeignKey(d => d.Idpricelistitem)
            //        .HasConstraintName("FK_pricelistgoodservice_orderitem");
            //});

            //modelBuilder.Entity<Pricelistgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelistgroup);

            //    entity.ToTable("pricelistgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_pricelistgroup_parentid");

            //    entity.Property(e => e.Idpricelistgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelistgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Pricelistitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelistitem);

            //    entity.ToTable("pricelistitem");

            //    entity.HasIndex(e => e.Idpricelist, "idx_pricelistitem_idpricelist");

            //    entity.HasIndex(e => e.Width, "idx_pricelistitem_width");

            //    entity.Property(e => e.Idpricelistitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelistitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdpricelistNavigation)
            //        .WithMany(p => p.Pricelistitems)
            //        .HasForeignKey(d => d.Idpricelist)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelistitem_pricelist");
            //});

            //modelBuilder.Entity<Pricelistmodel>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelistmodel)
            //        .HasName("pk_pricelistmodel");

            //    entity.ToTable("pricelistmodel");

            //    entity.Property(e => e.Idpricelistmodel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelistmodel");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idconstruction).HasColumnName("idconstruction");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Pricelistpricechange>(entity =>
            //{
            //    entity.HasKey(e => e.Idpricelistpricechange);

            //    entity.ToTable("pricelistpricechange");

            //    entity.HasIndex(e => e.Idpricechange, "idx_pricelistpricechange_idpricechange");

            //    entity.HasIndex(e => e.Idpricelist, "idx_pricelistpricechange_idpricelist");

            //    entity.HasIndex(e => e.Idvalut, "idx_pricelistpricechange_idvalut");

            //    entity.Property(e => e.Idpricelistpricechange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpricelistpricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Pricelistpricechanges)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelistpricechange_pricechange");

            //    entity.HasOne(d => d.IdpricelistNavigation)
            //        .WithMany(p => p.Pricelistpricechanges)
            //        .HasForeignKey(d => d.Idpricelist)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_pricelistpricechange_pricelist");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Pricelistpricechanges)
            //        .HasForeignKey(d => d.Idvalut)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_pricelistpricechange_valut");
            //});

            //modelBuilder.Entity<Productiondoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiondoc);

            //    entity.ToTable("productiondoc");

            //    entity.HasIndex(e => e.Iddocoper, "idx_productiondoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_productiondoc_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_productiondoc_idpeople");

            //    entity.HasIndex(e => e.Idproductiondocgroup, "idx_productiondoc_idproductiondocgroup");

            //    entity.Property(e => e.Idproductiondoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductiondocgroup).HasColumnName("idproductiondocgroup");

            //    entity.Property(e => e.Idstoredepart1).HasColumnName("idstoredepart1");

            //    entity.Property(e => e.Idstoredepart2).HasColumnName("idstoredepart2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Productiondocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiondoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Productiondocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_productiondoc_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Productiondocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_productiondoc_people");

            //    entity.HasOne(d => d.IdproductiondocgroupNavigation)
            //        .WithMany(p => p.Productiondocs)
            //        .HasForeignKey(d => d.Idproductiondocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiondoc_group");
            //});

            //modelBuilder.Entity<Productiondocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiondocgroup);

            //    entity.ToTable("productiondocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_productiondocgroup_parentid");

            //    entity.Property(e => e.Idproductiondocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiondocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Productiondocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiondocpos);

            //    entity.ToTable("productiondocpos");

            //    entity.HasIndex(e => e.Idgood, "idx_productiondocpos_idgood");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_productiondocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idmodel, "idx_productiondocpos_idmodel");

            //    entity.HasIndex(e => e.Idorderitem, "idx_productiondocpos_idorderitem");

            //    entity.HasIndex(e => e.Idproductiondoc, "idx_productiondocpos_idproductiondoc");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_productiondocpos_idstoredoc");

            //    entity.Property(e => e.Idproductiondocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiondocpos");

            //    entity.Property(e => e.Barnumpos)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barnumpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Productiondocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_productiondocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Productiondocpos)
            //        .HasForeignKey(d => d.Idmodel)
            //        .HasConstraintName("FK_productiondocpos_model");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Productiondocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiondocpos_orderitem");

            //    entity.HasOne(d => d.IdproductiondocNavigation)
            //        .WithMany(p => p.Productiondocpos)
            //        .HasForeignKey(d => d.Idproductiondoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiondocpos_productiondoc");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Productiondocpos)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .HasConstraintName("FK_productiondocpos_storedoc");
            //});

            //modelBuilder.Entity<Productiondocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiondocsign);

            //    entity.ToTable("productiondocsign");

            //    entity.HasIndex(e => e.Idpeople, "idx_productiondocsign_idpeople");

            //    entity.HasIndex(e => e.Idproductiondoc, "idx_productiondocsign_idproductiondoc");

            //    entity.HasIndex(e => e.Idsign, "idx_productiondocsign_idsign");

            //    entity.Property(e => e.Idproductiondocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiondocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Productiondocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_productiondocsign_people");

            //    entity.HasOne(d => d.IdproductiondocNavigation)
            //        .WithMany(p => p.Productiondocsigns)
            //        .HasForeignKey(d => d.Idproductiondoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiondocsign_productiondoc");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Productiondocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_productiondocsign_sign");
            //});

            //modelBuilder.Entity<Productionsite>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductionsite);

            //    entity.ToTable("productionsite");

            //    entity.Property(e => e.Idproductionsite)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductionsite");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Productiontype>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontype);

            //    entity.ToTable("productiontype");

            //    entity.HasIndex(e => e.Idcolorgroupcustom, "idx_productiontype_idcolorgroupcustom");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_productiontype_idconstructiontype");

            //    entity.HasIndex(e => e.Idmeasure, "idx_productiontype_idmeasure");

            //    entity.HasIndex(e => e.Idpower, "idx_productiontype_idpower");

            //    entity.HasIndex(e => e.Idpricechange, "idx_productiontype_idpricechange");

            //    entity.HasIndex(e => e.Idproductiontypegroup, "idx_productiontype_idproductiontypegroup");

            //    entity.Property(e => e.Idproductiontype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idproductiontypegroup)
            //        .HasColumnName("idproductiontypegroup")
            //        .HasComment("Ссылка на группу типов продукции");

            //    entity.Property(e => e.Isactive)
            //        .IsRequired()
            //        .HasColumnName("isactive")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Onlytemplate).HasColumnName("onlytemplate");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Productiontypegroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontypegroup");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdcolorgroupcustomNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idcolorgroupcustom)
            //        .HasConstraintName("FK_productiontype_colorgroupcustom");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_productiontype_constructiontype");

            //    entity.HasOne(d => d.IdmeasureNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idmeasure)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontype_measure");

            //    entity.HasOne(d => d.IdpowerNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idpower)
            //        .HasConstraintName("FK_productiontype_power");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .HasConstraintName("FK_productiontype_pricechange");

            //    entity.HasOne(d => d.IdproductiontypegroupNavigation)
            //        .WithMany(p => p.Productiontypes)
            //        .HasForeignKey(d => d.Idproductiontypegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontype_productiontypegroup");
            //});

            //modelBuilder.Entity<Productiontypeconstruction>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypeconstruction);

            //    entity.ToTable("productiontypeconstruction");

            //    entity.HasComment("Таблица связей продукции с типами конструкций");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_productiontypeconstruction_idconstructiontype");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypeconstruction_idproductiontype");

            //    entity.Property(e => e.Idproductiontypeconstruction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypeconstruction")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Idconstructiontype)
            //        .HasColumnName("idconstructiontype")
            //        .HasComment("Ссылка тип конструкции");

            //    entity.Property(e => e.Idproductiontype)
            //        .HasColumnName("idproductiontype")
            //        .HasComment("Ссылка на тип продукции");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Productiontypeconstructions)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypeconstruction_constructiontype");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypeconstructions)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypeconstruction_productiontype");
            //});

            //modelBuilder.Entity<Productiontypegrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypegrant);

            //    entity.ToTable("productiontypegrant");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_productiontypegrant_idpeoplegroup");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypegrant_idproductiontype");

            //    entity.Property(e => e.Idproductiontypegrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypegrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grant).HasColumnName("grant");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Productiontypegrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypegrant_peoplegroup");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypegrants)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_productiontypegrant_productiontype");
            //});

            //modelBuilder.Entity<Productiontypegroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypegroup);

            //    entity.ToTable("productiontypegroup");

            //    entity.HasComment("Группы типов продукции");

            //    entity.HasIndex(e => e.Guid, "UQ__productiontypegr__5BF94C39")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_productiontypegroup_parentid");

            //    entity.Property(e => e.Idproductiontypegroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypegroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Numpos)
            //        .HasColumnName("numpos")
            //        .HasComment("Номер по порядку");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родителя");
            //});

            //modelBuilder.Entity<Productiontypeparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypeparam);

            //    entity.ToTable("productiontypeparam");

            //    entity.HasComment("Параметры типов продукции");

            //    entity.HasIndex(e => e.Guid, "UQ__productiontypepa__3D74C519")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idmodelparam, "idx_productiontypeparam_idmodelparam");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypeparam_idproductiontype");

            //    entity.Property(e => e.Idproductiontypeparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypeparam")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())")
            //        .HasComment("Глобальный идентификатор для репликации");

            //    entity.Property(e => e.Idmodelparam)
            //        .HasColumnName("idmodelparam")
            //        .HasComment("Ссылка на параметр");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idproductiontype)
            //        .HasColumnName("idproductiontype")
            //        .HasComment("Ссылка на тип продукции");

            //    entity.Property(e => e.Isnumeric1).HasColumnName("isnumeric1");

            //    entity.Property(e => e.Isnumeric2).HasColumnName("isnumeric2");

            //    entity.Property(e => e.Isstr1).HasColumnName("isstr1");

            //    entity.Property(e => e.Isstr2).HasColumnName("isstr2");

            //    entity.Property(e => e.Numericvalue1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numericvalue1");

            //    entity.Property(e => e.Numericvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numericvalue2");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Strvalue1)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue1");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.HasOne(d => d.IdmodelparamNavigation)
            //        .WithMany(p => p.Productiontypeparams)
            //        .HasForeignKey(d => d.Idmodelparam)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypeparam_modelparam");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.ProductiontypeparamIdmodelparamvalueNavigations)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_productiontypeparam_idmodelparamvalue");

            //    entity.HasOne(d => d.Idmodelparamvalue2Navigation)
            //        .WithMany(p => p.ProductiontypeparamIdmodelparamvalue2Navigations)
            //        .HasForeignKey(d => d.Idmodelparamvalue2)
            //        .HasConstraintName("FK_productiontypeparam_idmodelparamvalue2");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypeparams)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypeparam_productiontype");
            //});

            //modelBuilder.Entity<Productiontypesetting>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypesetting)
            //        .HasName("productiontypesetting_pkey");

            //    entity.ToTable("productiontypesetting");

            //    entity.HasIndex(e => e.Guid, "UQ__productiontypese__4515E6E1")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypesetting_idproductiontype");

            //    entity.HasIndex(e => e.Idsetting, "idx_productiontypesetting_idsetting");

            //    entity.Property(e => e.Idproductiontypesetting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypesetting");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypesettings)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_productiontypesetting_productiontype");

            //    entity.HasOne(d => d.IdsettingNavigation)
            //        .WithMany(p => p.Productiontypesettings)
            //        .HasForeignKey(d => d.Idsetting)
            //        .HasConstraintName("FK_productiontypesetting_setting");
            //});

            //modelBuilder.Entity<Productiontypesystem>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypesystems);

            //    entity.ToTable("productiontypesystems");

            //    entity.HasComment("Таблица связей продукции с системами профиля, фурнитуры, типами конструкций etc.");

            //    entity.HasIndex(e => e.Idcolorgroupcustom, "idx_productiontypesystems_idcolorgroupcustom");

            //    entity.HasIndex(e => e.Idpricechange, "idx_productiontypesystems_idpricechange");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypesystems_idproductiontype");

            //    entity.HasIndex(e => e.Idsystem, "idx_productiontypesystems_idsystem");

            //    entity.Property(e => e.Idproductiontypesystems)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypesystems")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата и время удаления");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idproductiontype)
            //        .HasColumnName("idproductiontype")
            //        .HasComment("Ссылка на тип продукции");

            //    entity.Property(e => e.Idsystem)
            //        .HasColumnName("idsystem")
            //        .HasComment("Ссылка на связанное значение в системах");

            //    entity.HasOne(d => d.IdcolorgroupcustomNavigation)
            //        .WithMany(p => p.Productiontypesystems)
            //        .HasForeignKey(d => d.Idcolorgroupcustom)
            //        .HasConstraintName("FK_productiontypesystems_idcolorgroupcustom");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Productiontypesystems)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .HasConstraintName("FK_pricechange_productiontypesystems");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypesystems)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypesystems_productiontype");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.Productiontypesystems)
            //        .HasForeignKey(d => d.Idsystem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_productiontypesystems_system");
            //});

            //modelBuilder.Entity<Productiontypetemplate>(entity =>
            //{
            //    entity.HasKey(e => e.Idproductiontypetemplate);

            //    entity.ToTable("productiontypetemplate");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_productiontypetemplate_idproductiontype");

            //    entity.Property(e => e.Idproductiontypetemplate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idproductiontypetemplate");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Comment2)
            //        .IsUnicode(false)
            //        .HasColumnName("comment2");

            //    entity.Property(e => e.Comment3)
            //        .IsUnicode(false)
            //        .HasColumnName("comment3");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Model).HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Productiontypetemplates)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_productiontypetemplate_productiontype");
            //});

            //modelBuilder.Entity<Pyramid>(entity =>
            //{
            //    entity.HasKey(e => e.Idpyramid);

            //    entity.ToTable("pyramid");

            //    entity.HasIndex(e => e.Guid, "UQ__pyramid__5A1103C7")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idcar, "idx_pyramid_idcar");

            //    entity.HasIndex(e => e.Idproductionsite, "idx_pyramid_idproductionsite");

            //    entity.Property(e => e.Idpyramid)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpyramid");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Depth).HasColumnName("depth");

            //    entity.Property(e => e.Doublesided).HasColumnName("doublesided");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Length).HasColumnName("length");

            //    entity.Property(e => e.Maxheightfirstrow).HasColumnName("maxheightfirstrow");

            //    entity.Property(e => e.Maxrowwidth).HasColumnName("maxrowwidth");

            //    entity.Property(e => e.Maxsquare).HasColumnName("maxsquare");

            //    entity.Property(e => e.Maxvolume).HasColumnName("maxvolume");

            //    entity.Property(e => e.Maxweight).HasColumnName("maxweight");

            //    entity.Property(e => e.Maxwiwidth).HasColumnName("maxwiwidth");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Priority).HasColumnName("priority");

            //    entity.Property(e => e.Qufirstrow).HasColumnName("qufirstrow");

            //    entity.Property(e => e.Qurow).HasColumnName("qurow");

            //    entity.Property(e => e.Rowlen).HasColumnName("rowlen");

            //    entity.Property(e => e.Selfdepth).HasColumnName("selfdepth");

            //    entity.Property(e => e.State).HasColumnName("state");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("type");

            //    entity.Property(e => e.Weight).HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdcarNavigation)
            //        .WithMany(p => p.Pyramids)
            //        .HasForeignKey(d => d.Idcar)
            //        .HasConstraintName("FK_pyramid_car");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Pyramids)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_pyramid_productionsite");
            //});

            //modelBuilder.Entity<Pyramidcar>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("pyramidcars");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");
            //});

            //modelBuilder.Entity<Pyramidfact>(entity =>
            //{
            //    entity.HasKey(e => e.Idpyramidfact);

            //    entity.ToTable("pyramidfact");

            //    entity.Property(e => e.Idpyramidfact)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpyramidfact");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtbegin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtbegin");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Qubag).HasColumnName("qubag");
            //});

            //modelBuilder.Entity<Pyramidfactpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idpyramidfactpos);

            //    entity.ToTable("pyramidfactpos");

            //    entity.Property(e => e.Idpyramidfactpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idpyramidfactpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpyramidfact).HasColumnName("idpyramidfact");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<Ref1>(entity =>
            //{
            //    entity.HasKey(e => e.F0);

            //    entity.ToTable("REF_1");

            //    entity.Property(e => e.F0).ValueGeneratedNever();

            //    entity.Property(e => e.F2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.F3)
            //        .HasMaxLength(25)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idglasselement).HasColumnName("idglasselement");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");
            //});

            //modelBuilder.Entity<Ref11>(entity =>
            //{
            //    entity.HasKey(e => new { e.F0, e.F1 });

            //    entity.ToTable("REF_11");

            //    entity.Property(e => e.F2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idmodelparamvalue3).HasColumnName("idmodelparamvalue3");

            //    entity.Property(e => e.Idmodelparamvalue4).HasColumnName("idmodelparamvalue4");
            //});

            //modelBuilder.Entity<Ref12>(entity =>
            //{
            //    entity.HasKey(e => e.F0);

            //    entity.ToTable("REF_12");

            //    entity.Property(e => e.F0).ValueGeneratedNever();

            //    entity.Property(e => e.F2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfurnsys).HasColumnName("idfurnsys");

            //    entity.Property(e => e.Idmodelparamvalue1).HasColumnName("idmodelparamvalue1");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.Usespec).HasColumnName("usespec");
            //});

            //modelBuilder.Entity<Ref21>(entity =>
            //{
            //    entity.HasKey(e => e.F0);

            //    entity.ToTable("REF_21");

            //    entity.Property(e => e.F0).ValueGeneratedNever();

            //    entity.Property(e => e.F1)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Nocolor).HasColumnName("nocolor");
            //});

            //modelBuilder.Entity<Ref37>(entity =>
            //{
            //    entity.HasKey(e => new { e.F0, e.F1 })
            //        .HasName("PK_REF_37_1");

            //    entity.ToTable("REF_37");

            //    entity.Property(e => e.F2)
            //        .HasMaxLength(20)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");
            //});

            //modelBuilder.Entity<Ref4>(entity =>
            //{
            //    entity.HasKey(e => e.F1);

            //    entity.ToTable("REF_4");

            //    entity.Property(e => e.F1).ValueGeneratedNever();

            //    entity.Property(e => e.F5)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Ref40>(entity =>
            //{
            //    entity.HasKey(e => e.F0);

            //    entity.ToTable("REF_40");

            //    entity.Property(e => e.F0)
            //        .HasMaxLength(40)
            //        .IsUnicode(false);

            //    entity.Property(e => e.F1)
            //        .HasMaxLength(10)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Ref5>(entity =>
            //{
            //    entity.HasKey(e => new { e.F0, e.F1, e.Num });

            //    entity.ToTable("REF_5");

            //    entity.Property(e => e.Num).HasColumnName("num");
            //});

            //modelBuilder.Entity<Ref6>(entity =>
            //{
            //    entity.HasKey(e => e.F0);

            //    entity.ToTable("REF_6");

            //    entity.Property(e => e.F0).ValueGeneratedNever();

            //    entity.Property(e => e.F1)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Fixhandle).HasColumnName("fixhandle");

            //    entity.Property(e => e.Idmodelparamvalue1).HasColumnName("idmodelparamvalue1");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idmodelparamvalue3).HasColumnName("idmodelparamvalue3");

            //    entity.Property(e => e.Opentype).HasColumnName("opentype");
            //});

            //modelBuilder.Entity<Ref7>(entity =>
            //{
            //    entity.HasKey(e => new { e.F0, e.F1 });

            //    entity.ToTable("REF_7");
            //});

            //modelBuilder.Entity<RegInost>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_inost");

            //    entity.HasIndex(e => new { e.Dt, e.Idstoredepart, e.Idgood, e.Idcolor1, e.Idcolor2 }, "IX_reg_inost")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Pr)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("pr");

            //    entity.Property(e => e.Ra)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("ra");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_inost_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_inost_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_inost_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_inost_storedepart");
            //});

            //modelBuilder.Entity<RegInostLog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_inost_log");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtlog)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlog");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_inost_log_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_inost_log_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_inost_log_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_inost_log_storedepart");
            //});

            //modelBuilder.Entity<RegMf>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_mf");

            //    entity.HasIndex(e => new { e.Idmanufactdoc, e.Idgood, e.Idcolor1, e.Idcolor2, e.Idstoredepart }, "IX_reg_mf")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Pr)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("pr");

            //    entity.Property(e => e.Ra)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("ra");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_mf_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_mf_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_good");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_manufactdoc");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_storedepart");
            //});

            //modelBuilder.Entity<RegMfLog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_mf_log");

            //    entity.HasIndex(e => e.Idmanufactdoc, "ix_reg_mf_log_idmanufactdoc");

            //    entity.Property(e => e.Dtlog)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlog");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_mf_log_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_mf_log_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_log_good");

            //    entity.HasOne(d => d.IdmanufactdocNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idmanufactdoc)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_log_manufactdoc");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_mf_log_storedepart");
            //});

            //modelBuilder.Entity<RegOst>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_ost");

            //    entity.HasIndex(e => new { e.Dt, e.Idstoredepart, e.Idgood, e.Idcolor1, e.Idcolor2 }, "IX_reg_ost")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Pr)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("pr");

            //    entity.Property(e => e.Ra)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("ra");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_ost_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_ost_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_storedepart");
            //});

            //modelBuilder.Entity<RegOstLog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_ost_log");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtlog)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlog");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_ost_log_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_ost_log_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_log_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_log_storedepart");
            //});

            //modelBuilder.Entity<RegOstWl>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_ost_wl");

            //    entity.HasIndex(e => new { e.Dt, e.Idstoredepart, e.Idgood, e.Idcolor1, e.Idcolor2 }, "IX_reg_ost_wl")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Pr)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("pr");

            //    entity.Property(e => e.Ra)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("ra");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_ost_wl_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_ost_wl_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_wl_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_wl_storedepart");
            //});

            //modelBuilder.Entity<RegOstWlLog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("reg_ost_wl_log");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtlog)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlog");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_reg_ost_wl_log_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_reg_ost_wl_log_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_wl_log_good");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_reg_ost_wl_log_storedepart");
            //});

            //modelBuilder.Entity<Regionalsetting>(entity =>
            //{
            //    entity.HasKey(e => e.Idregionalsetting)
            //        .HasName("regionalsetting_pkey");

            //    entity.ToTable("regionalsetting");

            //    entity.Property(e => e.Idregionalsetting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idregionalsetting");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Intvalue).HasColumnName("intvalue");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");
            //});

            //modelBuilder.Entity<Report>(entity =>
            //{
            //    entity.HasKey(e => e.Idreport)
            //        .HasName("pk_report");

            //    entity.ToTable("report");

            //    entity.HasIndex(e => e.Idreportgroup, "idx_report_idreportgroup");

            //    entity.HasIndex(e => e.Idreportscript, "idx_report_idreportscript");

            //    entity.Property(e => e.Idreport)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreport");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Filename)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("filename");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idreportgroup).HasColumnName("idreportgroup");

            //    entity.Property(e => e.Idreportscript).HasColumnName("idreportscript");

            //    entity.Property(e => e.Indealerbase)
            //        .HasColumnName("indealerbase")
            //        .HasComment("Переносить в дилерскую версию");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Loadtype).HasColumnName("loadtype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Report1).HasColumnName("report");

            //    entity.Property(e => e.Reportgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("reportgroup");

            //    entity.Property(e => e.Tomenu).HasColumnName("tomenu");

            //    entity.HasOne(d => d.IdreportgroupNavigation)
            //        .WithMany(p => p.Reports)
            //        .HasForeignKey(d => d.Idreportgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_report_reportgroup");

            //    entity.HasOne(d => d.IdreportscriptNavigation)
            //        .WithMany(p => p.Reports)
            //        .HasForeignKey(d => d.Idreportscript)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_report_reportscript");
            //});

            //modelBuilder.Entity<Reportdocoper>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportdocoper);

            //    entity.ToTable("reportdocoper");

            //    entity.HasIndex(e => e.Iddocoper, "idx_reportdocoper_iddocoper");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_reportdocoper_idpeoplegroup");

            //    entity.HasIndex(e => e.Idreport, "idx_reportdocoper_idreport");

            //    entity.Property(e => e.Idreportdocoper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportdocoper");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Reportdocopers)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_reportdocoper_docoper");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Reportdocopers)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_reportdocoper_peoplegroup");

            //    entity.HasOne(d => d.IdreportNavigation)
            //        .WithMany(p => p.Reportdocopers)
            //        .HasForeignKey(d => d.Idreport)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_reportdocoper_report");
            //});

            //modelBuilder.Entity<Reportgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportgroup);

            //    entity.ToTable("reportgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_reportgroup_parentid");

            //    entity.Property(e => e.Idreportgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Reportkit>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportkit);

            //    entity.ToTable("reportkit");

            //    entity.Property(e => e.Idreportkit)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportkit");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Reportkitdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportkitdetail);

            //    entity.ToTable("reportkitdetail");

            //    entity.HasIndex(e => e.Idreport, "idx_reportkitdetail_idreport");

            //    entity.HasIndex(e => e.Idreportkit, "idx_reportkitdetail_idreportkit");

            //    entity.Property(e => e.Idreportkitdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportkitdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Idreportkit).HasColumnName("idreportkit");

            //    entity.Property(e => e.Isprint).HasColumnName("isprint");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.HasOne(d => d.IdreportNavigation)
            //        .WithMany(p => p.Reportkitdetails)
            //        .HasForeignKey(d => d.Idreport)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_reportkitdetail_report");

            //    entity.HasOne(d => d.IdreportkitNavigation)
            //        .WithMany(p => p.Reportkitdetails)
            //        .HasForeignKey(d => d.Idreportkit)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_reportkitdetail_reportkitdetail");
            //});

            //modelBuilder.Entity<Reportsave>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportsave)
            //        .HasName("pk_reportsave");

            //    entity.ToTable("reportsave");

            //    entity.HasIndex(e => e.Idreport, "idx_reportsave_idreport");

            //    entity.Property(e => e.Idreportsave)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportsave");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Report).HasColumnName("report");

            //    entity.Property(e => e.Reportgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("reportgroup");

            //    entity.Property(e => e.Savedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("savedate");

            //    entity.HasOne(d => d.IdreportNavigation)
            //        .WithMany(p => p.Reportsaves)
            //        .HasForeignKey(d => d.Idreport)
            //        .HasConstraintName("fk_reportsave_1");
            //});

            //modelBuilder.Entity<Reportscript>(entity =>
            //{
            //    entity.HasKey(e => e.Idreportscript);

            //    entity.ToTable("reportscript");

            //    entity.Property(e => e.Idreportscript)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idreportscript");

            //    entity.Property(e => e.Activescript).HasColumnName("activescript");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.Property(e => e.Scriptgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("scriptgroup");
            //});

            //modelBuilder.Entity<Respower>(entity =>
            //{
            //    entity.HasKey(e => e.Idrespower);

            //    entity.ToTable("respower");

            //    entity.HasIndex(e => e.Dt, "IDX_respower_dt");

            //    entity.HasIndex(e => e.Idorder, "idx_respower_idorder");

            //    entity.HasIndex(e => e.Idorderitem, "idx_respower_idorderitem");

            //    entity.HasIndex(e => e.Idpeople, "idx_respower_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_respower_idpeople2");

            //    entity.HasIndex(e => e.Idpower, "idx_respower_idpower");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_respower_idservicedoc");

            //    entity.Property(e => e.Idrespower)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idrespower");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Respowers)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_respower_orders");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Respowers)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_respower_orderitem");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.RespowerIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_respower_people");

            //    entity.HasOne(d => d.Idpeople2Navigation)
            //        .WithMany(p => p.RespowerIdpeople2Navigations)
            //        .HasForeignKey(d => d.Idpeople2)
            //        .HasConstraintName("FK_respower_people1");

            //    entity.HasOne(d => d.IdpowerNavigation)
            //        .WithMany(p => p.Respowers)
            //        .HasForeignKey(d => d.Idpower)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_respower_power");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Respowers)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .HasConstraintName("FK_respower_servicedoc");
            //});

            //modelBuilder.Entity<Revisiongp>(entity =>
            //{
            //    entity.HasKey(e => e.Idrevisiongp);

            //    entity.ToTable("revisiongp");

            //    entity.HasIndex(e => e.Iddocoper, "idx_revisiongp_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_revisiongp_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_revisiongp_idpeople");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_revisiongp_idstoredepart");

            //    entity.Property(e => e.Idrevisiongp)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idrevisiongp");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Reg).HasColumnName("reg");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Revisiongps)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .HasConstraintName("FK_revisiongp_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Revisiongps)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_revisiongp_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Revisiongps)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_revisiongp_people");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Revisiongps)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_revisiongp_storedepart");
            //});

            //modelBuilder.Entity<Revisiongpitem>(entity =>
            //{
            //    entity.HasKey(e => e.Idrevisiongpitem)
            //        .HasName("PK_revisionitem");

            //    entity.ToTable("revisiongpitem");

            //    entity.HasIndex(e => e.Idpeople, "idx_revisiongpitem_idpeople");

            //    entity.HasIndex(e => e.Idrevisiongp, "idx_revisiongpitem_idrevisiongp");

            //    entity.HasIndex(e => e.Idrotoxhouse, "idx_revisiongpitem_idrotoxhouse");

            //    entity.Property(e => e.Idrevisiongpitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idrevisiongpitem");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcheck");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idrevisiongp).HasColumnName("idrevisiongp");

            //    entity.Property(e => e.Idrotoxhouse).HasColumnName("idrotoxhouse");

            //    entity.Property(e => e.State).HasColumnName("state");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Revisiongpitems)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_revisiongpitem_people");

            //    entity.HasOne(d => d.IdrevisiongpNavigation)
            //        .WithMany(p => p.Revisiongpitems)
            //        .HasForeignKey(d => d.Idrevisiongp)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_revisiongpitem_revisiongp");

            //    entity.HasOne(d => d.IdrotoxhouseNavigation)
            //        .WithMany(p => p.Revisiongpitems)
            //        .HasForeignKey(d => d.Idrotoxhouse)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_revisiongpitem_rotoxhouse");
            //});

            //modelBuilder.Entity<Rightaccess>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("rightaccess");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_rightaccess_idpeoplegroup");

            //    entity.Property(e => e.Data)
            //        .HasColumnType("xml")
            //        .HasColumnName("data");

            //    entity.Property(e => e.Formname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("formname");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");
            //});

            //modelBuilder.Entity<Rotoxflugel>(entity =>
            //{
            //    entity.HasKey(e => e.Idrotoxflugel);

            //    entity.ToTable("rotoxflugel");

            //    entity.Property(e => e.Idrotoxflugel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idrotoxflugel");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Num).HasColumnName("num");

            //    entity.Property(e => e.Qu).HasColumnName("qu");
            //});

            //modelBuilder.Entity<Rotoxhouse>(entity =>
            //{
            //    entity.HasKey(e => e.Idrotoxhouse);

            //    entity.ToTable("rotoxhouse");

            //    entity.HasComment("Склад готовой продукции");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_rotoxhouse_idmanufactdocpos")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idmanufactdocpyramid, "idx_rotoxhouse_idmanufactdocpyramid")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => new { e.Idorderitem, e.Orderitemnum }, "idx_rotoxhouse_idorderitem");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_rotoxhouse_idstoredepart")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => e.Idstoredoc, "idx_rotoxhouse_idstoredoc")
            //        .HasFillFactor(80);

            //    entity.HasIndex(e => new { e.Row, e.Idmanufactdocpos }, "idx_rotoxhouse_row");

            //    entity.HasIndex(e => e.State, "my_IDX_rotoxhouse_state");

            //    entity.Property(e => e.Idrotoxhouse)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idrotoxhouse")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Barnumpos)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barnumpos");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cell")
            //        .HasComment("Ячейка склада");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtin")
            //        .HasComment("Дата прихода");

            //    entity.Property(e => e.Dtout)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtout")
            //        .HasComment("Дата расхода");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmanufactdocpyramid).HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem)
            //        .HasColumnName("idorderitem")
            //        .HasComment("Позиция заказа");

            //    entity.Property(e => e.Idpeople1)
            //        .HasColumnName("idpeople1")
            //        .HasComment("Мастер производство");

            //    entity.Property(e => e.Idpeople2)
            //        .HasColumnName("idpeople2")
            //        .HasComment("Мастер ОТК");

            //    entity.Property(e => e.Idpeople3)
            //        .HasColumnName("idpeople3")
            //        .HasComment("Принял на склад");

            //    entity.Property(e => e.Idpeople4)
            //        .HasColumnName("idpeople4")
            //        .HasComment("Отгрузил со склада");

            //    entity.Property(e => e.Idpeople5)
            //        .HasColumnName("idpeople5")
            //        .HasComment("Прочее (на усмотрение компаний)");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoragespace2).HasColumnName("idstoragespace2");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("row")
            //        .HasComment("Строка склада");

            //    entity.Property(e => e.State)
            //        .HasColumnName("state")
            //        .HasComment("Состояние ячейки");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Rotoxhouses)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_rotoxhouse_manufactdocpos");

            //    entity.HasOne(d => d.Idmanufactdocpyram)
            //        .WithMany(p => p.Rotoxhouses)
            //        .HasForeignKey(d => d.Idmanufactdocpyramid)
            //        .HasConstraintName("FK_rotoxhouse_manufactdocpyramid");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Rotoxhouses)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_rotoxhouse_orderitem");

            //    entity.HasOne(d => d.IdstoragespaceNavigation)
            //        .WithMany(p => p.RotoxhouseIdstoragespaceNavigations)
            //        .HasForeignKey(d => d.Idstoragespace)
            //        .HasConstraintName("FK_rotoxhouse_storagespace");

            //    entity.HasOne(d => d.Idstoragespace2Navigation)
            //        .WithMany(p => p.RotoxhouseIdstoragespace2Navigations)
            //        .HasForeignKey(d => d.Idstoragespace2)
            //        .HasConstraintName("FK_rotoxhouse_storagespace2");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Rotoxhouses)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_rotoxhouse_storedepart");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Rotoxhouses)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .HasConstraintName("FK_rotoxhouse_storedoc");
            //});

            //modelBuilder.Entity<Route>(entity =>
            //{
            //    entity.HasKey(e => e.Idroute);

            //    entity.ToTable("route");

            //    entity.HasIndex(e => e.Guid, "UQ_route_guid")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idproductionsite, "idx_route_idproductionsite");

            //    entity.Property(e => e.Idroute)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idroute");

            //    entity.Property(e => e.Active).HasColumnName("active");

            //    entity.Property(e => e.Autouse).HasColumnName("autouse");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grouping).HasColumnName("grouping");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Maxpyr).HasColumnName("maxpyr");

            //    entity.Property(e => e.Maxpyrgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("maxpyrgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Transit).HasColumnName("transit");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Routes)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_route_idproductionsite");
            //});

            //modelBuilder.Entity<Ruleoptim>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("ruleoptim");

            //    entity.Property(e => e.Condition).HasColumnName("condition");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idruleoptim).HasColumnName("idruleoptim");

            //    entity.Property(e => e.Idrulescheme).HasColumnName("idrulescheme");

            //    entity.Property(e => e.Name).HasColumnName("name");
            //});

            //modelBuilder.Entity<Rulescheme>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("rulescheme");

            //    entity.Property(e => e.Iddocoper)
            //        .HasMaxLength(10)
            //        .HasColumnName("iddocoper")
            //        .IsFixedLength();

            //    entity.Property(e => e.Idrulescheme).HasColumnName("idrulescheme");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Seller>(entity =>
            //{
            //    entity.HasKey(e => e.Idseller);

            //    entity.ToTable("seller");

            //    entity.HasIndex(e => e.Guid, "UQ__seller__13498123")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idaddclassification1, "idx_seller_idaddclassification1");

            //    entity.HasIndex(e => e.Idaddclassification2, "idx_seller_idaddclassification2");

            //    entity.HasIndex(e => e.Idaddclassification3, "idx_seller_idaddclassification3");

            //    entity.HasIndex(e => e.Idaddclassification4, "idx_seller_idaddclassification4");

            //    entity.HasIndex(e => e.Idaddclassification5, "idx_seller_idaddclassification5");

            //    entity.HasIndex(e => e.Idsellergroup, "idx_seller_idsellergroup");

            //    entity.Property(e => e.Idseller)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idseller");

            //    entity.Property(e => e.Account)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addresslegal)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addresslegal");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contactpeople)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contactpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Directorfio)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfio");

            //    entity.Property(e => e.Directorfounding)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfounding");

            //    entity.Property(e => e.Discount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount");

            //    entity.Property(e => e.Discount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount2");

            //    entity.Property(e => e.Discount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount3");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddclassification1).HasColumnName("idaddclassification1");

            //    entity.Property(e => e.Idaddclassification2).HasColumnName("idaddclassification2");

            //    entity.Property(e => e.Idaddclassification3).HasColumnName("idaddclassification3");

            //    entity.Property(e => e.Idaddclassification4).HasColumnName("idaddclassification4");

            //    entity.Property(e => e.Idaddclassification5).HasColumnName("idaddclassification5");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idsellergroup).HasColumnName("idsellergroup");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kaccount)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("kaccount");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name2");

            //    entity.Property(e => e.Okonh)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okonh");

            //    entity.Property(e => e.Okpo)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okpo");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Pyrgrouping).HasColumnName("pyrgrouping");

            //    entity.Property(e => e.Sellercode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("sellercode");

            //    entity.HasOne(d => d.Idaddclassification1Navigation)
            //        .WithMany(p => p.SellerIdaddclassification1Navigations)
            //        .HasForeignKey(d => d.Idaddclassification1)
            //        .HasConstraintName("FK_seller_addclassification1");

            //    entity.HasOne(d => d.Idaddclassification2Navigation)
            //        .WithMany(p => p.SellerIdaddclassification2Navigations)
            //        .HasForeignKey(d => d.Idaddclassification2)
            //        .HasConstraintName("FK_seller_addclassification2");

            //    entity.HasOne(d => d.Idaddclassification3Navigation)
            //        .WithMany(p => p.SellerIdaddclassification3Navigations)
            //        .HasForeignKey(d => d.Idaddclassification3)
            //        .HasConstraintName("FK_seller_addclassification3");

            //    entity.HasOne(d => d.Idaddclassification4Navigation)
            //        .WithMany(p => p.SellerIdaddclassification4Navigations)
            //        .HasForeignKey(d => d.Idaddclassification4)
            //        .HasConstraintName("FK_seller_addclassification4");

            //    entity.HasOne(d => d.Idaddclassification5Navigation)
            //        .WithMany(p => p.SellerIdaddclassification5Navigations)
            //        .HasForeignKey(d => d.Idaddclassification5)
            //        .HasConstraintName("FK_seller_addclassification5");

            //    entity.HasOne(d => d.IdsellergroupNavigation)
            //        .WithMany(p => p.Sellers)
            //        .HasForeignKey(d => d.Idsellergroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_seller_sellergroup");
            //});

            //modelBuilder.Entity<Sellerdestanation>(entity =>
            //{
            //    entity.HasKey(e => e.Idsellerdestanation);

            //    entity.ToTable("sellerdestanation");

            //    entity.HasIndex(e => e.Iddestanation, "idx_sellerdestanation_iddestanation");

            //    entity.HasIndex(e => e.Idseller, "idx_sellerdestanation_idseller");

            //    entity.Property(e => e.Idsellerdestanation)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsellerdestanation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Sellerdestanations)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_sellerdestanation_destanation");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Sellerdestanations)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_sellerdestanation_seller");
            //});

            //modelBuilder.Entity<Sellergrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idsellergrant);

            //    entity.ToTable("sellergrant");

            //    entity.Property(e => e.Idsellergrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsellergrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grant).HasColumnName("grant");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");
            //});

            //modelBuilder.Entity<Sellergroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsellergroup);

            //    entity.ToTable("sellergroup");

            //    entity.HasIndex(e => e.Guid, "UQ__sellergroup__171A1207")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_sellergroup_parentid");

            //    entity.Property(e => e.Idsellergroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsellergroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Sellerpricechange>(entity =>
            //{
            //    entity.HasKey(e => e.Idsellerpricechange);

            //    entity.ToTable("sellerpricechange");

            //    entity.HasIndex(e => e.Idpricechange, "idx_sellerpricechange_idpricechange");

            //    entity.HasIndex(e => e.Idseller, "idx_sellerpricechange_idseller");

            //    entity.Property(e => e.Idsellerpricechange)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsellerpricechange");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Enddate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("enddate");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(18, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1crypt).HasColumnName("price1crypt");

            //    entity.Property(e => e.Startdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("startdate");

            //    entity.HasOne(d => d.IdpricechangeNavigation)
            //        .WithMany(p => p.Sellerpricechanges)
            //        .HasForeignKey(d => d.Idpricechange)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_sellerpricechange_pricechange");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Sellerpricechanges)
            //        .HasForeignKey(d => d.Idseller)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_sellerpricechange_sellerpricechange");
            //});

            //modelBuilder.Entity<Servicedepartment>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedepartment);

            //    entity.ToTable("servicedepartment");

            //    entity.HasIndex(e => e.Iddepartment, "idx_servicedepartment_iddepartment");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_servicedepartment_idservicedoc");

            //    entity.Property(e => e.Idservicedepartment)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedepartment");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 3)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 3)")
            //        .HasColumnName("smbase");

            //    entity.HasOne(d => d.IddepartmentNavigation)
            //        .WithMany(p => p.Servicedepartments)
            //        .HasForeignKey(d => d.Iddepartment)
            //        .HasConstraintName("FK_servicedepartment_department");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Servicedepartments)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .HasConstraintName("FK_servicedepartment_servicedoc");
            //});

            //modelBuilder.Entity<Servicedepartmentperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedepartmentpeople);

            //    entity.ToTable("servicedepartmentpeople");

            //    entity.HasIndex(e => e.Idpeople, "idx_servicedepartmentpeople_idpeople");

            //    entity.HasIndex(e => e.Idservicedepartment, "idx_servicedepartmentpeople_idservicedepartment");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_servicedepartmentpeople_idservicedoc");

            //    entity.Property(e => e.Idservicedepartmentpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedepartmentpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedepartment).HasColumnName("idservicedepartment");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Perc).HasColumnName("perc");

            //    entity.Property(e => e.Smbase).HasColumnName("smbase");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Servicedepartmentpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_servicedepartmentpeople_people");

            //    entity.HasOne(d => d.IdservicedepartmentNavigation)
            //        .WithMany(p => p.Servicedepartmentpeople)
            //        .HasForeignKey(d => d.Idservicedepartment)
            //        .HasConstraintName("FK_servicedepartmentpeople_servicedepartment");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Servicedepartmentpeople)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedepartmentpeople_servicedoc");
            //});

            //modelBuilder.Entity<Servicedoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedoc);

            //    entity.ToTable("servicedoc");

            //    entity.HasIndex(e => e.Idaddress, "idx_servicedoc_idaddress");

            //    entity.HasIndex(e => e.Iddepartment, "idx_servicedoc_iddepartment");

            //    entity.HasIndex(e => e.Iddestanation, "idx_servicedoc_iddestanation");

            //    entity.HasIndex(e => e.Iddocstate, "idx_servicedoc_iddocstate");

            //    entity.HasIndex(e => e.Idorder, "idx_servicedoc_idorder");

            //    entity.HasIndex(e => e.Idorderdest, "idx_servicedoc_idorderdest");

            //    entity.HasIndex(e => e.Idservicedocgroup, "idx_servicedoc_idservicedocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_servicedoc_parentid");

            //    entity.Property(e => e.Idservicedoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedoc");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress)
            //        .HasColumnName("idaddress")
            //        .HasComment("Ссылка на адрес в справочнике адресов");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddepartment)
            //        .HasColumnName("iddepartment")
            //        .HasComment("Ссылка на виновное подразделение");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderdest)
            //        .HasColumnName("idorderdest")
            //        .HasComment("Ссылка на заказ-результат");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedocgroup).HasColumnName("idservicedocgroup");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Документ-родитель");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Resolution)
            //        .IsUnicode(false)
            //        .HasColumnName("resolution");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Servicedocs)
            //        .HasForeignKey(d => d.Idaddress)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedoc_address");

            //    entity.HasOne(d => d.IddepartmentNavigation)
            //        .WithMany(p => p.Servicedocs)
            //        .HasForeignKey(d => d.Iddepartment)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedoc_department");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Servicedocs)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .HasConstraintName("FK_servicedoc_destanation");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Servicedocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_servicedoc_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.ServicedocIdorderNavigations)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedoc_orders");

            //    entity.HasOne(d => d.IdorderdestNavigation)
            //        .WithMany(p => p.ServicedocIdorderdestNavigations)
            //        .HasForeignKey(d => d.Idorderdest)
            //        .HasConstraintName("FK_servicedoc_ordersdest");

            //    entity.HasOne(d => d.IdservicedocgroupNavigation)
            //        .WithMany(p => p.Servicedocs)
            //        .HasForeignKey(d => d.Idservicedocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedoc_servicedocgroup");
            //});

            //modelBuilder.Entity<Servicedocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedocdiraction);

            //    entity.ToTable("servicedocdiraction");

            //    entity.HasComment("Этапы документа \"Сервис и гарантия\"");

            //    entity.HasIndex(e => e.Iddiraction, "idx_servicedocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeopleexec, "idx_servicedocdiraction_idpeopleexec");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_servicedocdiraction_idservicedoc");

            //    entity.Property(e => e.Idservicedocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedocdiraction")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий к этапу");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Дата удаления этапа");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasComment("Дата создания этапа");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата редактирования этапа");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate")
            //        .HasComment("Фактическая дата выполнения этапа");

            //    entity.Property(e => e.Iddiraction)
            //        .HasColumnName("iddiraction")
            //        .HasComment("Ссылка на этап");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Сотрудник создавший этап");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Сотрудник редактировавший этап");

            //    entity.Property(e => e.Idpeopleexec)
            //        .HasColumnName("idpeopleexec")
            //        .HasComment("Исполнитель этапа");

            //    entity.Property(e => e.Idservicedoc)
            //        .HasColumnName("idservicedoc")
            //        .HasComment("Ссылка на документ сервиса");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate")
            //        .HasComment("Плановая дата выполнения этапа");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Servicedocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedocdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleexecNavigation)
            //        .WithMany(p => p.Servicedocdiractions)
            //        .HasForeignKey(d => d.Idpeopleexec)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedocdiraction_people");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Servicedocdiractions)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedocdiraction_servicedoc");
            //});

            //modelBuilder.Entity<Servicedocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedocgroup);

            //    entity.ToTable("servicedocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_servicedocgroup_parentid");

            //    entity.Property(e => e.Idservicedocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Servicedocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedocpos);

            //    entity.ToTable("servicedocpos");

            //    entity.HasIndex(e => e.Idorderitem, "idx_servicedocpos_idorderitem");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_servicedocpos_idservicedoc");

            //    entity.HasIndex(e => e.Idservicereason, "idx_servicedocpos_idservicereason");

            //    entity.Property(e => e.Idservicedocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedocpos");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addstr1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Servicedocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedocpos_orderitem");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Servicedocpos)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedocpos_servicedoc");

            //    entity.HasOne(d => d.IdservicereasonNavigation)
            //        .WithMany(p => p.Servicedocpos)
            //        .HasForeignKey(d => d.Idservicereason)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedocpos_servicereason");
            //});

            //modelBuilder.Entity<Servicedocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicedocsign);

            //    entity.ToTable("servicedocsign");

            //    entity.HasIndex(e => e.Idorderitem, "idx_servicedocsign_idorderitem");

            //    entity.HasIndex(e => e.Idpeople, "idx_servicedocsign_idpeople");

            //    entity.HasIndex(e => e.Idservicedoc, "idx_servicedocsign_idservicedoc");

            //    entity.HasIndex(e => e.Idsign, "idx_servicedocsign_idsign");

            //    entity.Property(e => e.Idservicedocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicedocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Servicedocsigns)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .HasConstraintName("FK_servicedocsign_servicedocpos");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Servicedocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedocsign_people");

            //    entity.HasOne(d => d.IdservicedocNavigation)
            //        .WithMany(p => p.Servicedocsigns)
            //        .HasForeignKey(d => d.Idservicedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicedocsign_servicedoc");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Servicedocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_servicedocsign_sign");
            //});

            //modelBuilder.Entity<Servicereason>(entity =>
            //{
            //    entity.HasKey(e => e.Idservicereason);

            //    entity.ToTable("servicereason");

            //    entity.HasIndex(e => e.Idpeople, "idx_servicereason_idpeople");

            //    entity.Property(e => e.Idservicereason)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idservicereason");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Reasoncode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("reasoncode");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Servicereasons)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_servicereason_people");
            //});

            //modelBuilder.Entity<Setting>(entity =>
            //{
            //    entity.HasKey(e => e.Idsetting)
            //        .HasName("setting_pkey");

            //    entity.ToTable("setting");

            //    entity.HasIndex(e => e.Guid, "UQ__setting__72DCB191")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idsettinggroup, "idx_setting_idsettinggroup");

            //    entity.HasIndex(e => e.Name, "idx_setting_name");

            //    entity.Property(e => e.Idsetting)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsetting");

            //    entity.Property(e => e.Addmodel)
            //        .HasColumnName("addmodel")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Addorder)
            //        .HasColumnName("addorder")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Blbvalue).HasColumnName("blbvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Commentcrypt).HasColumnName("commentcrypt");

            //    entity.Property(e => e.Customtable).HasColumnName("customtable");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idsettinggroup).HasColumnName("idsettinggroup");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Namecrypt).HasColumnName("namecrypt");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvaluecrypt).HasColumnName("strvaluecrypt");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");

            //    entity.Property(e => e.Txtvaluecrypt).HasColumnName("txtvaluecrypt");

            //    entity.HasOne(d => d.IdsettinggroupNavigation)
            //        .WithMany(p => p.Settings)
            //        .HasForeignKey(d => d.Idsettinggroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_setting_settinggroup");
            //});

            //modelBuilder.Entity<SettingMovement>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("setting_movement");

            //    entity.HasIndex(e => new { e.Idgoodtype2, e.Store, e.StoreSource, e.Iddocoper, e.Id }, "ClusteredIndex-20161222-145859")
            //        .IsUnique()
            //        .IsClustered();

            //    entity.Property(e => e.Filter)
            //        .HasColumnName("filter")
            //        .HasComment("номер \"фильтра\", группа ограничений на перемещение");

            //    entity.Property(e => e.Id)
            //        .ValueGeneratedOnAdd()
            //        .HasColumnName("id");

            //    entity.Property(e => e.Iddocoper).HasComment("Вид ПЗ");

            //    entity.Property(e => e.Idgoodtype2).HasComment("Тип материала 2й");

            //    entity.Property(e => e.Store)
            //        .HasColumnName("store")
            //        .HasComment("Склад получатель");

            //    entity.Property(e => e.StoreSource)
            //        .HasColumnName("store_source")
            //        .HasComment("Склад источник");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_setting_movement_docoper");

            //    entity.HasOne(d => d.Idgoodtype2Navigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idgoodtype2)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_setting_movement_goodtype");

            //    entity.HasOne(d => d.StoreNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Store)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_setting_movement_storedepart");

            //    entity.HasOne(d => d.StoreSourceNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.StoreSource)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_setting_movement_storedepart1");
            //});

            //modelBuilder.Entity<SettingOld>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("setting_old");

            //    entity.Property(e => e.Pk).HasColumnName("pk");

            //    entity.Property(e => e.Tt)
            //        .HasColumnType("text")
            //        .HasColumnName("tt");

            //    entity.Property(e => e.Ttc3)
            //        .HasColumnType("text")
            //        .HasColumnName("ttc3");
            //});

            //modelBuilder.Entity<Settingchange>(entity =>
            //{
            //    entity.HasKey(e => e.Idsettingchanges);

            //    entity.ToTable("settingchanges");

            //    entity.Property(e => e.Idsettingchanges)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsettingchanges");

            //    entity.Property(e => e.Addmodel).HasColumnName("addmodel");

            //    entity.Property(e => e.Addorder).HasColumnName("addorder");

            //    entity.Property(e => e.Blbvalue).HasColumnName("blbvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Commentcrypt).HasColumnName("commentcrypt");

            //    entity.Property(e => e.Customtable).HasColumnName("customtable");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeoplechanged).HasColumnName("idpeoplechanged");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Idsettinggroup).HasColumnName("idsettinggroup");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Namecrypt).HasColumnName("namecrypt");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvaluecrypt).HasColumnName("strvaluecrypt");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");

            //    entity.Property(e => e.Txtvaluecrypt).HasColumnName("txtvaluecrypt");
            //});

            //modelBuilder.Entity<Settinggroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsettinggroup);

            //    entity.ToTable("settinggroup");

            //    entity.HasIndex(e => e.Guid, "UQ__settinggroup__116138B1")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_settinggroup_parentid");

            //    entity.Property(e => e.Idsettinggroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsettinggroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Shtapikgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idshtapikgroup);

            //    entity.ToTable("shtapikgroup");

            //    entity.Property(e => e.Idshtapikgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshtapikgroup");

            //    entity.Property(e => e.Allowthickness)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("allowthickness");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Inside).HasColumnName("inside");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Outside).HasColumnName("outside");
            //});

            //modelBuilder.Entity<Shtapikgroupdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idshtapikgroupdetail);

            //    entity.ToTable("shtapikgroupdetail");

            //    entity.HasIndex(e => e.Iderror, "idx_shtapikgroupdetail_iderror");

            //    entity.HasIndex(e => e.Idgood, "idx_shtapikgroupdetail_idgood");

            //    entity.HasIndex(e => e.Idshtapikgroup, "idx_shtapikgroupdetail_idshtapikgroup");

            //    entity.HasIndex(e => e.Idworkoper, "idx_shtapikgroupdetail_idworkoper");

            //    entity.Property(e => e.Idshtapikgroupdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshtapikgroupdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idshtapikgroup).HasColumnName("idshtapikgroup");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.Property(e => e.Thick)
            //        .HasColumnType("numeric(4, 2)")
            //        .HasColumnName("thick");

            //    entity.Property(e => e.Thick2)
            //        .HasColumnType("numeric(4, 2)")
            //        .HasColumnName("thick2");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Shtapikgroupdetails)
            //        .HasForeignKey(d => d.Iderror)
            //        .HasConstraintName("FK_shtapikgroupdetail_iderror");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Shtapikgroupdetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_shtapikgroupdetail_good");

            //    entity.HasOne(d => d.IdshtapikgroupNavigation)
            //        .WithMany(p => p.Shtapikgroupdetails)
            //        .HasForeignKey(d => d.Idshtapikgroup)
            //        .HasConstraintName("FK_shtapikgroupdetail_shtapikgroup");

            //    entity.HasOne(d => d.IdworkoperNavigation)
            //        .WithMany(p => p.Shtapikgroupdetails)
            //        .HasForeignKey(d => d.Idworkoper)
            //        .HasConstraintName("FK_shtapikgroupdetail_idworkoper");
            //});

            //modelBuilder.Entity<Shtapikgroupparamdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idshtapikgroupparamdetail);

            //    entity.ToTable("shtapikgroupparamdetail");

            //    entity.HasIndex(e => e.Idcolor, "idx_shtapikgroupparamdetail_idcolor");

            //    entity.HasIndex(e => e.Idcoloraccordance, "idx_shtapikgroupparamdetail_idcoloraccordance");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_shtapikgroupparamdetail_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_shtapikgroupparamdetail_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idshtapikgroupdetail, "idx_shtapikgroupparamdetail_idshtapikgroupdetail");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_shtapikgroupparamdetail_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_shtapikgroupparamdetail_idvariantparamtypevalue");

            //    entity.Property(e => e.Idshtapikgroupparamdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshtapikgroupparamdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idcoloraccordance).HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idshtapikgroupdetail).HasColumnName("idshtapikgroupdetail");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_color");

            //    entity.HasOne(d => d.IdcoloraccordanceNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idcoloraccordance)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_coloraccordance");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_constructiontype");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_modelparamvalue");

            //    entity.HasOne(d => d.IdshtapikgroupdetailNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idshtapikgroupdetail)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_shtapikgroupdetail");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variantparam_shtapikgroupparamtypedetail");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Shtapikgroupparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .HasConstraintName("FK_shtapikgroupparamdetail_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Shtapikgroupprofile>(entity =>
            //{
            //    entity.HasKey(e => e.Idshtapikgroupprofile);

            //    entity.ToTable("shtapikgroupprofile");

            //    entity.HasIndex(e => e.Idinsertion, "idx_shtapikgroupprofile_idinsertion");

            //    entity.HasIndex(e => e.Idshtapikgroup, "idx_shtapikgroupprofile_idshtapikgroup");

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_shtapikgroupprofile_idsystemdetail");

            //    entity.Property(e => e.Idshtapikgroupprofile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idshtapikgroupprofile");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idinsertion).HasColumnName("idinsertion");

            //    entity.Property(e => e.Idshtapikgroup).HasColumnName("idshtapikgroup");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Size)
            //        .HasColumnType("numeric(6, 2)")
            //        .HasColumnName("size");

            //    entity.HasOne(d => d.IdinsertionNavigation)
            //        .WithMany(p => p.Shtapikgroupprofiles)
            //        .HasForeignKey(d => d.Idinsertion)
            //        .HasConstraintName("FK_shtapikgroupprofile_insertion");

            //    entity.HasOne(d => d.IdshtapikgroupNavigation)
            //        .WithMany(p => p.Shtapikgroupprofiles)
            //        .HasForeignKey(d => d.Idshtapikgroup)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_shtapikgroupprofile_shtapikgroup");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.Shtapikgroupprofiles)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .HasConstraintName("FK_shtapikgroupprofile_systemdetail");
            //});

            //modelBuilder.Entity<Sign>(entity =>
            //{
            //    entity.HasKey(e => e.Idsign)
            //        .HasName("pk_sing");

            //    entity.ToTable("sign");

            //    entity.HasIndex(e => e.Guid, "UQ__sign__414555FD")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idsigngroup, "idx_sign_idsigngroup");

            //    entity.Property(e => e.Idsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idsigngroup).HasColumnName("idsigngroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdsigngroupNavigation)
            //        .WithMany(p => p.Signs)
            //        .HasForeignKey(d => d.Idsigngroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sign_signgroup");
            //});

            //modelBuilder.Entity<Signgrant>(entity =>
            //{
            //    entity.HasKey(e => e.Idsigngrant);

            //    entity.ToTable("signgrant");

            //    entity.HasIndex(e => e.Iddocoper, "idx_signgrant_iddocoper");

            //    entity.HasIndex(e => e.Idpeoplegroup, "idx_signgrant_idpeoplegroup");

            //    entity.HasIndex(e => e.Idsign, "idx_signgrant_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_signgrant_idsignvalue");

            //    entity.Property(e => e.Idsigngrant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsigngrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Isadd).HasColumnName("isadd");

            //    entity.Property(e => e.Isedit)
            //        .HasColumnName("isedit")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Iseditcomment).HasColumnName("iseditcomment");

            //    entity.Property(e => e.Iseditint).HasColumnName("iseditint");

            //    entity.Property(e => e.Iseditstr).HasColumnName("iseditstr");

            //    entity.Property(e => e.Isremove).HasColumnName("isremove");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Signgrants)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_signgrant_docoper");

            //    entity.HasOne(d => d.IdpeoplegroupNavigation)
            //        .WithMany(p => p.Signgrants)
            //        .HasForeignKey(d => d.Idpeoplegroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_signgrant_peoplegroup");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Signgrants)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_signgrant_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Signgrants)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_signgrant_signvalue");
            //});

            //modelBuilder.Entity<Signgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsigngroup);

            //    entity.ToTable("signgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__signgroup__0BA85F5B")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_signgroup_parentid");

            //    entity.Property(e => e.Idsigngroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsigngroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Signvalue>(entity =>
            //{
            //    entity.HasKey(e => e.Idsignvalue)
            //        .HasName("pk_signvalue");

            //    entity.ToTable("signvalue");

            //    entity.HasIndex(e => e.Guid, "UQ__signvalue__3F5D0D8B")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idsign, "idx_signvalue_idsign");

            //    entity.Property(e => e.Idsignvalue)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsignvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Signvalues)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("signvalue_fk");
            //});

            //modelBuilder.Entity<Sizedoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedoc);

            //    entity.ToTable("sizedoc");

            //    entity.HasIndex(e => e.Guid, "UQ__sizedoc__7C661BCB")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idaddress, "idx_sizedoc_idaddress");

            //    entity.HasIndex(e => e.Idcustomer, "idx_sizedoc_idcustomer");

            //    entity.HasIndex(e => e.Iddestanation, "idx_sizedoc_iddestanation");

            //    entity.HasIndex(e => e.Iddocoper, "idx_sizedoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_sizedoc_iddocstate");

            //    entity.HasIndex(e => e.Idorder, "idx_sizedoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_sizedoc_idpeople");

            //    entity.HasIndex(e => e.Idpeople2, "idx_sizedoc_idpeople2");

            //    entity.HasIndex(e => e.Idsizedocgroup, "idx_sizedoc_idsizedocgroup");

            //    entity.Property(e => e.Idsizedoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address")
            //        .HasComment("Текстовый адрес");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .IsUnicode(false)
            //        .HasColumnName("contact")
            //        .HasComment("Контактное лицо(например хомяк)");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre")
            //        .HasComment("Дата создания");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата изменения");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idaddress)
            //        .HasColumnName("idaddress")
            //        .HasComment("Ссылка на адрес");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeoplecreate)
            //        .HasColumnName("idpeoplecreate")
            //        .HasComment("Демиург");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Искуситель");

            //    entity.Property(e => e.Idsizedocgroup).HasColumnName("idsizedocgroup");

            //    entity.Property(e => e.Isordered).HasColumnName("isordered");

            //    entity.Property(e => e.Isover).HasColumnName("isover");

            //    entity.Property(e => e.Isplaned).HasColumnName("isplaned");

            //    entity.Property(e => e.Isredirect).HasColumnName("isredirect");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Phone)
            //        .IsUnicode(false)
            //        .HasColumnName("phone")
            //        .HasComment("Телефон");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Speackerphone)
            //        .IsUnicode(false)
            //        .HasColumnName("speackerphone")
            //        .HasComment("Домофон");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.HasOne(d => d.IdaddressNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Idaddress)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedoc_address");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedoc_customer");

            //    entity.HasOne(d => d.IddestanationNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Iddestanation)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedoc_destanation");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_sizedoc_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedoc_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedoc_people");

            //    entity.HasOne(d => d.IdsizedocgroupNavigation)
            //        .WithMany(p => p.Sizedocs)
            //        .HasForeignKey(d => d.Idsizedocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedoc_sizedocgroup");
            //});

            //modelBuilder.Entity<Sizedocconstrtype>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedocconstrtype)
            //        .HasName("PK_sizedocconstruction");

            //    entity.ToTable("sizedocconstrtype");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_sizedocconstrtype_idconstructiontype");

            //    entity.HasIndex(e => e.Idembrasuretype, "idx_sizedocconstrtype_idembrasuretype");

            //    entity.HasIndex(e => e.Idproductiontype, "idx_sizedocconstrtype_idproductiontype");

            //    entity.HasIndex(e => e.Idsizedoc, "idx_sizedocconstrtype_idsizedoc");

            //    entity.Property(e => e.Idsizedocconstrtype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedocconstrtype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idembrasuretype).HasColumnName("idembrasuretype");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Numpos)
            //        .HasColumnName("numpos")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Sizedocconstrtypes)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedocconstruction_constructiontype");

            //    entity.HasOne(d => d.IdembrasuretypeNavigation)
            //        .WithMany(p => p.Sizedocconstrtypes)
            //        .HasForeignKey(d => d.Idembrasuretype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_sizedocconstrtype_embrasuretype");

            //    entity.HasOne(d => d.IdproductiontypeNavigation)
            //        .WithMany(p => p.Sizedocconstrtypes)
            //        .HasForeignKey(d => d.Idproductiontype)
            //        .HasConstraintName("FK_sizedocconstrtype_productiontype");

            //    entity.HasOne(d => d.IdsizedocNavigation)
            //        .WithMany(p => p.Sizedocconstrtypes)
            //        .HasForeignKey(d => d.Idsizedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocconstruction_sizedoc");
            //});

            //modelBuilder.Entity<Sizedocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedocdiraction);

            //    entity.ToTable("sizedocdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_sizedocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_sizedocdiraction_idpeople");

            //    entity.HasIndex(e => e.Idpeopleedit, "idx_sizedocdiraction_idpeopleedit");

            //    entity.HasIndex(e => e.Idpeopleexec, "idx_sizedocdiraction_idpeopleexec");

            //    entity.HasIndex(e => e.Idsizedoc, "idx_sizedocdiraction_idsizedoc");

            //    entity.Property(e => e.Idsizedocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate")
            //        .HasComment("Дата создания этапа");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit")
            //        .HasComment("Дата редактирования этапа");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople)
            //        .HasColumnName("idpeople")
            //        .HasComment("Пользователь, создавший этап");

            //    entity.Property(e => e.Idpeopleedit)
            //        .HasColumnName("idpeopleedit")
            //        .HasComment("Пользователь, редактировавший этап");

            //    entity.Property(e => e.Idpeopleexec)
            //        .HasColumnName("idpeopleexec")
            //        .HasComment("Исполнитель этапа");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Sizedocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.SizedocdiractionIdpeopleNavigations)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_sizedocdiraction_people");

            //    entity.HasOne(d => d.IdpeopleeditNavigation)
            //        .WithMany(p => p.SizedocdiractionIdpeopleeditNavigations)
            //        .HasForeignKey(d => d.Idpeopleedit)
            //        .HasConstraintName("FK_sizedocdiraction_people1");

            //    entity.HasOne(d => d.IdpeopleexecNavigation)
            //        .WithMany(p => p.SizedocdiractionIdpeopleexecNavigations)
            //        .HasForeignKey(d => d.Idpeopleexec)
            //        .HasConstraintName("FK_sizedocdiraction_people2");

            //    entity.HasOne(d => d.IdsizedocNavigation)
            //        .WithMany(p => p.Sizedocdiractions)
            //        .HasForeignKey(d => d.Idsizedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocdiraction_sizedoc");
            //});

            //modelBuilder.Entity<Sizedocdiractionperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedocdiractionpeople);

            //    entity.ToTable("sizedocdiractionpeople");

            //    entity.HasIndex(e => e.Idpeople, "idx_sizedocdiractionpeople_idpeople");

            //    entity.HasIndex(e => e.Idsizedocdiraction, "idx_sizedocdiractionpeople_idsizedocdiraction");

            //    entity.Property(e => e.Idsizedocdiractionpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocdiraction).HasColumnName("idsizedocdiraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Sizedocdiractionpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_sizedocdiractionpeople_people");

            //    entity.HasOne(d => d.IdsizedocdiractionNavigation)
            //        .WithMany(p => p.Sizedocdiractionpeople)
            //        .HasForeignKey(d => d.Idsizedocdiraction)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocdiractionpeople_sizedocdiraction");
            //});

            //modelBuilder.Entity<Sizedocfile>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedocfile);

            //    entity.ToTable("sizedocfile");

            //    entity.HasIndex(e => e.Idsizedoc, "idx_sizedocfile_idsizedoc");

            //    entity.Property(e => e.Idsizedocfile)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedocfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtfile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfile");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");

            //    entity.HasOne(d => d.IdsizedocNavigation)
            //        .WithMany(p => p.Sizedocfiles)
            //        .HasForeignKey(d => d.Idsizedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocfile_sizedocfile");
            //});

            //modelBuilder.Entity<Sizedocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsizedocgroup);

            //    entity.ToTable("sizedocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_sizedocgroup_parentid");

            //    entity.Property(e => e.Idsizedocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsizedocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Sizedocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("sizedocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocsign).HasColumnName("idsizedocsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_sizedocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idsign)
            //        .HasConstraintName("FK_sizedocsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_sizedocsign_signvalue");

            //    entity.HasOne(d => d.IdsizedocNavigation)
            //        .WithMany()
            //        .HasForeignKey(d => d.Idsizedoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sizedocsign_sizedoc");
            //});

            //modelBuilder.Entity<Sourceinfo>(entity =>
            //{
            //    entity.HasKey(e => e.Idsourceinfo);

            //    entity.ToTable("sourceinfo");

            //    entity.HasComment("Справочник иточников информации");

            //    entity.HasIndex(e => e.Idsourceinfogroup, "idx_sourceinfo_idsourceinfogroup");

            //    entity.Property(e => e.Idsourceinfo)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsourceinfo")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удалённости");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idsourceinfogroup)
            //        .HasColumnName("idsourceinfogroup")
            //        .HasComment("Ссылка на группу");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.HasOne(d => d.IdsourceinfogroupNavigation)
            //        .WithMany(p => p.Sourceinfos)
            //        .HasForeignKey(d => d.Idsourceinfogroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_sourceinfo_sourceinfogroup");
            //});

            //modelBuilder.Entity<Sourceinfogroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsourceinfogroup);

            //    entity.ToTable("sourceinfogroup");

            //    entity.HasComment("Группы источников информации");

            //    entity.HasIndex(e => e.Parentid, "idx_sourceinfogroup_parentid");

            //    entity.Property(e => e.Idsourceinfogroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsourceinfogroup")
            //        .HasComment("Первичный ключ");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment")
            //        .HasComment("Комментарий");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted")
            //        .HasComment("Признак удалённости");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive)
            //        .HasColumnName("isactive")
            //        .HasComment("Активность группы");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name")
            //        .HasComment("Наименование");

            //    entity.Property(e => e.Parentid)
            //        .HasColumnName("parentid")
            //        .HasComment("Ссылка на родителя");
            //});

            //modelBuilder.Entity<Storagespace>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoragespace);

            //    entity.ToTable("storagespace");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_storagespace_idstoredepart");

            //    entity.Property(e => e.Idstoragespace)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoragespace");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("cell");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.MaxHeight).HasColumnName("max_height");

            //    entity.Property(e => e.MaxWidth).HasColumnName("max_width");

            //    entity.Property(e => e.MinHeight).HasColumnName("min_height");

            //    entity.Property(e => e.MinWidth).HasColumnName("min_width");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Storagespaces)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_storagespace_storedepart");
            //});

            //modelBuilder.Entity<Storedepart>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredepart)
            //        .HasName("storedepart_pkey");

            //    entity.ToTable("storedepart");

            //    entity.HasIndex(e => e.Idavailabilitygroup, "idx_storedepart_idavailabilitygroup");

            //    entity.HasIndex(e => e.Idpeople, "idx_storedepart_idpeople");

            //    entity.HasIndex(e => e.Idproductionsite, "idx_storedepart_idproductionsite");

            //    entity.Property(e => e.Idstoredepart)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredepart");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Departgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("departgroup");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idavailabilitygroup).HasColumnName("idavailabilitygroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdavailabilitygroupNavigation)
            //        .WithMany(p => p.Storedeparts)
            //        .HasForeignKey(d => d.Idavailabilitygroup)
            //        .HasConstraintName("FK_storedepart_availabilitygroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Storedeparts)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_storedepart_people");

            //    entity.HasOne(d => d.IdproductionsiteNavigation)
            //        .WithMany(p => p.Storedeparts)
            //        .HasForeignKey(d => d.Idproductionsite)
            //        .HasConstraintName("FK_storedepart_productionsite");
            //});

            //modelBuilder.Entity<Storedepartdocoper>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredepartdocoper);

            //    entity.ToTable("storedepartdocoper");

            //    entity.HasIndex(e => e.Iddocoper, "idx_storedepartdocoper_iddocoper");

            //    entity.HasIndex(e => e.Idstoredepart, "idx_storedepartdocoper_idstoredepart");

            //    entity.Property(e => e.Idstoredepartdocoper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredepartdocoper");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Storedepartdocopers)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .HasConstraintName("FK_storedepartdocoper_docoper");

            //    entity.HasOne(d => d.IdstoredepartNavigation)
            //        .WithMany(p => p.Storedepartdocopers)
            //        .HasForeignKey(d => d.Idstoredepart)
            //        .HasConstraintName("FK_storedepartdocoper_storedepart");
            //});

            //modelBuilder.Entity<Storedepartrel>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredepartrel);

            //    entity.ToTable("storedepartrel");

            //    entity.HasIndex(e => e.Idstoredepartchild, "idx_storedepartrel_idstoredepartchild");

            //    entity.HasIndex(e => e.Idstoredepartparent, "idx_storedepartrel_idstoredepartparent");

            //    entity.Property(e => e.Idstoredepartrel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredepartrel");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idstoredepartchild).HasColumnName("idstoredepartchild");

            //    entity.Property(e => e.Idstoredepartparent).HasColumnName("idstoredepartparent");

            //    entity.HasOne(d => d.IdstoredepartchildNavigation)
            //        .WithMany(p => p.StoredepartrelIdstoredepartchildNavigations)
            //        .HasForeignKey(d => d.Idstoredepartchild)
            //        .HasConstraintName("FK_storedepartrelchild_storedepart");

            //    entity.HasOne(d => d.IdstoredepartparentNavigation)
            //        .WithMany(p => p.StoredepartrelIdstoredepartparentNavigations)
            //        .HasForeignKey(d => d.Idstoredepartparent)
            //        .HasConstraintName("FK_storedepartrelparent_storedepart");
            //});

            //modelBuilder.Entity<Storedoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredoc)
            //        .HasName("storedoc_pkey");

            //    entity.ToTable("storedoc");

            //    entity.HasIndex(e => e.Dtcre, "idx_storedoc_dtcre");

            //    entity.HasIndex(e => e.Idcustomer, "idx_storedoc_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_storedoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_storedoc_iddocstate");

            //    entity.HasIndex(e => e.Idorder, "idx_storedoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_storedoc_idpeople");

            //    entity.HasIndex(e => e.Idseller, "idx_storedoc_idseller");

            //    entity.HasIndex(e => e.Idstoredepart1, "idx_storedoc_idstoredepart1");

            //    entity.HasIndex(e => e.Idstoredepart2, "idx_storedoc_idstoredepart2");

            //    entity.HasIndex(e => e.Idstoredocgroup, "idx_storedoc_idstoredocgroup");

            //    entity.Property(e => e.Idstoredoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idstoredepart1).HasColumnName("idstoredepart1");

            //    entity.Property(e => e.Idstoredepart2).HasColumnName("idstoredepart2");

            //    entity.Property(e => e.Idstoredocgroup).HasColumnName("idstoredocgroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Outdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("outdate");

            //    entity.Property(e => e.Outname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("outname");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Reg).HasColumnName("reg");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Withnds).HasColumnName("withnds");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_storedoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_storedoc_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .HasConstraintName("FK_storedoc_orders");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_storedoc_people");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_storedoc_seller");

            //    entity.HasOne(d => d.Idstoredepart1Navigation)
            //        .WithMany(p => p.StoredocIdstoredepart1Navigations)
            //        .HasForeignKey(d => d.Idstoredepart1)
            //        .HasConstraintName("storedoc_fk3");

            //    entity.HasOne(d => d.Idstoredepart2Navigation)
            //        .WithMany(p => p.StoredocIdstoredepart2Navigations)
            //        .HasForeignKey(d => d.Idstoredepart2)
            //        .HasConstraintName("storedoc_fk4");

            //    entity.HasOne(d => d.IdstoredocgroupNavigation)
            //        .WithMany(p => p.Storedocs)
            //        .HasForeignKey(d => d.Idstoredocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("storedoc_fk2");
            //});

            //modelBuilder.Entity<Storedocbarcode>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredocbarcode)
            //        .HasName("PK__storedoc__C8376169E5763790");

            //    entity.ToTable("storedocbarcode");

            //    entity.Property(e => e.Idstoredocbarcode)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredocbarcode");

            //    entity.Property(e => e.Listidstordedoc)
            //        .IsUnicode(false)
            //        .HasColumnName("listidstordedoc");
            //});

            //modelBuilder.Entity<Storedocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredocgroup)
            //        .HasName("storedocgroup_pkey");

            //    entity.ToTable("storedocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_storedocgroup_parentid");

            //    entity.Property(e => e.Idstoredocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Storedocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredocpos)
            //        .HasName("storedocpos_pkey");

            //    entity.ToTable("storedocpos");

            //    entity.HasIndex(e => e.Idgood, "idx_storedocpos_idgood");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_storedocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idorderitem, "idx_storedocpos_idorderitem");

            //    entity.HasIndex(e => e.Idproductiondocpos, "idx_storedocpos_idproductiondocpos");

            //    entity.HasIndex(e => e.Idsupplydocpos, "idx_storedocpos_idsupplydocpos");

            //    entity.HasIndex(e => new { e.Idstoredoc, e.Deleted, e.Qustore }, "ix_da_storedocpos_idstoredoc_deleted_qustore_includes");

            //    entity.HasIndex(e => e.Idstoredoc, "ix_da_storedocpos_idstoredoc_includes");

            //    entity.HasIndex(e => e.Parentid, "ix_storedocpos_parentid_includes")
            //        .HasFillFactor(100);

            //    entity.Property(e => e.Idstoredocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredocpos");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Color1).HasColumnName("color1");

            //    entity.Property(e => e.Color2).HasColumnName("color2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgood2).HasColumnName("idgood2");

            //    entity.Property(e => e.Idgoodmeasure).HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idproductiondocpos).HasColumnName("idproductiondocpos");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idsupplydocpos).HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Pricebasends)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebasends");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Row).HasColumnName("row");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.Idcolor1Navigation)
            //        .WithMany(p => p.StoredocpoIdcolor1Navigations)
            //        .HasForeignKey(d => d.Idcolor1)
            //        .HasConstraintName("FK_storedocpos_color1");

            //    entity.HasOne(d => d.Idcolor2Navigation)
            //        .WithMany(p => p.StoredocpoIdcolor2Navigations)
            //        .HasForeignKey(d => d.Idcolor2)
            //        .HasConstraintName("FK_storedocpos_color2");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.StoredocpoIdgoodNavigations)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_storedocpos_good");

            //    entity.HasOne(d => d.Idgood2Navigation)
            //        .WithMany(p => p.StoredocpoIdgood2Navigations)
            //        .HasForeignKey(d => d.Idgood2)
            //        .HasConstraintName("FK_storedocpos_good2");

            //    entity.HasOne(d => d.IdgoodmeasureNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idgoodmeasure)
            //        .HasConstraintName("FK_storedocpos_goodmeasure");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_storedocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_storedocpos_orderitem");

            //    entity.HasOne(d => d.IdproductiondocposNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idproductiondocpos)
            //        .HasConstraintName("FK_storedocpos_productiondocpos");

            //    entity.HasOne(d => d.IdstoragespaceNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idstoragespace)
            //        .HasConstraintName("FK_storedocpos_storagespace");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("storedocpos_fk");

            //    entity.HasOne(d => d.IdsupplydocposNavigation)
            //        .WithMany(p => p.Storedocpos)
            //        .HasForeignKey(d => d.Idsupplydocpos)
            //        .HasConstraintName("FK_storedocpos_supplydocpos");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_storedocpos_parentid");
            //});

            //modelBuilder.Entity<Storedocscomplect>(entity =>
            //{
            //    entity.HasKey(e => e.Idcomplect)
            //        .HasName("PK__storedoc__ADD5260D98322935");

            //    entity.ToTable("storedocscomplect");

            //    entity.Property(e => e.Idcomplect)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idcomplect");

            //    entity.Property(e => e.Barcode)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");
            //});

            //modelBuilder.Entity<Storedocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idstoredocsign);

            //    entity.ToTable("storedocsign");

            //    entity.HasIndex(e => e.Idpeople, "idx_storedocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_storedocsign_idsign");

            //    entity.HasIndex(e => e.Idstoredoc, "idx_storedocsign_idstoredoc");

            //    entity.HasIndex(e => e.Idstoredocpos, "idx_storedocsign_idstoredocpos");

            //    entity.Property(e => e.Idstoredocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idstoredocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idstoredocpos).HasColumnName("idstoredocpos");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Storedocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_storedocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Storedocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_storedocsign_sign");

            //    entity.HasOne(d => d.IdstoredocNavigation)
            //        .WithMany(p => p.Storedocsigns)
            //        .HasForeignKey(d => d.Idstoredoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_storedocsign_storedoc");

            //    entity.HasOne(d => d.IdstoredocposNavigation)
            //        .WithMany(p => p.Storedocsigns)
            //        .HasForeignKey(d => d.Idstoredocpos)
            //        .HasConstraintName("FK_storedocsign_storedocpos");
            //});

            //modelBuilder.Entity<Supplydoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydoc);

            //    entity.ToTable("supplydoc");

            //    entity.HasIndex(e => e.Idcustomer, "idx_supplydoc_idcustomer");

            //    entity.HasIndex(e => e.Idcustomer2, "idx_supplydoc_idcustomer2");

            //    entity.HasIndex(e => e.Iddocoper, "idx_supplydoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_supplydoc_iddocstate");

            //    entity.HasIndex(e => e.Idorder, "idx_supplydoc_idorder");

            //    entity.HasIndex(e => e.Idpeople, "idx_supplydoc_idpeople");

            //    entity.HasIndex(e => e.Idseller, "idx_supplydoc_idseller");

            //    entity.HasIndex(e => e.Idsupplydocgroup, "idx_supplydoc_idsupplydocgroup");

            //    entity.HasIndex(e => e.Idvalut, "idx_supplydoc_idvalut");

            //    entity.Property(e => e.Idsupplydoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsupplydocgroup).HasColumnName("idsupplydocgroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Withnds).HasColumnName("withnds");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.SupplydocIdcustomerNavigations)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydoc_customer");

            //    entity.HasOne(d => d.Idcustomer2Navigation)
            //        .WithMany(p => p.SupplydocIdcustomer2Navigations)
            //        .HasForeignKey(d => d.Idcustomer2)
            //        .HasConstraintName("FK_supplydoc_idcustomer2");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_supplydoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_supplydoc_docstate");

            //    entity.HasOne(d => d.IdorderNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Idorder)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_orders_supplydoc");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydoc_people");

            //    entity.HasOne(d => d.IdsellerNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Idseller)
            //        .HasConstraintName("FK_supplydoc_seller");

            //    entity.HasOne(d => d.IdsupplydocgroupNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Idsupplydocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydoc_supplydocgroup");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.Supplydocs)
            //        .HasForeignKey(d => d.Idvalut)
            //        .HasConstraintName("FK_supplydoc_valut");
            //});

            //modelBuilder.Entity<Supplydocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydocdiraction);

            //    entity.ToTable("supplydocdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_supplydocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeopleсreate, "idx_supplydocdiraction_idpeopleсreate");

            //    entity.Property(e => e.Idsupplydocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Supplydocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .HasConstraintName("FK_supplydocdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleсreateNavigation)
            //        .WithMany(p => p.Supplydocdiractions)
            //        .HasForeignKey(d => d.Idpeopleсreate)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_supplydocdiraction_people");
            //});

            //modelBuilder.Entity<Supplydocgoodservice>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydocgoodservice);

            //    entity.ToTable("supplydocgoodservice");

            //    entity.HasIndex(e => e.Idgoodservice, "idx_supplydocgoodservice_idgoodservice");

            //    entity.HasIndex(e => e.Idsupplydoc, "idx_supplydocgoodservice_idsupplydoc");

            //    entity.Property(e => e.Idsupplydocgoodservice)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydocgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.HasOne(d => d.IdgoodserviceNavigation)
            //        .WithMany(p => p.Supplydocgoodservices)
            //        .HasForeignKey(d => d.Idgoodservice)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocgoodservice_goodservice");

            //    entity.HasOne(d => d.IdsupplydocNavigation)
            //        .WithMany(p => p.Supplydocgoodservices)
            //        .HasForeignKey(d => d.Idsupplydoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocgoodservice_supplydoc");
            //});

            //modelBuilder.Entity<Supplydocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydocgroup);

            //    entity.ToTable("supplydocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_supplydocgroup_parentid");

            //    entity.Property(e => e.Idsupplydocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Supplydocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydocpos);

            //    entity.ToTable("supplydocpos");

            //    entity.HasIndex(e => e.Idgood, "idx_supplydocpos_idgood");

            //    entity.HasIndex(e => e.Idgood2, "idx_supplydocpos_idgood2");

            //    entity.HasIndex(e => e.Idgoodmeasure, "idx_supplydocpos_idgoodmeasure");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_supplydocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idmodel, "idx_supplydocpos_idmodel");

            //    entity.HasIndex(e => e.Idorderitem, "idx_supplydocpos_idorderitem");

            //    entity.HasIndex(e => e.Idsupplydoc, "idx_supplydocpos_idsupplydoc");

            //    entity.HasIndex(e => e.Parentid, "idx_supplydocpos_parentid");

            //    entity.HasIndex(e => e.Width, "idx_supplydocpos_width");

            //    entity.Property(e => e.Idsupplydocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(20, 5)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgood2).HasColumnName("idgood2");

            //    entity.Property(e => e.Idgoodmeasure).HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Pricebasends)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebasends");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.SupplydocpoIdgoodNavigations)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocpos_good");

            //    entity.HasOne(d => d.Idgood2Navigation)
            //        .WithMany(p => p.SupplydocpoIdgood2Navigations)
            //        .HasForeignKey(d => d.Idgood2)
            //        .HasConstraintName("FK_supplydocpos_good2");

            //    entity.HasOne(d => d.IdgoodmeasureNavigation)
            //        .WithMany(p => p.Supplydocpos)
            //        .HasForeignKey(d => d.Idgoodmeasure)
            //        .HasConstraintName("FK_supplydocpos_goodmeasure");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Supplydocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_supplydocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Supplydocpos)
            //        .HasForeignKey(d => d.Idmodel)
            //        .HasConstraintName("FK_supplydocpos_model");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Supplydocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocpos_orderitem");

            //    entity.HasOne(d => d.IdsupplydocNavigation)
            //        .WithMany(p => p.Supplydocpos)
            //        .HasForeignKey(d => d.Idsupplydoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocpos_supplydoc");

            //    entity.HasOne(d => d.Parent)
            //        .WithMany(p => p.InverseParent)
            //        .HasForeignKey(d => d.Parentid)
            //        .HasConstraintName("FK_supplydocpos_supplydocpos");
            //});

            //modelBuilder.Entity<Supplydocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idsupplydocsign);

            //    entity.ToTable("supplydocsign");

            //    entity.HasIndex(e => e.Idpeople, "idx_supplydocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_supplydocsign_idsign");

            //    entity.HasIndex(e => e.Idsupplydoc, "idx_supplydocsign_idsupplydoc");

            //    entity.HasIndex(e => e.Idsupplydocpos, "idx_supplydocsign_idsupplydocpos");

            //    entity.Property(e => e.Idsupplydocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsupplydocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocpos).HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Supplydocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_supplydocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Supplydocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_supplydocsign_sign");

            //    entity.HasOne(d => d.IdsupplydocNavigation)
            //        .WithMany(p => p.Supplydocsigns)
            //        .HasForeignKey(d => d.Idsupplydoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_supplydocsign_supplydoc");

            //    entity.HasOne(d => d.IdsupplydocposNavigation)
            //        .WithMany(p => p.Supplydocsigns)
            //        .HasForeignKey(d => d.Idsupplydocpos)
            //        .HasConstraintName("FK_supplydocsign_supplydocpos");
            //});

            //modelBuilder.Entity<Sysconnect>(entity =>
            //{
            //    entity.HasKey(e => e.Idsysconnect);

            //    entity.ToTable("sysconnect");

            //    entity.Property(e => e.Idsysconnect)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsysconnect");

            //    entity.Property(e => e.Connected)
            //        .HasColumnType("datetime")
            //        .HasColumnName("connected");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");
            //});

            //modelBuilder.Entity<Sysevent>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("sysevent");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtvalue1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue1");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Dtvalue3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue3");

            //    entity.Property(e => e.Eventname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("eventname");

            //    entity.Property(e => e.Id)
            //        .ValueGeneratedOnAdd()
            //        .HasColumnName("id");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Intvalue1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue1");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Intvalue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue3");

            //    entity.Property(e => e.Message)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("message");

            //    entity.Property(e => e.Strvalue1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue1");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Strvalue3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue3");
            //});

            //modelBuilder.Entity<Sysinfo>(entity =>
            //{
            //    entity.HasKey(e => e.Idsysinfo)
            //        .HasName("sysinfo_pkey");

            //    entity.ToTable("sysinfo");

            //    entity.Property(e => e.Idsysinfo)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsysinfo");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Value)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("value");
            //});

            //modelBuilder.Entity<Dto.System>(entity =>
            //{
            //    entity.HasKey(e => e.Idsystem)
            //        .HasName("system_pkey");

            //    entity.ToTable("system");

            //    entity.HasIndex(e => e.Idversion, "idx_system_idversion");

            //    entity.Property(e => e.Idsystem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsystem");

            //    entity.Property(e => e.AllowAnyHandle)
            //        .IsRequired()
            //        .HasColumnName("allow_any_handle")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowCentreHandle)
            //        .IsRequired()
            //        .HasColumnName("allow_centre_handle")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowFixHandle)
            //        .IsRequired()
            //        .HasColumnName("allow_fix_handle")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowGluhoe)
            //        .IsRequired()
            //        .HasColumnName("allow_gluhoe")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowMayatnik)
            //        .IsRequired()
            //        .HasColumnName("allow_mayatnik")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowOtk)
            //        .IsRequired()
            //        .HasColumnName("allow_otk")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowPodPov).HasColumnName("allow_pod_pov");

            //    entity.Property(e => e.AllowPodRazd).HasColumnName("allow_pod_razd");

            //    entity.Property(e => e.AllowPodv)
            //        .IsRequired()
            //        .HasColumnName("allow_podv")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowPov)
            //        .IsRequired()
            //        .HasColumnName("allow_pov")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowPovotk)
            //        .IsRequired()
            //        .HasColumnName("allow_povotk")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowRazd)
            //        .IsRequired()
            //        .HasColumnName("allow_razd")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.AllowSeredPodves).HasColumnName("allow_sered_podves");

            //    entity.Property(e => e.AllowSkladnoe).HasColumnName("allow_skladnoe");

            //    entity.Property(e => e.AllowStvInStv)
            //        .IsRequired()
            //        .HasColumnName("allow_stv_in_stv")
            //        .HasDefaultValueSql("((1))");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GostName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("gost_name")
            //        .HasComment("Наименование по госту ");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Heatresistance)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("heatresistance ")
            //        .HasComment("сопротивление теплопередаче");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.MySystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("my_system_name")
            //        .HasComment("имя система для печатных форм и передачи в 1С");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Serial).HasColumnName("serial");

            //    entity.Property(e => e.Systemtype)
            //        .HasColumnName("systemtype")
            //        .HasDefaultValueSql("((0))");

            //    entity.Property(e => e.Vars)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("vars");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Systems)
            //        .HasForeignKey(d => d.Idversion)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_system_versions");
            //});

            //modelBuilder.Entity<Systemdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idsystemdetail)
            //        .HasName("systemdetail_pkey");

            //    entity.ToTable("systemdetail");

            //    entity.HasIndex(e => e.Guid, "UQ__systemdetail__6B3B8FC9")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idconnectortype, "idx_systemdetail_idconnectortype");

            //    entity.HasIndex(e => e.Idmodelpart, "idx_systemdetail_idmodelpart");

            //    entity.HasIndex(e => e.Idsystem, "idx_systemdetail_idsystem");

            //    entity.HasIndex(e => e.Idversion, "idx_systemdetail_idversion");

            //    entity.HasIndex(e => e.Width, "idx_systemdetail_width");

            //    entity.Property(e => e.Idsystemdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsystemdetail");

            //    entity.Property(e => e.A)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("a");

            //    entity.Property(e => e.A1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("a1");

            //    entity.Property(e => e.A2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("a2");

            //    entity.Property(e => e.B)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("b");

            //    entity.Property(e => e.B1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("b1");

            //    entity.Property(e => e.B2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("b2");

            //    entity.Property(e => e.C)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("c");

            //    entity.Property(e => e.C1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("c1");

            //    entity.Property(e => e.C2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("c2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.D)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("d");

            //    entity.Property(e => e.D1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("d1");

            //    entity.Property(e => e.D2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("d2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.E)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("e");

            //    entity.Property(e => e.E1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("e1");

            //    entity.Property(e => e.E2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("e2");

            //    entity.Property(e => e.F)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f");

            //    entity.Property(e => e.F1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f1");

            //    entity.Property(e => e.F2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f2");

            //    entity.Property(e => e.G)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("g");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idconnectortype).HasColumnName("idconnectortype");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Israck).HasColumnName("israck");

            //    entity.Property(e => e.Israil).HasColumnName("israil");

            //    entity.Property(e => e.Maxang)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxang");

            //    entity.Property(e => e.Maxr).HasColumnName("maxr");

            //    entity.Property(e => e.Minang)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minang");

            //    entity.Property(e => e.Minr).HasColumnName("minr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Profilesection).HasColumnName("profilesection");

            //    entity.Property(e => e.Sqr1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr1")
            //        .HasComment("Ламинация внутренняя");

            //    entity.Property(e => e.Sqr2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr2")
            //        .HasComment("Ламинация внешняя");

            //    entity.Property(e => e.Steel)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("steel");

            //    entity.Property(e => e.Systemdetailgroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetailgroup");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Z)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("z");

            //    entity.HasOne(d => d.IdconnectortypeNavigation)
            //        .WithMany(p => p.Systemdetails)
            //        .HasForeignKey(d => d.Idconnectortype)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_systemdetail_connectortype");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Systemdetails)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_systemdetail_modelpart");

            //    entity.HasOne(d => d.IdsystemNavigation)
            //        .WithMany(p => p.Systemdetails)
            //        .HasForeignKey(d => d.Idsystem)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_systemdetail_system");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Systemdetails)
            //        .HasForeignKey(d => d.Idversion)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_systemdetail_version");
            //});

            //modelBuilder.Entity<Systemdetailrel>(entity =>
            //{
            //    entity.HasKey(e => e.Idsystemdetailrel);

            //    entity.ToTable("systemdetailrel");

            //    entity.HasIndex(e => e.Guid, "UQ__systemdetailrel__74C4FA03")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Idsystemdetail, "idx_systemdetailrel_idsystemdetail");

            //    entity.HasIndex(e => e.Idsystemdetail2, "idx_systemdetailrel_idsystemdetail2");

            //    entity.HasIndex(e => e.Idversion, "idx_systemdetailrel_idversion");

            //    entity.Property(e => e.Idsystemdetailrel)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsystemdetailrel");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.HasOne(d => d.IdsystemdetailNavigation)
            //        .WithMany(p => p.SystemdetailrelIdsystemdetailNavigations)
            //        .HasForeignKey(d => d.Idsystemdetail)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_systemdetailrel_systemdetail");

            //    entity.HasOne(d => d.Idsystemdetail2Navigation)
            //        .WithMany(p => p.SystemdetailrelIdsystemdetail2Navigations)
            //        .HasForeignKey(d => d.Idsystemdetail2)
            //        .HasConstraintName("FK_systemdetailrel_systemdetail1");

            //    entity.HasOne(d => d.IdversionNavigation)
            //        .WithMany(p => p.Systemdetailrels)
            //        .HasForeignKey(d => d.Idversion)
            //        .HasConstraintName("FK_systemdetailrel_versions");
            //});

            //modelBuilder.Entity<Systemdetailrelationship>(entity =>
            //{
            //    entity.HasKey(e => e.Idsystemdetailrelationship);

            //    entity.ToTable("systemdetailrelationship");

            //    entity.HasIndex(e => new { e.Idsystemdetail1, e.Idsystemdetail2, e.Deleted }, "U_systemdetailrelationship_relationship")
            //        .IsUnique();

            //    entity.Property(e => e.Idsystemdetailrelationship)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsystemdetailrelationship");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idsystemdetail1).HasColumnName("idsystemdetail1");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Indent).HasColumnName("indent");

            //    entity.HasOne(d => d.Idsystemdetail1Navigation)
            //        .WithMany(p => p.SystemdetailrelationshipIdsystemdetail1Navigations)
            //        .HasForeignKey(d => d.Idsystemdetail1)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_systemdetailrelationship_systemdetail1");

            //    entity.HasOne(d => d.Idsystemdetail2Navigation)
            //        .WithMany(p => p.SystemdetailrelationshipIdsystemdetail2Navigations)
            //        .HasForeignKey(d => d.Idsystemdetail2)
            //        .OnDelete(DeleteBehavior.ClientSetNull)
            //        .HasConstraintName("FK_systemdetailrelationship_systemdetail2");
            //});

            //modelBuilder.Entity<Sysupdate>(entity =>
            //{
            //    entity.HasKey(e => e.Idsysupdate);

            //    entity.ToTable("sysupdate");

            //    entity.Property(e => e.Idsysupdate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idsysupdate");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Dtscript)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtscript");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Script)
            //        .HasColumnType("text")
            //        .HasColumnName("script");
            //});

            //modelBuilder.Entity<TIdorder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("t_idorder");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");
            //});

            //modelBuilder.Entity<TXxx>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("t_xxx");

            //    entity.Property(e => e.IdМаршрута).HasColumnName("id Маршрута");

            //    entity.Property(e => e.IdЭтапа).HasColumnName("id этапа");

            //    entity.Property(e => e.Бренд).HasMaxLength(250);

            //    entity.Property(e => e.Город).HasMaxLength(250);

            //    entity.Property(e => e.МаршрутОтправки)
            //        .HasMaxLength(250)
            //        .HasColumnName("Маршрут отправки");

            //    entity.Property(e => e.ПрефиксТекстовый)
            //        .HasMaxLength(250)
            //        .HasColumnName("Префикс текстовый");

            //    entity.Property(e => e.Этап).HasMaxLength(250);
            //});

            //modelBuilder.Entity<Table1>(entity =>
            //{
            //    entity.HasKey(e => e.Idhardware);

            //    entity.ToTable("Table_1");

            //    entity.Property(e => e.Idhardware)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idhardware");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Tablefile>(entity =>
            //{
            //    entity.HasKey(e => e.Idtablefiles);

            //    entity.ToTable("tablefiles");

            //    entity.Property(e => e.Idtablefiles)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtablefiles");

            //    entity.Property(e => e.Contents).HasColumnName("contents");

            //    entity.Property(e => e.Extention)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("extention");

            //    entity.Property(e => e.Filename)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("filename");

            //    entity.Property(e => e.Lastdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("lastdate");
            //});

            //modelBuilder.Entity<Tariff>(entity =>
            //{
            //    entity.HasKey(e => e.Idtariff);

            //    entity.ToTable("tariff");

            //    entity.Property(e => e.Idtariff)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtariff");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");
            //});

            //modelBuilder.Entity<Dto.Task>(entity =>
            //{
            //    entity.HasIndex(e => e.CreateUserId, "IX_Tasks_CreateUserId");

            //    entity.HasIndex(e => e.DeleteUserId, "IX_Tasks_DeleteUserId");

            //    entity.HasIndex(e => e.LoaderId, "IX_Tasks_LoaderId");

            //    entity.HasOne(d => d.CreateUser)
            //        .WithMany(p => p.TaskCreateUsers)
            //        .HasForeignKey(d => d.CreateUserId);

            //    entity.HasOne(d => d.DeleteUser)
            //        .WithMany(p => p.TaskDeleteUsers)
            //        .HasForeignKey(d => d.DeleteUserId);

            //    entity.HasOne(d => d.Loader)
            //        .WithMany(p => p.Tasks)
            //        .HasForeignKey(d => d.LoaderId);
            //});

            //modelBuilder.Entity<TaskHistory>(entity =>
            //{
            //    entity.ToTable("TaskHistory");

            //    entity.HasIndex(e => e.CreateUserId, "IX_TaskHistory_CreateUserId");

            //    entity.HasIndex(e => e.TaskId, "IX_TaskHistory_TaskId");

            //    entity.HasOne(d => d.CreateUser)
            //        .WithMany(p => p.TaskHistories)
            //        .HasForeignKey(d => d.CreateUserId);

            //    entity.HasOne(d => d.Task)
            //        .WithMany(p => p.TaskHistories)
            //        .HasForeignKey(d => d.TaskId)
            //        .OnDelete(DeleteBehavior.ClientSetNull);
            //});

            //modelBuilder.Entity<Tdsheet>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("TDSheet$");

            //    entity.Property(e => e.ВидДоговора)
            //        .HasMaxLength(255)
            //        .HasColumnName("Вид договора");

            //    entity.Property(e => e.Должность).HasMaxLength(255);

            //    entity.Property(e => e.Имя).HasMaxLength(255);

            //    entity.Property(e => e.КодТаб).HasColumnName("Код (Таб# №)");

            //    entity.Property(e => e.Организация).HasMaxLength(255);

            //    entity.Property(e => e.Отчество).HasMaxLength(255);

            //    entity.Property(e => e.Подразделение).HasMaxLength(255);

            //    entity.Property(e => e.Принят).HasMaxLength(255);

            //    entity.Property(e => e.Фамилия).HasMaxLength(255);
            //});

            //modelBuilder.Entity<Techdoc>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdoc)
            //        .HasName("PK_techdocdoc");

            //    entity.ToTable("techdoc");

            //    entity.HasIndex(e => e.Idcustomer, "idx_techdoc_idcustomer");

            //    entity.HasIndex(e => e.Iddocoper, "idx_techdoc_iddocoper");

            //    entity.HasIndex(e => e.Iddocstate, "idx_techdoc_iddocstate");

            //    entity.HasIndex(e => e.Idpeople, "idx_techdoc_idpeople");

            //    entity.HasIndex(e => e.Idtechdocgroup, "idx_techdoc_idtechdocgroup");

            //    entity.Property(e => e.Idtechdoc)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idtechdocgroup).HasColumnName("idtechdocgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.HasOne(d => d.IdcustomerNavigation)
            //        .WithMany(p => p.Techdocs)
            //        .HasForeignKey(d => d.Idcustomer)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdoc_customer");

            //    entity.HasOne(d => d.IddocoperNavigation)
            //        .WithMany(p => p.Techdocs)
            //        .HasForeignKey(d => d.Iddocoper)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_techdoc_docoper");

            //    entity.HasOne(d => d.IddocstateNavigation)
            //        .WithMany(p => p.Techdocs)
            //        .HasForeignKey(d => d.Iddocstate)
            //        .HasConstraintName("FK_techdoc_docstate");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Techdocs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdoc_people");

            //    entity.HasOne(d => d.IdtechdocgroupNavigation)
            //        .WithMany(p => p.Techdocs)
            //        .HasForeignKey(d => d.Idtechdocgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdoc_techdocgroup");
            //});

            //modelBuilder.Entity<Techdocdiraction>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdocdiraction);

            //    entity.ToTable("techdocdiraction");

            //    entity.HasIndex(e => e.Iddiraction, "idx_techdocdiraction_iddiraction");

            //    entity.HasIndex(e => e.Idpeople, "idx_techdocdiraction_idpeople");

            //    entity.HasIndex(e => e.Idtechdoc, "idx_techdocdiraction_idtechdoc");

            //    entity.Property(e => e.Idtechdocdiraction)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplecreate).HasColumnName("idpeoplecreate");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.HasOne(d => d.IddiractionNavigation)
            //        .WithMany(p => p.Techdocdiractions)
            //        .HasForeignKey(d => d.Iddiraction)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_techdocdiraction_diraction");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Techdocdiractions)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_techdocdiraction_people");

            //    entity.HasOne(d => d.IdtechdocNavigation)
            //        .WithMany(p => p.Techdocdiractions)
            //        .HasForeignKey(d => d.Idtechdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdocdiraction_techdoc");
            //});

            //modelBuilder.Entity<Techdocgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdocgroup)
            //        .HasName("PK_techdocdocgroup");

            //    entity.ToTable("techdocgroup");

            //    entity.HasIndex(e => e.Parentid, "idx_techdocgroup_parentid");

            //    entity.Property(e => e.Idtechdocgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdocgroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Filtertext)
            //        .HasColumnType("text")
            //        .HasColumnName("filtertext");

            //    entity.Property(e => e.Isload).HasColumnName("isload");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Techdocpo>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdocpos)
            //        .HasName("PK_techdocdocpos");

            //    entity.ToTable("techdocpos");

            //    entity.HasIndex(e => e.Idgood, "idx_techdocpos_idgood");

            //    entity.HasIndex(e => e.Idmanufactdocpos, "idx_techdocpos_idmanufactdocpos");

            //    entity.HasIndex(e => e.Idmodel, "idx_techdocpos_idmodel");

            //    entity.HasIndex(e => e.Idorderitem, "idx_techdocpos_idorderitem");

            //    entity.HasIndex(e => e.Idtechdoc, "idx_techdocpos_idtechdoc");

            //    entity.HasIndex(e => e.Width, "idx_techdocpos_width");

            //    entity.Property(e => e.Idtechdocpos)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdocpos");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Barnumpos)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barnumpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idequipmentprofile).HasColumnName("idequipmentprofile");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Techdocpos)
            //        .HasForeignKey(d => d.Idgood)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdocpos_good");

            //    entity.HasOne(d => d.IdmanufactdocposNavigation)
            //        .WithMany(p => p.Techdocpos)
            //        .HasForeignKey(d => d.Idmanufactdocpos)
            //        .HasConstraintName("FK_techdocpos_manufactdocpos");

            //    entity.HasOne(d => d.IdmodelNavigation)
            //        .WithMany(p => p.Techdocpos)
            //        .HasForeignKey(d => d.Idmodel)
            //        .HasConstraintName("FK_techdocpos_model");

            //    entity.HasOne(d => d.IdorderitemNavigation)
            //        .WithMany(p => p.Techdocpos)
            //        .HasForeignKey(d => d.Idorderitem)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdocpos_orderitem");

            //    entity.HasOne(d => d.IdtechdocNavigation)
            //        .WithMany(p => p.Techdocpos)
            //        .HasForeignKey(d => d.Idtechdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdocpos_techdoc");
            //});

            //modelBuilder.Entity<Techdocsign>(entity =>
            //{
            //    entity.HasKey(e => e.Idtechdocsign);

            //    entity.ToTable("techdocsign");

            //    entity.HasIndex(e => e.Idpeople, "idx_techdocsign_idpeople");

            //    entity.HasIndex(e => e.Idsign, "idx_techdocsign_idsign");

            //    entity.HasIndex(e => e.Idsignvalue, "idx_techdocsign_idsignvalue");

            //    entity.HasIndex(e => e.Idtechdoc, "idx_techdocsign_idtechdoc");

            //    entity.Property(e => e.Idtechdocsign)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtechdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Idtechdocpos).HasColumnName("idtechdocpos");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Techdocsigns)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_techdocsign_people");

            //    entity.HasOne(d => d.IdsignNavigation)
            //        .WithMany(p => p.Techdocsigns)
            //        .HasForeignKey(d => d.Idsign)
            //        .OnDelete(DeleteBehavior.SetNull)
            //        .HasConstraintName("FK_techdocsign_sign");

            //    entity.HasOne(d => d.IdsignvalueNavigation)
            //        .WithMany(p => p.Techdocsigns)
            //        .HasForeignKey(d => d.Idsignvalue)
            //        .HasConstraintName("FK_techdocsign_signvalue");

            //    entity.HasOne(d => d.IdtechdocNavigation)
            //        .WithMany(p => p.Techdocsigns)
            //        .HasForeignKey(d => d.Idtechdoc)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_techdocsign_techdoc");
            //});

            //modelBuilder.Entity<Temp2019Mc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Temp_2019_mc");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(20, 5)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Thick).HasColumnName("thick");
            //});

            //modelBuilder.Entity<Temp2019Oi>(entity =>
            //{
            //    entity.HasKey(e => e.Idorderitem)
            //        .HasName("PK_Temp_2019_o");

            //    entity.ToTable("Temp_2019_oi");

            //    entity.Property(e => e.Idorderitem)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idorderitem");

            //    entity.Property(e => e.Done).HasColumnName("done");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Sel).HasColumnName("sel");
            //});

            //modelBuilder.Entity<TempGoodZakaz>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_good_zakaz");

            //    entity.Property(e => e.Idgood)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("idgood");

            //    entity.Property(e => e.Артикул)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Заказной)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.СрокПоставки)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("Срок поставки");
            //});

            //modelBuilder.Entity<TempKladr>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_KLADR");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("CODE");

            //    entity.Property(e => e.Gninmb)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("GNINMB");

            //    entity.Property(e => e.Index)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("INDEX");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");

            //    entity.Property(e => e.Ocatd)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("OCATD");

            //    entity.Property(e => e.Socr)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("SOCR");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(1)
            //        .IsUnicode(false)
            //        .HasColumnName("STATUS");

            //    entity.Property(e => e.Uno)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("UNO");
            //});

            //modelBuilder.Entity<TempKladr1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_KLADR_");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("CODE");

            //    entity.Property(e => e.Gninmb)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("GNINMB");

            //    entity.Property(e => e.Index)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("INDEX");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");

            //    entity.Property(e => e.Ocatd)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("OCATD");

            //    entity.Property(e => e.Socr)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("SOCR");

            //    entity.Property(e => e.Status)
            //        .HasMaxLength(1)
            //        .IsUnicode(false)
            //        .HasColumnName("STATUS");

            //    entity.Property(e => e.Uno)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("UNO");
            //});

            //modelBuilder.Entity<TempMgg>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_mgg");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(100)
            //        .IsUnicode(false)
            //        .HasColumnName("GROUPNAME");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");

            //    entity.Property(e => e.Mygrgoodsid).HasColumnName("MYGRGOODSID");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(150)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");
            //});

            //modelBuilder.Entity<TempPodr>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_podr");

            //    entity.Property(e => e.Column1)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column2)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column3)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column4)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column5)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column6)
            //        .HasMaxLength(100)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Column7)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TempStreet>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_STREET");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(17)
            //        .IsUnicode(false)
            //        .HasColumnName("CODE");

            //    entity.Property(e => e.Gninmb)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("GNINMB");

            //    entity.Property(e => e.Index)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("INDEX");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");

            //    entity.Property(e => e.Ocatd)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("OCATD");

            //    entity.Property(e => e.Socr)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("SOCR");

            //    entity.Property(e => e.Uno)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("UNO");
            //});

            //modelBuilder.Entity<TempStreet1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("temp_STREET_");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(17)
            //        .IsUnicode(false)
            //        .HasColumnName("CODE");

            //    entity.Property(e => e.Gninmb)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("GNINMB");

            //    entity.Property(e => e.Index)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("INDEX");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");

            //    entity.Property(e => e.Ocatd)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("OCATD");

            //    entity.Property(e => e.Socr)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("SOCR");

            //    entity.Property(e => e.Uno)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("UNO");
            //});

            //modelBuilder.Entity<Template>(entity =>
            //{
            //    entity.HasKey(e => e.Idtemplate)
            //        .HasName("PK_template1");

            //    entity.ToTable("template");

            //    entity.HasIndex(e => e.Idtemplategroup, "idx_template_idtemplategroup");

            //    entity.Property(e => e.Idtemplate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtemplate");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idfurnituresystem).HasColumnName("idfurnituresystem");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idproductiontype)
            //        .HasColumnName("idproductiontype")
            //        .HasComment("Тип продукции");

            //    entity.Property(e => e.Idprofilesystem).HasColumnName("idprofilesystem");

            //    entity.Property(e => e.Idtemplategroup).HasColumnName("idtemplategroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Templatetype).HasColumnName("templatetype");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.HasOne(d => d.IdtemplategroupNavigation)
            //        .WithMany(p => p.Templates)
            //        .HasForeignKey(d => d.Idtemplategroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_template_templategroup");
            //});

            //modelBuilder.Entity<Templategroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idtemplategroup)
            //        .HasName("PK_template");

            //    entity.ToTable("templategroup");

            //    entity.HasIndex(e => e.Parentid, "idx_templategroup_parentid");

            //    entity.Property(e => e.Idtemplategroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtemplategroup");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<Templateparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idtemplateparam)
            //        .HasName("pk_templateparamcalc");

            //    entity.ToTable("templateparam");

            //    entity.HasIndex(e => e.Idmodelparam, "idx_templateparam_idmodelparam");

            //    entity.HasIndex(e => e.Idmodelpart, "idx_templateparam_idmodelpart");

            //    entity.HasIndex(e => e.Idtemplate, "idx_templateparam_idtemplate");

            //    entity.Property(e => e.Idtemplateparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtemplateparam");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idtemplate).HasColumnName("idtemplate");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.HasOne(d => d.IdmodelparamNavigation)
            //        .WithMany(p => p.Templateparams)
            //        .HasForeignKey(d => d.Idmodelparam)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_templateparam_modelparam");

            //    entity.HasOne(d => d.IdmodelpartNavigation)
            //        .WithMany(p => p.Templateparams)
            //        .HasForeignKey(d => d.Idmodelpart)
            //        .HasConstraintName("FK_templateparam_modelpart");

            //    entity.HasOne(d => d.IdtemplateNavigation)
            //        .WithMany(p => p.Templateparams)
            //        .HasForeignKey(d => d.Idtemplate)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_templateparam_template");
            //});

            //modelBuilder.Entity<TigViewDiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("tig_view_diraction");

            //    entity.Property(e => e.FactEndMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactOtgr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactPrin)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactProizv)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactProizvMosk)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactZamer)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.PlanEndMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanOtgr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanPrin)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanProizv)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanProizvMosk)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanZamer)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<TigViewDiractionDate>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("tig_view_diraction_date");

            //    entity.Property(e => e.CommentEndMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentEndMont");

            //    entity.Property(e => e.CommentMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentMont");

            //    entity.Property(e => e.CommentOtgr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentOtgr");

            //    entity.Property(e => e.CommentPrin)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentPrin");

            //    entity.Property(e => e.CommentProizv)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentProizv");

            //    entity.Property(e => e.CommentProizvMosk)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentProizvMosk");

            //    entity.Property(e => e.CommentZamer)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentZamer");

            //    entity.Property(e => e.FactEndMont).HasColumnType("datetime");

            //    entity.Property(e => e.FactMont).HasColumnType("datetime");

            //    entity.Property(e => e.FactOtgr).HasColumnType("datetime");

            //    entity.Property(e => e.FactPrin).HasColumnType("datetime");

            //    entity.Property(e => e.FactProizv).HasColumnType("datetime");

            //    entity.Property(e => e.FactProizvMosk).HasColumnType("datetime");

            //    entity.Property(e => e.FactZamer).HasColumnType("datetime");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.PlanEndMont).HasColumnType("datetime");

            //    entity.Property(e => e.PlanMont).HasColumnType("datetime");

            //    entity.Property(e => e.PlanOtgr).HasColumnType("datetime");

            //    entity.Property(e => e.PlanPrin).HasColumnType("datetime");

            //    entity.Property(e => e.PlanProizv).HasColumnType("datetime");

            //    entity.Property(e => e.PlanProizvMosk).HasColumnType("datetime");

            //    entity.Property(e => e.PlanZamer).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<TmpBarcode>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("tmp_barcode");

            //    entity.Property(e => e.Area)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("area");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Idstorageaddress).HasColumnName("idstorageaddress");

            //    entity.Property(e => e.Place).HasColumnName("place");

            //    entity.Property(e => e.Row).HasColumnName("row");
            //});

            //modelBuilder.Entity<TmpData3>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("tmpData3");

            //    entity.Property(e => e.Color)
            //        .HasMaxLength(131)
            //        .IsUnicode(false)
            //        .HasColumnName("color");

            //    entity.Property(e => e.Height)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.IsContract).HasColumnName("isContract");

            //    entity.Property(e => e.IsOrdered)
            //        .HasMaxLength(225)
            //        .IsUnicode(false)
            //        .HasColumnName("isOrdered");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name).HasColumnName("name");

            //    entity.Property(e => e.OiMain)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("oi_main");

            //    entity.Property(e => e.Plandate)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("plandate");

            //    entity.Property(e => e.Productdate).HasColumnName("productdate");

            //    entity.Property(e => e.Productname)
            //        .HasMaxLength(24)
            //        .IsUnicode(false)
            //        .HasColumnName("productname");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 8)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Size)
            //        .HasMaxLength(23)
            //        .IsUnicode(false)
            //        .HasColumnName("size");

            //    entity.Property(e => e.SortPlandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("sort_plandate");

            //    entity.Property(e => e.Width)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("width");
            //});

            //modelBuilder.Entity<TmpOi>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("tmp_oi");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Ordername)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("ordername");

            //    entity.Property(e => e.Plandate)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("plandate");

            //    entity.Property(e => e.Qu).HasColumnName("qu");
            //});

            //modelBuilder.Entity<TmpOrder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("tmp_orders");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Totalgood>(entity =>
            //{
            //    entity.HasKey(e => e.Idtotalgoods);

            //    entity.ToTable("totalgoods");

            //    entity.Property(e => e.Idtotalgoods)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtotalgoods");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("decimal(18, 0)")
            //        .HasColumnName("qustore");
            //});

            //modelBuilder.Entity<Trash>(entity =>
            //{
            //    entity.HasKey(e => e.Idtrash);

            //    entity.ToTable("trash");

            //    entity.Property(e => e.Idtrash)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idtrash");

            //    entity.Property(e => e.Name)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Value1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value1");

            //    entity.Property(e => e.Value2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("value2");
            //});

            //modelBuilder.Entity<Ttt>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("ttt");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(255)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Mea)
            //        .HasMaxLength(255)
            //        .HasColumnName("mea");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Post)
            //        .HasMaxLength(255)
            //        .HasColumnName("post");
            //});

            //modelBuilder.Entity<Uslugi2>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("uslugi_2");

            //    entity.Property(e => e.Idmodelparam)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("idmodelparam");

            //    entity.Property(e => e.АртикулМатериала)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("Артикул материала");

            //    entity.Property(e => e.Группа)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ИдМатериала)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("ИД материала");

            //    entity.Property(e => e.Параметр)
            //        .HasMaxLength(255)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Valut>(entity =>
            //{
            //    entity.HasKey(e => e.Idvalut);

            //    entity.ToTable("valut");

            //    entity.HasIndex(e => e.Guid, "UQ__valut__1AEAA2EB")
            //        .IsUnique();

            //    entity.Property(e => e.Idvalut)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvalut");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isbase).HasColumnName("isbase");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<Valutrate>(entity =>
            //{
            //    entity.HasKey(e => e.Idvalutrate);

            //    entity.ToTable("valutrate");

            //    entity.HasIndex(e => e.Idvalut, "idx_valutrate_idvalut");

            //    entity.HasIndex(e => e.Idvalut2, "idx_valutrate_idvalut2");

            //    entity.Property(e => e.Idvalutrate)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvalutrate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.HasOne(d => d.IdvalutNavigation)
            //        .WithMany(p => p.ValutrateIdvalutNavigations)
            //        .HasForeignKey(d => d.Idvalut)
            //        .HasConstraintName("FK_valutrate_valut");

            //    entity.HasOne(d => d.Idvalut2Navigation)
            //        .WithMany(p => p.ValutrateIdvalut2Navigations)
            //        .HasForeignKey(d => d.Idvalut2)
            //        .HasConstraintName("FK_valutrate_valut1");
            //});

            //modelBuilder.Entity<Variant>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariant);

            //    entity.ToTable("variant");

            //    entity.HasIndex(e => e.Idconnection, "idx_variant_idconnection");

            //    entity.HasIndex(e => e.Idvarianttype, "idx_variant_idvarianttype");

            //    entity.Property(e => e.Idvariant)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariant");

            //    entity.Property(e => e.Idconnection).HasColumnName("idconnection");

            //    entity.Property(e => e.Idvarianttype).HasColumnName("idvarianttype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Type).HasColumnName("type");

            //    entity.HasOne(d => d.IdconnectionNavigation)
            //        .WithMany(p => p.Variants)
            //        .HasForeignKey(d => d.Idconnection)
            //        .HasConstraintName("FK_variant_connection");

            //    entity.HasOne(d => d.IdvarianttypeNavigation)
            //        .WithMany(p => p.Variants)
            //        .HasForeignKey(d => d.Idvarianttype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variant_varianttype");
            //});

            //modelBuilder.Entity<Variantdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariantdetail);

            //    entity.ToTable("variantdetail");

            //    entity.HasIndex(e => e.Iderror, "idx_variantdetail_iderror");

            //    entity.HasIndex(e => e.Idgood, "idx_variantdetail_idgood");

            //    entity.HasIndex(e => e.Idvariant, "idx_variantdetail_idvariant");

            //    entity.HasIndex(e => e.Idworkoper, "idx_variantdetail_idworkoper");

            //    entity.Property(e => e.Idvariantdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariantdetail");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idvariant).HasColumnName("idvariant");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.HasOne(d => d.IderrorNavigation)
            //        .WithMany(p => p.Variantdetails)
            //        .HasForeignKey(d => d.Iderror)
            //        .HasConstraintName("FK_variantdetail_iderror");

            //    entity.HasOne(d => d.IdgoodNavigation)
            //        .WithMany(p => p.Variantdetails)
            //        .HasForeignKey(d => d.Idgood)
            //        .HasConstraintName("FK_variantdetail_good");

            //    entity.HasOne(d => d.IdvariantNavigation)
            //        .WithMany(p => p.Variantdetails)
            //        .HasForeignKey(d => d.Idvariant)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variantdetail_variant");

            //    entity.HasOne(d => d.IdworkoperNavigation)
            //        .WithMany(p => p.Variantdetails)
            //        .HasForeignKey(d => d.Idworkoper)
            //        .HasConstraintName("FK_variantdetail_idworkoper");
            //});

            //modelBuilder.Entity<Variantparam>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariantparam);

            //    entity.ToTable("variantparam");

            //    entity.HasIndex(e => e.Idcolor, "idx_variantparam_idcolor");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_variantparam_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_variantparam_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idvariant, "idx_variantparam_idvariant");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_variantparam_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_variantparam_idvariantparamtypevalue");

            //    entity.Property(e => e.Idvariantparam)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariantparam");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idvariant).HasColumnName("idvariant");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_variantparam_color");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_variantparam_constructiontype");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_variantparam_modelparamvalue");

            //    entity.HasOne(d => d.IdvariantNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idvariant)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variantparam_variant");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .HasConstraintName("FK_variantparam_variantparamtype");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Variantparams)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variantparam_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Variantparamdetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariantparamdetail);

            //    entity.ToTable("variantparamdetail");

            //    entity.HasIndex(e => e.Idcolor, "idx_variantparamdetail_idcolor");

            //    entity.HasIndex(e => e.Idcoloraccordance, "idx_variantparamdetail_idcoloraccordance");

            //    entity.HasIndex(e => e.Idconstructiontype, "idx_variantparamdetail_idconstructiontype");

            //    entity.HasIndex(e => e.Idmodelparamvalue, "idx_variantparamdetail_idmodelparamvalue");

            //    entity.HasIndex(e => e.Idvariantdetail, "idx_variantparamdetail_idvariantdetail");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_variantparamdetail_idvariantparamtype");

            //    entity.HasIndex(e => e.Idvariantparamtypevalue, "idx_variantparamdetail_idvariantparamtypevalue");

            //    entity.Property(e => e.Idvariantparamdetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariantparamdetail");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idcoloraccordance).HasColumnName("idcoloraccordance");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idvariantdetail).HasColumnName("idvariantdetail");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue).HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.HasOne(d => d.IdcolorNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idcolor)
            //        .HasConstraintName("FK_variantparamdetail_color");

            //    entity.HasOne(d => d.IdcoloraccordanceNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idcoloraccordance)
            //        .HasConstraintName("FK_variantparamdetail_coloraccordance");

            //    entity.HasOne(d => d.IdconstructiontypeNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idconstructiontype)
            //        .HasConstraintName("FK_variantparamdetail_constructiontype");

            //    entity.HasOne(d => d.IdmodelparamvalueNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idmodelparamvalue)
            //        .HasConstraintName("FK_variantparamdetail_modelparamvalue");

            //    entity.HasOne(d => d.IdvariantdetailNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idvariantdetail)
            //        .HasConstraintName("FK_variantparamdetail_variantdetail");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_variantparam_variantparamtypedetail");

            //    entity.HasOne(d => d.IdvariantparamtypevalueNavigation)
            //        .WithMany(p => p.Variantparamdetails)
            //        .HasForeignKey(d => d.Idvariantparamtypevalue)
            //        .HasConstraintName("FK_variantparamdetail_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Variantparamtype>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariantparamtype);

            //    entity.ToTable("variantparamtype");

            //    entity.Property(e => e.Idvariantparamtype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Allow1).HasColumnName("allow_1");

            //    entity.Property(e => e.Allow2).HasColumnName("allow_2");

            //    entity.Property(e => e.Allow3).HasColumnName("allow_3");

            //    entity.Property(e => e.Allow4).HasColumnName("allow_4");

            //    entity.Property(e => e.AllowGp).HasColumnName("allow_gp");

            //    entity.Property(e => e.AllowIns).HasColumnName("allow_ins");

            //    entity.Property(e => e.AllowInsd).HasColumnName("allow_insd");

            //    entity.Property(e => e.AllowM2).HasColumnName("allow_m2");

            //    entity.Property(e => e.AllowMp).HasColumnName("allow_mp");

            //    entity.Property(e => e.AllowShtg).HasColumnName("allow_shtg");

            //    entity.Property(e => e.AllowSt).HasColumnName("allow_st");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(1024)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Type).HasColumnName("type");
            //});

            //modelBuilder.Entity<Variantparamtypevalue>(entity =>
            //{
            //    entity.HasKey(e => e.Idvariantparamtypevalue);

            //    entity.ToTable("variantparamtypevalue");

            //    entity.HasIndex(e => e.Idvariantparamtype, "idx_variantparamtypevalue_idvariantparamtype");

            //    entity.Property(e => e.Idvariantparamtypevalue)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvariantparamtypevalue");

            //    entity.Property(e => e.Idvariantparamtype).HasColumnName("idvariantparamtype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdvariantparamtypeNavigation)
            //        .WithMany(p => p.Variantparamtypevalues)
            //        .HasForeignKey(d => d.Idvariantparamtype)
            //        .HasConstraintName("FK_variantparamtypevalue_variantparamtypevalue");
            //});

            //modelBuilder.Entity<Varianttype>(entity =>
            //{
            //    entity.HasKey(e => e.Idvarianttype);

            //    entity.ToTable("varianttype");

            //    entity.Property(e => e.Idvarianttype)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvarianttype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Pic).HasColumnName("pic");
            //});

            //modelBuilder.Entity<Vectorpicture>(entity =>
            //{
            //    entity.HasKey(e => e.Idvectorpicture);

            //    entity.ToTable("vectorpicture");

            //    entity.Property(e => e.Idvectorpicture)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvectorpicture");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Model).HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Using).HasColumnName("using");

            //    entity.Property(e => e.Vectorpicture1).HasColumnName("vectorpicture");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.XPos).HasColumnName("x_pos");

            //    entity.Property(e => e.YPos).HasColumnName("y_pos");
            //});

            //modelBuilder.Entity<Vectorpicturedetail>(entity =>
            //{
            //    entity.HasKey(e => e.Idvectorpicturedetail);

            //    entity.ToTable("vectorpicturedetail");

            //    entity.HasIndex(e => e.Idvectorpicture, "idx_vectorpicturedetail_idvectorpicture");

            //    entity.Property(e => e.Idvectorpicturedetail)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idvectorpicturedetail");

            //    entity.Property(e => e.Ang)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("ang");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idvectorpicture).HasColumnName("idvectorpicture");

            //    entity.Property(e => e.X1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("x1");

            //    entity.Property(e => e.Y1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("y1");

            //    entity.HasOne(d => d.IdvectorpictureNavigation)
            //        .WithMany(p => p.Vectorpicturedetails)
            //        .HasForeignKey(d => d.Idvectorpicture)
            //        .HasConstraintName("FK_vectorpicturedetail_vectorpicture");
            //});

            //modelBuilder.Entity<Dto.Version>(entity =>
            //{
            //    entity.HasKey(e => e.Idversion)
            //        .HasName("version_pkey");

            //    entity.ToTable("versions");

            //    entity.HasIndex(e => e.Guid, "UQ__versions__432D9E6F")
            //        .IsUnique();

            //    entity.Property(e => e.Idversion)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idversion");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Serial)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("serial");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Versiondate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("versiondate");

            //    entity.Property(e => e.Versiondate2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("versiondate2");

            //    entity.Property(e => e.Versiongroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("versiongroup");
            //});

            //modelBuilder.Entity<ViewActionhistory>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_actionhistory");

            //    entity.Property(e => e.ActionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("action_name");

            //    entity.Property(e => e.ActiongroupName)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("actiongroup_name");

            //    entity.Property(e => e.Adddate1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate1");

            //    entity.Property(e => e.Adddate2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate2");

            //    entity.Property(e => e.Adddate3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddate3");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("decimal(18, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addstr1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("fio");

            //    entity.Property(e => e.Idaction).HasColumnName("idaction");

            //    entity.Property(e => e.Idactiongroup).HasColumnName("idactiongroup");

            //    entity.Property(e => e.Idactionhistory).HasColumnName("idactionhistory");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");
            //});

            //modelBuilder.Entity<ViewActivGoodkitgroup>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_activ_goodkitgroup");

            //    entity.Property(e => e.Idgoodkitgroup).HasColumnName("idgoodkitgroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Isvisible).HasColumnName("isvisible");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewAddarea>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_addarea");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");
            //});

            //modelBuilder.Entity<ViewAddbuild>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_addbuild");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.CityregionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("cityregion_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddbuild).HasColumnName("idaddbuild");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Idaddstreet).HasColumnName("idaddstreet");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.StreetName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("street_name");

            //    entity.Property(e => e.StreetShortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("street_shortname");
            //});

            //modelBuilder.Entity<ViewAddcity>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_addcity");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<ViewAddcityregion>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_addcityregion");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");
            //});

            //modelBuilder.Entity<ViewAddress>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_address");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Apartment).HasColumnName("apartment");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.Build).HasColumnName("build");

            //    entity.Property(e => e.BuildName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("build_name");

            //    entity.Property(e => e.BuildStr)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("build_str");

            //    entity.Property(e => e.Building)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("building");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.CityregionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("cityregion_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Doorway).HasColumnName("doorway");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Freightlift).HasColumnName("freightlift");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddbuild).HasColumnName("idaddbuild");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idaddstreet).HasColumnName("idaddstreet");

            //    entity.Property(e => e.Passengerlift).HasColumnName("passengerlift");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.Speakerphone)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("speakerphone");

            //    entity.Property(e => e.StreetName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("street_name");
            //});

            //modelBuilder.Entity<ViewAddressForfind>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_address_forfind");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Apartment).HasColumnName("apartment");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.Build).HasColumnName("build");

            //    entity.Property(e => e.BuildName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("build_name");

            //    entity.Property(e => e.BuildStr)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("build_str");

            //    entity.Property(e => e.Building)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("building");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.CityregionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("cityregion_name");

            //    entity.Property(e => e.Doorway).HasColumnName("doorway");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Freightlift).HasColumnName("freightlift");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddbuild).HasColumnName("idaddbuild");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idaddstreet).HasColumnName("idaddstreet");

            //    entity.Property(e => e.Passengerlift).HasColumnName("passengerlift");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.Speakerphone)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("speakerphone");

            //    entity.Property(e => e.StreetName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("street_name");
            //});

            //modelBuilder.Entity<ViewAddstreet>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_addstreet");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.CityregionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("cityregion_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Idaddstreet).HasColumnName("idaddstreet");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");
            //});

            //modelBuilder.Entity<ViewAdresselement>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_adresselement");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.BuildName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("build_name");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityregionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("cityregion_name");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddbuild).HasColumnName("idaddbuild");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Idaddstreet).HasColumnName("idaddstreet");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");

            //    entity.Property(e => e.StreetName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("street_name");
            //});

            //modelBuilder.Entity<ViewAdvertisingaction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_advertisingaction");

            //    entity.Property(e => e.AdvertisingactiongroupName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("advertisingactiongroup_name");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtfinish)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtfinish");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idadvertisingaction).HasColumnName("idadvertisingaction");

            //    entity.Property(e => e.Idadvertisingactiongroup).HasColumnName("idadvertisingactiongroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");
            //});

            //modelBuilder.Entity<ViewAgree>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_agree");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Idagree).HasColumnName("idagree");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewAgreementgrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_agreementgrant");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Dtstart)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtstart");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idagreementgrant).HasColumnName("idagreementgrant");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<ViewAllgoodfrommodel>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_allgoodfrommodel");

            //    entity.Property(e => e.GoodIdgood).HasColumnName("good_idgood");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(38, 8)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewAllgoodfromorder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_allgoodfromorder");

            //    entity.Property(e => e.GoodIdgood).HasColumnName("good_idgood");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Isdop).HasColumnName("isdop");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(38, 8)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewAllgoodfromorderprice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_allgoodfromorderprice");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(38, 8)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewAluCityregion>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_alu_cityregion");

            //    entity.Property(e => e.AreaName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("area_name");

            //    entity.Property(e => e.CityName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("city_name");

            //    entity.Property(e => e.CityShortname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("city_shortname");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddarea).HasColumnName("idaddarea");

            //    entity.Property(e => e.Idaddcity).HasColumnName("idaddcity");

            //    entity.Property(e => e.Idaddcityregion).HasColumnName("idaddcityregion");

            //    entity.Property(e => e.Idaddregion).HasColumnName("idaddregion");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Kladrcode)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("kladrcode");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Postindex).HasColumnName("postindex");

            //    entity.Property(e => e.Region).HasColumnName("region");

            //    entity.Property(e => e.RegionName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("region_name");
            //});

            //modelBuilder.Entity<ViewCar>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_car");

            //    entity.Property(e => e.Active).HasColumnName("active");

            //    entity.Property(e => e.CarMarking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("car_marking");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idcarmarking).HasColumnName("idcarmarking");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Idtariff).HasColumnName("idtariff");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Statesign)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("statesign");

            //    entity.Property(e => e.TariffName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("tariff_name");
            //});

            //modelBuilder.Entity<ViewCarmarking>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_carmarking");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcarmarking).HasColumnName("idcarmarking");

            //    entity.Property(e => e.Length).HasColumnName("length");

            //    entity.Property(e => e.Maxroute).HasColumnName("maxroute");

            //    entity.Property(e => e.Maxsqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxsqr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NormCount).HasColumnName("normCount");

            //    entity.Property(e => e.NormDownLoad).HasColumnName("normDownLoad");

            //    entity.Property(e => e.NormS).HasColumnName("normS");

            //    entity.Property(e => e.NormTt).HasColumnName("normTT");

            //    entity.Property(e => e.NormWeight).HasColumnName("normWeight");

            //    entity.Property(e => e.Tonnage)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("tonnage");

            //    entity.Property(e => e.Tonnageue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("tonnageue");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewCashbox>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_cashbox");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewCoatdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_coatdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcoatdoc).HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Qumarking).HasColumnName("qumarking");

            //    entity.Property(e => e.Quwhip).HasColumnName("quwhip");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.StoredepartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name");
            //});

            //modelBuilder.Entity<ViewCoatdocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_coatdocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Idcoatdoc).HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Idcoatdocpos).HasColumnName("idcoatdocpos");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");
            //});

            //modelBuilder.Entity<ViewCoatdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_coatdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idcoatdoc).HasColumnName("idcoatdoc");

            //    entity.Property(e => e.Idcoatdocsign).HasColumnName("idcoatdocsign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewColor>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_color");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Color).HasColumnName("color");

            //    entity.Property(e => e.Colorgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroup");

            //    entity.Property(e => e.ColorgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroup_name");

            //    entity.Property(e => e.ColorgroupNameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("colorgroup_name_strkey");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idcolorgroup).HasColumnName("idcolorgroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numvalue1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue1");

            //    entity.Property(e => e.Numvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue2");

            //    entity.Property(e => e.Numvalue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue3");

            //    entity.Property(e => e.Numvalue4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue4");

            //    entity.Property(e => e.Numvalue5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue5");

            //    entity.Property(e => e.Outername)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("outername");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.ShortnameStrkey)
            //        .HasMaxLength(32)
            //        .HasColumnName("shortname_strkey");

            //    entity.Property(e => e.Windraw).HasColumnName("windraw");
            //});

            //modelBuilder.Entity<ViewCommongroupgrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_commongroupgrant");

            //    entity.Property(e => e.Allow).HasColumnName("allow");

            //    entity.Property(e => e.Dany).HasColumnName("dany");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcommongroup).HasColumnName("idcommongroup");

            //    entity.Property(e => e.Idcommongroupgrant).HasColumnName("idcommongroupgrant");

            //    entity.Property(e => e.Idcommongrouptype).HasColumnName("idcommongrouptype");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup_name");
            //});

            //modelBuilder.Entity<ViewConstructiontype>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_constructiontype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Openview).HasColumnName("openview");

            //    entity.Property(e => e.OpenviewName)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("openview_name");
            //});

            //modelBuilder.Entity<ViewCustomer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customer");

            //    entity.Property(e => e.Account)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account");

            //    entity.Property(e => e.AccountBank)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account_bank");

            //    entity.Property(e => e.AccountBik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("account_bik");

            //    entity.Property(e => e.AccountKs)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("account_ks");

            //    entity.Property(e => e.AccountName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("account_name");

            //    entity.Property(e => e.AccountRs)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("account_rs");

            //    entity.Property(e => e.Addbit1).HasColumnName("addbit1");

            //    entity.Property(e => e.Addbit2).HasColumnName("addbit2");

            //    entity.Property(e => e.Addclassification1Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification1_name");

            //    entity.Property(e => e.Addclassification2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification2_name");

            //    entity.Property(e => e.Addclassification3Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification3_name");

            //    entity.Property(e => e.Addclassification4Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification4_name");

            //    entity.Property(e => e.Addclassification5Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification5_name");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addnum)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addresslegal)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addresslegal");

            //    entity.Property(e => e.Addstr)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.AgreementName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreement_name");

            //    entity.Property(e => e.Auditorfio)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("auditorfio");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Birthday)
            //        .HasColumnType("datetime")
            //        .HasColumnName("birthday");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.Contactpeople)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contactpeople");

            //    entity.Property(e => e.Credit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("credit");

            //    entity.Property(e => e.CustomercategoryName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("customercategory_name");

            //    entity.Property(e => e.CustomerformName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("customerform_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Directorfio)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfio");

            //    entity.Property(e => e.Directorfounding)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfounding");

            //    entity.Property(e => e.Directorposition)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("directorposition");

            //    entity.Property(e => e.Discount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount");

            //    entity.Property(e => e.Discount10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount10");

            //    entity.Property(e => e.Discount11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount11");

            //    entity.Property(e => e.Discount12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount12");

            //    entity.Property(e => e.Discount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount2");

            //    entity.Property(e => e.Discount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount3");

            //    entity.Property(e => e.Discount4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount4");

            //    entity.Property(e => e.Discount5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount5");

            //    entity.Property(e => e.Discount6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount6");

            //    entity.Property(e => e.Discount7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount7");

            //    entity.Property(e => e.Discount8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount8");

            //    entity.Property(e => e.Discount9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount9");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtbirth)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtbirth");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Face).HasColumnName("face");

            //    entity.Property(e => e.FaceName)
            //        .HasMaxLength(9)
            //        .IsUnicode(false)
            //        .HasColumnName("face_name");

            //    entity.Property(e => e.Firstname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("firstname");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddclassification1).HasColumnName("idaddclassification1");

            //    entity.Property(e => e.Idaddclassification2).HasColumnName("idaddclassification2");

            //    entity.Property(e => e.Idaddclassification3).HasColumnName("idaddclassification3");

            //    entity.Property(e => e.Idaddclassification4).HasColumnName("idaddclassification4");

            //    entity.Property(e => e.Idaddclassification5).HasColumnName("idaddclassification5");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idaddresslegal).HasColumnName("idaddresslegal");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idaw).HasColumnName("idaw");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomercategory).HasColumnName("idcustomercategory");

            //    entity.Property(e => e.Idcustomerform).HasColumnName("idcustomerform");

            //    entity.Property(e => e.Idcustomergroup).HasColumnName("idcustomergroup");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeople4).HasColumnName("idpeople4");

            //    entity.Property(e => e.Idpeoplecre).HasColumnName("idpeoplecre");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsourceinfo).HasColumnName("idsourceinfo");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kaccount)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("kaccount");

            //    entity.Property(e => e.Kpp)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("kpp");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name2");

            //    entity.Property(e => e.Name3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name3");

            //    entity.Property(e => e.Ogrn)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("ogrn");

            //    entity.Property(e => e.Okato)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("okato");

            //    entity.Property(e => e.Okonh)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okonh");

            //    entity.Property(e => e.Okpo)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okpo");

            //    entity.Property(e => e.ParentcustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("parentcustomer_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Passportdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("passportdate");

            //    entity.Property(e => e.Passportdtissue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("passportdtissue");

            //    entity.Property(e => e.Passportexit)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("passportexit");

            //    entity.Property(e => e.Passportissued)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("passportissued");

            //    entity.Property(e => e.Passportnum)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("passportnum");

            //    entity.Property(e => e.Passportnumber).HasColumnName("passportnumber");

            //    entity.Property(e => e.Passportserial)
            //        .HasMaxLength(4)
            //        .IsUnicode(false)
            //        .HasColumnName("passportserial");

            //    entity.Property(e => e.Passportseries)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("passportseries");

            //    entity.Property(e => e.People2Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people2_fio");

            //    entity.Property(e => e.People3Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people3_fio");

            //    entity.Property(e => e.People4Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people4_fio");

            //    entity.Property(e => e.PeopleName)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_name");

            //    entity.Property(e => e.PeoplecreName)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplecre_name");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phone2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone2");

            //    entity.Property(e => e.Phonehome)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonehome");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.SourceinfoName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sourceinfo_name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(9)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Web)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("web");
            //});

            //modelBuilder.Entity<ViewCustomerdestanation>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerdestanation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerdestanation).HasColumnName("idcustomerdestanation");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");
            //});

            //modelBuilder.Entity<ViewCustomerdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerdiraction).HasColumnName("idcustomerdiraction");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewCustomerdiscard>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerdiscard");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiscardComment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("discard_comment");

            //    entity.Property(e => e.DiscardDtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("discard_dtcreate");

            //    entity.Property(e => e.DiscardIdpeople).HasColumnName("discard_idpeople");

            //    entity.Property(e => e.DiscardInactivedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("discard_inactivedate");

            //    entity.Property(e => e.DiscardName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("discard_name");

            //    entity.Property(e => e.DiscardPeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("discard_people_fio");

            //    entity.Property(e => e.DiscardPerc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discard_perc");

            //    entity.Property(e => e.DiscardSm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discard_sm");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerdiscard).HasColumnName("idcustomerdiscard");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");
            //});

            //modelBuilder.Entity<ViewCustomergroupgrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customergroupgrant");

            //    entity.Property(e => e.Allow).HasColumnName("allow");

            //    entity.Property(e => e.Dany).HasColumnName("dany");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcustomergroup).HasColumnName("idcustomergroup");

            //    entity.Property(e => e.Idcustomergroupgrant).HasColumnName("idcustomergroupgrant");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(192)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup_name");
            //});

            //modelBuilder.Entity<ViewCustomerperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerpeople");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Adddt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtreg)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtreg");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpeople).HasColumnName("idcustomerpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplepost).HasColumnName("idpeoplepost");

            //    entity.Property(e => e.Ismain).HasColumnName("ismain");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplePostname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_postname");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");
            //});

            //modelBuilder.Entity<ViewCustomerpricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerpricechange");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Enddate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("enddate");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricechange).HasColumnName("idcustomerpricechange");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.PricechangeComment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_comment");

            //    entity.Property(e => e.PricechangeFororder).HasColumnName("pricechange_fororder");

            //    entity.Property(e => e.PricechangeFororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_fororder_typ");

            //    entity.Property(e => e.PricechangeIsperc).HasColumnName("pricechange_isperc");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.PricechangeTyp).HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangeTypname)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typname");

            //    entity.Property(e => e.PricechangegroupFullname)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechangegroup_fullname");

            //    entity.Property(e => e.Startdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("startdate");
            //});

            //modelBuilder.Entity<ViewCustomerpricechangehistory>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerpricechangehistory");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricechange).HasColumnName("idcustomerpricechange");

            //    entity.Property(e => e.Idcustomerpricechangehistory).HasColumnName("idcustomerpricechangehistory");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");
            //});

            //modelBuilder.Entity<ViewCustomerpricepolicy>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerpricepolicy");

            //    entity.Property(e => e.Creditlimit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("creditlimit");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtexpiration)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtexpiration");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricepolicy).HasColumnName("idcustomerpricepolicy");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price10");

            //    entity.Property(e => e.Price11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price11");

            //    entity.Property(e => e.Price12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price12");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Price8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price8");

            //    entity.Property(e => e.Price9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price9");

            //    entity.Property(e => e.PricechangeComment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_comment");

            //    entity.Property(e => e.PricechangeIsperc).HasColumnName("pricechange_isperc");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.PricechangeTyp).HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangeTypname)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typname");
            //});

            //modelBuilder.Entity<ViewCustomerpricepolicyhistory>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerpricepolicyhistory");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Creditlimit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("creditlimit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtexpiration)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtexpiration");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomerpricepolicy).HasColumnName("idcustomerpricepolicy");

            //    entity.Property(e => e.Idcustomerpricepolicyhistory).HasColumnName("idcustomerpricepolicyhistory");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price10)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price10");

            //    entity.Property(e => e.Price11)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price11");

            //    entity.Property(e => e.Price12)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price12");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Price8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price8");

            //    entity.Property(e => e.Price9)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price9");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");
            //});

            //modelBuilder.Entity<ViewCustomerrel>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customerrel");

            //    entity.Property(e => e.Idcustomerchild).HasColumnName("idcustomerchild");

            //    entity.Property(e => e.Idcustomerparent).HasColumnName("idcustomerparent");

            //    entity.Property(e => e.Idcustomerrel).HasColumnName("idcustomerrel");

            //    entity.Property(e => e.Idcustomertyperel).HasColumnName("idcustomertyperel");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewCustomersign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_customersign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomersign).HasColumnName("idcustomersign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewDelivdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.CarMarking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("car_marking");

            //    entity.Property(e => e.CarName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("car_name");

            //    entity.Property(e => e.CarStatesign)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("car_statesign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocgroup).HasColumnName("iddelivdocgroup");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdoccar).HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeopledrv).HasColumnName("idpeopledrv");

            //    entity.Property(e => e.Idpeopleexp).HasColumnName("idpeopleexp");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idtariff).HasColumnName("idtariff");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopledrvName)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopledrv_name");

            //    entity.Property(e => e.PeopleexpName)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleexp_name");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Poeple2Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("poeple2_fio");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Ride).HasColumnName("ride");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.StoredepartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name");

            //    entity.Property(e => e.TariffName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("tariff_name");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<ViewDelivdocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionAutosave).HasColumnName("diraction_autosave");

            //    entity.Property(e => e.DiractionDuration).HasColumnName("diraction_duration");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.DiractionNumpos).HasColumnName("diraction_numpos");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocdiraction).HasColumnName("iddelivdocdiraction");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewDelivdocdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocdiraction).HasColumnName("iddelivdocdiraction");

            //    entity.Property(e => e.Iddelivdocdiractionpeople).HasColumnName("iddelivdocdiractionpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewDelivdocperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdocpeople");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt2");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocpeople).HasColumnName("iddelivdocpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.People2Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people2_fio");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewDelivdocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idbox).HasColumnName("idbox");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocpos).HasColumnName("iddelivdocpos");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<ViewDelivdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_delivdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Iddelivdoc).HasColumnName("iddelivdoc");

            //    entity.Property(e => e.Iddelivdocsign).HasColumnName("iddelivdocsign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewDepartmentmember>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_departmentmember");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DepartmentAddint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("department_addint");

            //    entity.Property(e => e.DepartmentAddstr)
            //        .HasMaxLength(1024)
            //        .IsUnicode(false)
            //        .HasColumnName("department_addstr");

            //    entity.Property(e => e.DepartmentComment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("department_comment");

            //    entity.Property(e => e.DepartmentName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("department_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddepartmentmember).HasColumnName("iddepartmentmember");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleLastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_lastname");

            //    entity.Property(e => e.PeopleMiddlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_middlename");

            //    entity.Property(e => e.PeopleName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_name");

            //    entity.Property(e => e.PeoplePostname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_postname");

            //    entity.Property(e => e.PeopleTabno)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("people_tabno");
            //});

            //modelBuilder.Entity<ViewDestanation>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_destanation");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Destanationgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanationgroup");

            //    entity.Property(e => e.Factory)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("factory");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Idroute).HasColumnName("idroute");

            //    entity.Property(e => e.Maxpyr).HasColumnName("maxpyr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.PyramidName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pyramid_name");

            //    entity.Property(e => e.Pyrgroup).HasColumnName("pyrgroup");

            //    entity.Property(e => e.Pyrgrouping).HasColumnName("pyrgrouping");

            //    entity.Property(e => e.Transit).HasColumnName("transit");
            //});

            //modelBuilder.Entity<ViewDestanationcustomer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_destanationcustomer");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddestanationcustomer).HasColumnName("iddestanationcustomer");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");
            //});

            //modelBuilder.Entity<ViewDestanationseller>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_destanationseller");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddestanationseller).HasColumnName("iddestanationseller");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");
            //});

            //modelBuilder.Entity<ViewDiractiongrantDatum>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_diractiongrant_data");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Iddiractiongrant).HasColumnName("iddiractiongrant");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Image).HasColumnName("image");

            //    entity.Property(e => e.Isadd).HasColumnName("isadd");

            //    entity.Property(e => e.Iseditcomment).HasColumnName("iseditcomment");

            //    entity.Property(e => e.Iseditexecutor).HasColumnName("iseditexecutor");

            //    entity.Property(e => e.Iseditfact).HasColumnName("iseditfact");

            //    entity.Property(e => e.Iseditplan).HasColumnName("iseditplan");

            //    entity.Property(e => e.Isremove).HasColumnName("isremove");

            //    entity.Property(e => e.Key)
            //        .HasMaxLength(36)
            //        .IsUnicode(false)
            //        .HasColumnName("key");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentkey)
            //        .HasMaxLength(36)
            //        .IsUnicode(false)
            //        .HasColumnName("parentkey");
            //});

            //modelBuilder.Entity<ViewDiractiongroupFromGrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_diractiongroup_from_grants");

            //    entity.Property(e => e.Iddiractiongroup).HasColumnName("iddiractiongroup");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewDiscard>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_discard");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.Property(e => e.Iddiscardgroup).HasColumnName("iddiscardgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Inactivedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("inactivedate");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");
            //});

            //modelBuilder.Entity<ViewDocgroupgrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docgroupgrant");

            //    entity.Property(e => e.Allow).HasColumnName("allow");

            //    entity.Property(e => e.Dany).HasColumnName("dany");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocgroup).HasColumnName("iddocgroup");

            //    entity.Property(e => e.Iddocgroupgrant).HasColumnName("iddocgroupgrant");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup_name");
            //});

            //modelBuilder.Entity<ViewDoclock>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_doclock");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.DocName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("doc_name");

            //    entity.Property(e => e.DocappearanceName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("docappearance_name");

            //    entity.Property(e => e.Dtlock)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlock");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddoclock).HasColumnName("iddoclock");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewDocoper>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docoper");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Agreenumpos).HasColumnName("agreenumpos");

            //    entity.Property(e => e.Agreeprefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreeprefix");

            //    entity.Property(e => e.Agreesuffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreesuffix");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Docgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docgroup");

            //    entity.Property(e => e.Doctype)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("doctype");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddoc1C)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("iddoc1C");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Prefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("prefix");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Storetyp).HasColumnName("storetyp");

            //    entity.Property(e => e.StoretypName)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("storetyp_name");

            //    entity.Property(e => e.Suffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("suffix");
            //});

            //modelBuilder.Entity<ViewDocopergrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docopergrant");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Agreenumpos).HasColumnName("agreenumpos");

            //    entity.Property(e => e.Agreeprefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreeprefix");

            //    entity.Property(e => e.Agreesuffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("agreesuffix");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Docgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docgroup");

            //    entity.Property(e => e.Doctype)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("doctype");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddoc1C)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("iddoc1C");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Prefix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("prefix");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Storetyp).HasColumnName("storetyp");

            //    entity.Property(e => e.StoretypName)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("storetyp_name");

            //    entity.Property(e => e.Suffix)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("suffix");
            //});

            //modelBuilder.Entity<ViewDocscriptgrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docscriptgrant");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocappearanceName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("docappearance_name");

            //    entity.Property(e => e.DocscriptComment)
            //        .IsUnicode(false)
            //        .HasColumnName("docscript_comment");

            //    entity.Property(e => e.DocscriptGroupname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("docscript_groupname");

            //    entity.Property(e => e.DocscriptName)
            //        .IsUnicode(false)
            //        .HasColumnName("docscript_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocscript).HasColumnName("iddocscript");

            //    entity.Property(e => e.Iddocscriptgrant).HasColumnName("iddocscriptgrant");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");
            //});

            //modelBuilder.Entity<ViewDocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docsign");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocsign).HasColumnName("iddocsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueGuid).HasColumnName("signvalue_guid");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewDocstate>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docstate");

            //    entity.Property(e => e.Beginstate).HasColumnName("beginstate");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocappearanceName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("docappearance_name");

            //    entity.Property(e => e.DocappearanceTablename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("docappearance_tablename");

            //    entity.Property(e => e.Endstate).HasColumnName("endstate");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");
            //});

            //modelBuilder.Entity<ViewDocwork>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docwork");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Dtwork)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtwork");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Iddocitem).HasColumnName("iddocitem");

            //    entity.Property(e => e.Iddocwork).HasColumnName("iddocwork");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.WorkName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("work_name");

            //    entity.Property(e => e.WorkoperName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("workoper_name");

            //    entity.Property(e => e.Worktime)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("worktime");
            //});

            //modelBuilder.Entity<ViewDocworkperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_docworkpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Iddocwork).HasColumnName("iddocwork");

            //    entity.Property(e => e.Iddocworkpeople).HasColumnName("iddocworkpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleLastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_lastname");

            //    entity.Property(e => e.PeopleMiddlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_middlename");

            //    entity.Property(e => e.PeopleName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_name");
            //});

            //modelBuilder.Entity<ViewDopgoodFromorder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_dopgood_fromorder");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(17, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewEquipmentdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_equipmentdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewEquipmentdocfile>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_equipmentdocfile");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.EquipmentFilemask)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_filemask");

            //    entity.Property(e => e.EquipmentMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_marking");

            //    entity.Property(e => e.EquipmentName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_name");

            //    entity.Property(e => e.EquipmentNumpos).HasColumnName("equipment_numpos");

            //    entity.Property(e => e.EquipmentSavefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_savefile");

            //    entity.Property(e => e.EquipmentSavepath)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_savepath");

            //    entity.Property(e => e.EquipmentdocDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("equipmentdoc_dtdoc");

            //    entity.Property(e => e.Idequipment).HasColumnName("idequipment");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentdocfile).HasColumnName("idequipmentdocfile");

            //    entity.Property(e => e.Savefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("savefile");

            //    entity.Property(e => e.Workfile)
            //        .HasColumnType("text")
            //        .HasColumnName("workfile");
            //});

            //modelBuilder.Entity<ViewEquipmentdocfile1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_equipmentdocfile1");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.EquipmentFilemask)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_filemask");

            //    entity.Property(e => e.EquipmentMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_marking");

            //    entity.Property(e => e.EquipmentName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_name");

            //    entity.Property(e => e.EquipmentNumpos).HasColumnName("equipment_numpos");

            //    entity.Property(e => e.EquipmentSavefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_savefile");

            //    entity.Property(e => e.EquipmentSavepath)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("equipment_savepath");

            //    entity.Property(e => e.EquipmentdocDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("equipmentdoc_dtdoc");

            //    entity.Property(e => e.Idequipment).HasColumnName("idequipment");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentdocfile).HasColumnName("idequipmentdocfile");

            //    entity.Property(e => e.Savefile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("savefile");

            //    entity.Property(e => e.Workfile).HasColumnName("workfile");
            //});

            //modelBuilder.Entity<ViewEquipmentglass>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_equipmentglass");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cart");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idequipmentdoc).HasColumnName("idequipmentdoc");

            //    entity.Property(e => e.Idequipmentglass).HasColumnName("idequipmentglass");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewError>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_error");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.ErrorgroupName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("errorgroup_name");

            //    entity.Property(e => e.ErrortypeName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("errortype_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Iderrorgroup).HasColumnName("iderrorgroup");

            //    entity.Property(e => e.Iderrortype).HasColumnName("iderrortype");

            //    entity.Property(e => e.Issave).HasColumnName("issave");

            //    entity.Property(e => e.Message1)
            //        .IsUnicode(false)
            //        .HasColumnName("message1");

            //    entity.Property(e => e.Message2)
            //        .IsUnicode(false)
            //        .HasColumnName("message2");

            //    entity.Property(e => e.Message3)
            //        .IsUnicode(false)
            //        .HasColumnName("message3");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Showtype).HasColumnName("showtype");

            //    entity.Property(e => e.ShowtypeName)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("showtype_name");

            //    entity.Property(e => e.UnpackPicture).HasColumnName("unpack_picture");
            //});

            //modelBuilder.Entity<ViewErrorgroup>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_errorgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iderrorgroup).HasColumnName("iderrorgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewErrortype>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_errortype");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iderrortype).HasColumnName("iderrortype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<ViewFile>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_files");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Filebyte).HasColumnName("filebyte");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idfiles).HasColumnName("idfiles");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Path)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("path");
            //});

            //modelBuilder.Entity<ViewFinparamcalc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_finparamcalc");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.FinparamActiveparam).HasColumnName("finparam_activeparam");

            //    entity.Property(e => e.FinparamComment)
            //        .HasColumnType("text")
            //        .HasColumnName("finparam_comment");

            //    entity.Property(e => e.FinparamName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("finparam_name");

            //    entity.Property(e => e.FinparamNumpos).HasColumnName("finparam_numpos");

            //    entity.Property(e => e.FinparamParamgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("finparam_paramgroup");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idfinparamcalc).HasColumnName("idfinparamcalc");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Smbasecrypt).HasColumnName("smbasecrypt");

            //    entity.Property(e => e.Smcrypt).HasColumnName("smcrypt");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewFinparamcalcTr>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_finparamcalc_tr");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.FinparamActiveparam).HasColumnName("finparam_activeparam");

            //    entity.Property(e => e.FinparamComment)
            //        .HasColumnType("text")
            //        .HasColumnName("finparam_comment");

            //    entity.Property(e => e.FinparamName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("finparam_name");

            //    entity.Property(e => e.FinparamNumpos).HasColumnName("finparam_numpos");

            //    entity.Property(e => e.FinparamParamgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("finparam_paramgroup");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idfinparamcalc).HasColumnName("idfinparamcalc");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Smbasecrypt).HasColumnName("smbasecrypt");

            //    entity.Property(e => e.Smcrypt).HasColumnName("smcrypt");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewGlass>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_glass");

            //    entity.Property(e => e.Camernost).HasColumnName("camernost");

            //    entity.Property(e => e.Color).HasColumnName("color");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.FilltypeName)
            //        .HasMaxLength(19)
            //        .IsUnicode(false)
            //        .HasColumnName("filltype_name");

            //    entity.Property(e => e.Glassgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("glassgroup");

            //    entity.Property(e => e.GlassgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("glassgroup_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Heatresistance)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("heatresistance");

            //    entity.Property(e => e.Idfilltype).HasColumnName("idfilltype");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.Idglassgroup).HasColumnName("idglassgroup");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Marking2)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking2");

            //    entity.Property(e => e.Marking3)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking3");

            //    entity.Property(e => e.Marking4)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking4");

            //    entity.Property(e => e.Marking5)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("marking5");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Ramkaoffset).HasColumnName("ramkaoffset");

            //    entity.Property(e => e.Soundinsulation)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("soundinsulation");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");
            //});

            //modelBuilder.Entity<ViewGlassdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_glassdetail");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GlasselementMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("glasselement_marking");

            //    entity.Property(e => e.GlasselementName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("glasselement_name");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idglass).HasColumnName("idglass");

            //    entity.Property(e => e.Idglassdetail).HasColumnName("idglassdetail");

            //    entity.Property(e => e.Idglasselement).HasColumnName("idglasselement");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(6)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");
            //});

            //modelBuilder.Entity<ViewGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_good");

            //    entity.Property(e => e.Color1Groupname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_groupname");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color1Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_shortname");

            //    entity.Property(e => e.Color2Groupname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_groupname");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Color2Shortname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_shortname");

            //    entity.Property(e => e.ColorgroupcustomName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroupcustom_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Extmarking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("extmarking");

            //    entity.Property(e => e.GoodgroupIsactive).HasColumnName("goodgroup_isactive");

            //    entity.Property(e => e.GoodgroupIsvisible).HasColumnName("goodgroup_isvisible");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodmeasureDefault)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodmeasure_default");

            //    entity.Property(e => e.GoodoptimName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodoptim_name");

            //    entity.Property(e => e.GoodpricegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodpricegroup_name");

            //    entity.Property(e => e.GoodpricegroupPrice1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodpricegroup_price1");

            //    entity.Property(e => e.GoodpricegroupPrice2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodpricegroup_price2");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodgroup).HasColumnName("idgoodgroup");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idgoodpricegroup).HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Idgoodtype).HasColumnName("idgoodtype");

            //    entity.Property(e => e.Idgoodtype2).HasColumnName("idgoodtype2");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Ismy).HasColumnName("ismy");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Maxost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxost");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Minost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost");

            //    entity.Property(e => e.Minost2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Packing)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("packing");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1crypt).HasColumnName("price1crypt");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Purchase).HasColumnName("purchase");

            //    entity.Property(e => e.PurchaseName)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("purchase_name");

            //    entity.Property(e => e.Rank1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank1");

            //    entity.Property(e => e.Rank2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank2");

            //    entity.Property(e => e.Replenishment).HasColumnName("replenishment");

            //    entity.Property(e => e.ReplenishmentName)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("replenishment_name");

            //    entity.Property(e => e.Reserve).HasColumnName("reserve");

            //    entity.Property(e => e.Showinnopaper).HasColumnName("showinnopaper");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Sqr2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr2");

            //    entity.Property(e => e.StoredepartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Usehouse).HasColumnName("usehouse");

            //    entity.Property(e => e.Valut2Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut2_shortname");

            //    entity.Property(e => e.Valut3Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut3_shortname");

            //    entity.Property(e => e.Valut4Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut4_shortname");

            //    entity.Property(e => e.Valut5Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut5_shortname");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("waste");

            //    entity.Property(e => e.Waste2)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste2");

            //    entity.Property(e => e.Waste3)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste3");

            //    entity.Property(e => e.Waste4)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste4");

            //    entity.Property(e => e.Waste5)
            //        .HasColumnType("numeric(10, 2)")
            //        .HasColumnName("waste5");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewGoodanalogdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodanalogdetail");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodanalog).HasColumnName("idgoodanalog");

            //    entity.Property(e => e.Idgoodanalogdetail).HasColumnName("idgoodanalogdetail");
            //});

            //modelBuilder.Entity<ViewGoodbuffer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodbuffer");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(257)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cell)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("cell");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idmanufactdocin).HasColumnName("idmanufactdocin");

            //    entity.Property(e => e.Idmanufactdocout).HasColumnName("idmanufactdocout");

            //    entity.Property(e => e.Idoptimdocin).HasColumnName("idoptimdocin");

            //    entity.Property(e => e.Idoptimdocout).HasColumnName("idoptimdocout");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Row)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("row");

            //    entity.Property(e => e.Status).HasColumnName("status");

            //    entity.Property(e => e.StatusName)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("status_name");

            //    entity.Property(e => e.StoredepartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewGoodcolorgroupprice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodcolorgroupprice");

            //    entity.Property(e => e.ColorgrouppriceName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroupprice_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Diffprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("diffprice");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodpricegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodpricegroup_name");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodcolorgroupprice).HasColumnName("idgoodcolorgroupprice");

            //    entity.Property(e => e.Idgoodpricegroup).HasColumnName("idgoodpricegroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.K1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k1");

            //    entity.Property(e => e.K2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k2");

            //    entity.Property(e => e.Planprice)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("planprice");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.PriceK1)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("price_k1");

            //    entity.Property(e => e.PriceK2)
            //        .HasColumnType("numeric(38, 6)")
            //        .HasColumnName("price_k2");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");
            //});

            //modelBuilder.Entity<ViewGoodcolorparam>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodcolorparam");

            //    entity.Property(e => e.ColorgrouppriceName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroupprice_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Deliverytime).HasColumnName("deliverytime");

            //    entity.Property(e => e.Dtpost)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtpost");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idcolorgroupprice).HasColumnName("idcolorgroupprice");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodcolorparam).HasColumnName("idgoodcolorparam");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Maxost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxost");

            //    entity.Property(e => e.Minost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost");

            //    entity.Property(e => e.Minost2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minost2");

            //    entity.Property(e => e.Purchase).HasColumnName("purchase");

            //    entity.Property(e => e.PurchaseName)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("purchase_name");

            //    entity.Property(e => e.Rank1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank1");

            //    entity.Property(e => e.Rank2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("rank2");

            //    entity.Property(e => e.Rate)
            //        .HasColumnType("numeric(8, 4)")
            //        .HasColumnName("rate");

            //    entity.Property(e => e.Replenishment).HasColumnName("replenishment");

            //    entity.Property(e => e.ReplenishmentName)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("replenishment_name");

            //    entity.Property(e => e.Usehouse).HasColumnName("usehouse");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("waste");
            //});

            //modelBuilder.Entity<ViewGoodkitdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodkitdetail");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodColor1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_color1_name");

            //    entity.Property(e => e.GoodColor2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_color2_name");

            //    entity.Property(e => e.GoodIdcolor1).HasColumnName("good_idcolor1");

            //    entity.Property(e => e.GoodIdcolor2).HasColumnName("good_idcolor2");

            //    entity.Property(e => e.GoodIdgoodgroup).HasColumnName("good_idgoodgroup");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodIdgoodtype2).HasColumnName("good_idgoodtype2");

            //    entity.Property(e => e.GoodIdvalut).HasColumnName("good_idvalut");

            //    entity.Property(e => e.GoodIsmy).HasColumnName("good_ismy");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodkitName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodkit_name");

            //    entity.Property(e => e.GoodkitgroupIsactive).HasColumnName("goodkitgroup_isactive");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Isconst).HasColumnName("isconst");

            //    entity.Property(e => e.Ismain).HasColumnName("ismain");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewGoodmeasure>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodmeasure");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Def).HasColumnName("def");

            //    entity.Property(e => e.Def2).HasColumnName("def2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodmeasure).HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.K)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<ViewGoodoptim>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodoptim");

            //    entity.Property(e => e.Buffer).HasColumnName("buffer");

            //    entity.Property(e => e.Canrotate).HasColumnName("canrotate");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Db).HasColumnName("db");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Differentwhipsforbeamsize).HasColumnName("differentwhipsforbeamsize");

            //    entity.Property(e => e.Divideremainder).HasColumnName("divideremainder");

            //    entity.Property(e => e.Dl).HasColumnName("dl");

            //    entity.Property(e => e.Dopuskoptim).HasColumnName("dopuskoptim");

            //    entity.Property(e => e.Dr).HasColumnName("dr");

            //    entity.Property(e => e.Drez).HasColumnName("drez");

            //    entity.Property(e => e.Dt).HasColumnName("dt");

            //    entity.Property(e => e.Freza).HasColumnName("freza");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Maxrez).HasColumnName("maxrez");

            //    entity.Property(e => e.Maxworkrests).HasColumnName("maxworkrests");

            //    entity.Property(e => e.Minost).HasColumnName("minost");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Optimstyle).HasColumnName("optimstyle");

            //    entity.Property(e => e.OptimstyleName)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("optimstyle_name");

            //    entity.Property(e => e.Optimtype).HasColumnName("optimtype");

            //    entity.Property(e => e.OptimtypeName)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("optimtype_name");

            //    entity.Property(e => e.Ostmax).HasColumnName("ostmax");

            //    entity.Property(e => e.Ostmin).HasColumnName("ostmin");

            //    entity.Property(e => e.Quality).HasColumnName("quality");

            //    entity.Property(e => e.QualityName)
            //        .HasMaxLength(10)
            //        .IsUnicode(false)
            //        .HasColumnName("quality_name");

            //    entity.Property(e => e.Step).HasColumnName("step");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");

            //    entity.Property(e => e.Typeoptimend).HasColumnName("typeoptimend");

            //    entity.Property(e => e.TypeoptimendName)
            //        .HasMaxLength(15)
            //        .IsUnicode(false)
            //        .HasColumnName("typeoptimend_name");

            //    entity.Property(e => e.Typerez).HasColumnName("typerez");

            //    entity.Property(e => e.TyperezName)
            //        .HasMaxLength(14)
            //        .IsUnicode(false)
            //        .HasColumnName("typerez_name");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Worklen).HasColumnName("worklen");

            //    entity.Property(e => e.WorklenHeight).HasColumnName("worklen_height");

            //    entity.Property(e => e.WorklenWidth).HasColumnName("worklen_width");
            //});

            //modelBuilder.Entity<ViewGoodost>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodost");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Dtreg)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtreg");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodPrice1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("good_price1");

            //    entity.Property(e => e.GoodPrice2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("good_price2");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodost).HasColumnName("idgoodost");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");

            //    entity.Property(e => e.Valnew)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valnew");

            //    entity.Property(e => e.Valold)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valold");
            //});

            //modelBuilder.Entity<ViewGoodprice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodprice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodprice).HasColumnName("idgoodprice");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Valut2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut2_name");

            //    entity.Property(e => e.Valut2Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut2_shortname");

            //    entity.Property(e => e.Valut3Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut3_name");

            //    entity.Property(e => e.Valut3Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut3_shortname");

            //    entity.Property(e => e.Valut4Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut4_name");

            //    entity.Property(e => e.Valut4Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut4_shortname");

            //    entity.Property(e => e.Valut5Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut5_name");

            //    entity.Property(e => e.Valut5Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut5_shortname");

            //    entity.Property(e => e.ValutName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");
            //});

            //modelBuilder.Entity<ViewGoodservice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_goodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Goodservicegroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservicegroup");

            //    entity.Property(e => e.GroupDeleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("group_deleted");

            //    entity.Property(e => e.GroupIsactive).HasColumnName("group_isactive");

            //    entity.Property(e => e.GroupName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("group_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idgoodservicegroup).HasColumnName("idgoodservicegroup");

            //    entity.Property(e => e.Idvalut1).HasColumnName("idvalut1");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Ismy).HasColumnName("ismy");

            //    entity.Property(e => e.Isperc).HasColumnName("isperc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Valut1Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut1_shortname");

            //    entity.Property(e => e.Valut2Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut2_shortname");

            //    entity.Property(e => e.Valut3Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut3_shortname");

            //    entity.Property(e => e.Valut4Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut4_shortname");

            //    entity.Property(e => e.Valut5Shortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut5_shortname");
            //});

            //modelBuilder.Entity<ViewInstalldoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocgroup).HasColumnName("idinstalldocgroup");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderName1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name1");

            //    entity.Property(e => e.Orderinstall).HasColumnName("orderinstall");

            //    entity.Property(e => e.People2Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people2_fio");

            //    entity.Property(e => e.People3Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people3_fio");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<ViewInstalldocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocdiraction).HasColumnName("idinstalldocdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewInstalldocdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocdiraction).HasColumnName("idinstalldocdiraction");

            //    entity.Property(e => e.Idinstalldocdiractionpeople).HasColumnName("idinstalldocdiractionpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewInstalldocgoodservice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdocgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodserviceGoodservicegroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_goodservicegroup");

            //    entity.Property(e => e.GoodserviceGroupname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_groupname");

            //    entity.Property(e => e.GoodserviceIsperc).HasColumnName("goodservice_isperc");

            //    entity.Property(e => e.GoodserviceName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_name");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocgoodservice).HasColumnName("idinstalldocgoodservice");

            //    entity.Property(e => e.Idinstalldocpos).HasColumnName("idinstalldocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.InstalldocposNumpos).HasColumnName("installdocpos_numpos");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.OrderAgreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_agreedate");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewInstalldocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdocpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocpos).HasColumnName("idinstalldocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<ViewInstalldocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_installdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idinstalldoc).HasColumnName("idinstalldoc");

            //    entity.Property(e => e.Idinstalldocsign).HasColumnName("idinstalldocsign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewManufactdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idmanufactdiraction).HasColumnName("idmanufactdiraction");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewManufactdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdiraction).HasColumnName("idmanufactdiraction");

            //    entity.Property(e => e.Idmanufactdiractionpeople).HasColumnName("idmanufactdiractionpeople");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewManufactdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdoc");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Flownum).HasColumnName("flownum");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocgroup).HasColumnName("idmanufactdocgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.MdAddstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("md_addstr");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Partnum).HasColumnName("partnum");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Qugroup).HasColumnName("qugroup");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Shiftnum).HasColumnName("shiftnum");

            //    entity.Property(e => e.Workshopnum).HasColumnName("workshopnum");
            //});

            //modelBuilder.Entity<ViewManufactdocmodelpic>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocmodelpic");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Picture).HasColumnName("picture");
            //});

            //modelBuilder.Entity<ViewManufactdocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.ColorinName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin_name");

            //    entity.Property(e => e.ColoroutName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.ConstrtypeName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("constrtype_name");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationIddestanation).HasColumnName("destanation_iddestanation");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.GoodIdgood).HasColumnName("good_idgood");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("_idgoodoptim");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Isstandart).HasColumnName("_isstandart");

            //    entity.Property(e => e.Manufactname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactname");

            //    entity.Property(e => e.ModelClass).HasColumnName("model_class");

            //    entity.Property(e => e.ModelPicture).HasColumnName("model_picture");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpyramid).HasColumnName("numpyramid");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderComment)
            //        .IsUnicode(false)
            //        .HasColumnName("order_comment");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemAng1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("orderitem_ang1");

            //    entity.Property(e => e.OrderitemAng2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("orderitem_ang2");

            //    entity.Property(e => e.OrderitemConstrnum).HasColumnName("orderitem_constrnum");

            //    entity.Property(e => e.OrderitemHeight).HasColumnName("orderitem_height");

            //    entity.Property(e => e.OrderitemIdcolor1).HasColumnName("orderitem_idcolor1");

            //    entity.Property(e => e.OrderitemIdcolor2).HasColumnName("orderitem_idcolor2");

            //    entity.Property(e => e.OrderitemIdmodel).HasColumnName("orderitem_idmodel");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.OrderitemQu)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("orderitem_qu");

            //    entity.Property(e => e.OrderitemRadius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("orderitem_radius1");

            //    entity.Property(e => e.OrderitemRadius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("orderitem_radius2");

            //    entity.Property(e => e.OrderitemThick).HasColumnName("orderitem_thick");

            //    entity.Property(e => e.OrderitemTyp).HasColumnName("orderitem_typ");

            //    entity.Property(e => e.OrderitemWeight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("orderitem_weight");

            //    entity.Property(e => e.OrderitemWidth).HasColumnName("orderitem_width");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.QuGlass1)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("qu_glass");

            //    entity.Property(e => e.QuImpost1)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("qu_impost");

            //    entity.Property(e => e.QuStv1)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("qu_stv");

            //    entity.Property(e => e.QuWinue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_qu_winue");

            //    entity.Property(e => e.QuWinue1)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("qu_winue");

            //    entity.Property(e => e.Quglass)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_quglass");

            //    entity.Property(e => e.Quimpost)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_quimpost");

            //    entity.Property(e => e.Quready)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_qustore");

            //    entity.Property(e => e.Qustv)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_qustv");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_smbase");

            //    entity.Property(e => e.SystemFurn)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_furn");

            //    entity.Property(e => e.SystemProf)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_prof");

            //    entity.Property(e => e.TableQu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("_table_qu");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Whiplen).HasColumnName("_whiplen");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Worklen).HasColumnName("_worklen");
            //});

            //modelBuilder.Entity<ViewManufactdocposLogist>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocpos_logist");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Dtlogist)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtlogist");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmanufactdocpossign).HasColumnName("idmanufactdocpossign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");
            //});

            //modelBuilder.Entity<ViewManufactdocposPlan>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocpos_plan");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Manufactname)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactname");

            //    entity.Property(e => e.ModelClass).HasColumnName("model_class");

            //    entity.Property(e => e.ModelPicture).HasColumnName("model_picture");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpyramid).HasColumnName("numpyramid");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemHeight).HasColumnName("orderitem_height");

            //    entity.Property(e => e.OrderitemIdmodel).HasColumnName("orderitem_idmodel");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.OrderitemQu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("orderitem_qu");

            //    entity.Property(e => e.OrderitemThick).HasColumnName("orderitem_thick");

            //    entity.Property(e => e.OrderitemTyp).HasColumnName("orderitem_typ");

            //    entity.Property(e => e.OrderitemWeight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("orderitem_weight");

            //    entity.Property(e => e.OrderitemWidth).HasColumnName("orderitem_width");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Posgroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("posgroup");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.QuDopprof).HasColumnName("qu_dopprof");

            //    entity.Property(e => e.QuGlass1)
            //        .HasColumnType("numeric(26, 4)")
            //        .HasColumnName("qu_glass");

            //    entity.Property(e => e.QuStv1)
            //        .HasColumnType("numeric(26, 4)")
            //        .HasColumnName("qu_stv");

            //    entity.Property(e => e.Quglass).HasColumnName("_quglass");

            //    entity.Property(e => e.Quready)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("quready");

            //    entity.Property(e => e.Qustv).HasColumnName("_qustv");

            //    entity.Property(e => e.SystemFurn)
            //        .HasMaxLength(4000)
            //        .HasColumnName("system_furn");

            //    entity.Property(e => e.SystemProf)
            //        .HasMaxLength(4000)
            //        .HasColumnName("system_prof");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewManufactdocpyramid>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocpyramid");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(20)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactdoccar).HasColumnName("idmanufactdoccar");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmanufactdocpyramid).HasColumnName("idmanufactdocpyramid");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.ManufactdocDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("manufactdoc_dtdoc");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpyramid).HasColumnName("numpyramid");

            //    entity.Property(e => e.OrderAgreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_agreedate");

            //    entity.Property(e => e.OrderAgrename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agrename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.OrderitemQu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("orderitem_qu");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Side).HasColumnName("side");
            //});

            //modelBuilder.Entity<ViewManufactdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactdocsign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactsign).HasColumnName("idmanufactsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignIntvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sign_intvalue");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignStrvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_strvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewManufactsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_manufactsign");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idmanufactsign).HasColumnName("idmanufactsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignIntvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sign_intvalue");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignStrvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_strvalue");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewMarkingfilterdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_markingfilterdetail");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmarkingfilter).HasColumnName("idmarkingfilter");

            //    entity.Property(e => e.Idmarkingfilterdetail).HasColumnName("idmarkingfilterdetail");
            //});

            //modelBuilder.Entity<ViewMeasure>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_measure");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Factor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("factor");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.MeasureTyp)
            //        .HasMaxLength(14)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_typ");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Shortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("shortname");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewMessage>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_message");

            //    entity.Property(e => e.Addfile).HasColumnName("addfile");

            //    entity.Property(e => e.Addfilename)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addfilename");

            //    entity.Property(e => e.Answer)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("answer");

            //    entity.Property(e => e.Bodytext)
            //        .IsUnicode(false)
            //        .HasColumnName("bodytext");

            //    entity.Property(e => e.Check).HasColumnName("check");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Dtaction)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtaction");

            //    entity.Property(e => e.Dtcheck)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcheck");

            //    entity.Property(e => e.Dtread)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtread");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddoc).HasColumnName("iddoc");

            //    entity.Property(e => e.Iddocappearance).HasColumnName("iddocappearance");

            //    entity.Property(e => e.Idmessage).HasColumnName("idmessage");

            //    entity.Property(e => e.Idmessagetype).HasColumnName("idmessagetype");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Isread).HasColumnName("isread");

            //    entity.Property(e => e.Messagetext)
            //        .HasColumnType("text")
            //        .HasColumnName("messagetext");

            //    entity.Property(e => e.MessagetypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("messagetype_name");

            //    entity.Property(e => e.PeopleFio2)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio2");

            //    entity.Property(e => e.PoepleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("poeple_fio");
            //});

            //modelBuilder.Entity<ViewModel>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_model");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewModelcalc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_modelcalc");

            //    entity.Property(e => e.Addbool).HasColumnName("addbool");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(20, 5)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.AddnumInfo).HasColumnName("addnum_info");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.AddstringInfo)
            //        .HasMaxLength(1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstring_info");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodColorinname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_colorinname");

            //    entity.Property(e => e.GoodColoroutname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_coloroutname");

            //    entity.Property(e => e.GoodIdcolor1).HasColumnName("good_idcolor1");

            //    entity.Property(e => e.GoodIdcolor2).HasColumnName("good_idcolor2");

            //    entity.Property(e => e.GoodIdgoodgroup).HasColumnName("good_idgoodgroup");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodIdgoodtype2).HasColumnName("good_idgoodtype2");

            //    entity.Property(e => e.GoodIdvalut).HasColumnName("good_idvalut");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.GoodtypeNumpos2).HasColumnName("goodtype_numpos2");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.OrderitemConstrnum).HasColumnName("orderitem_constrnum");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.OrderitemQu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("orderitem_qu");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("quinmanufact");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Smbasecrypt).HasColumnName("smbasecrypt");

            //    entity.Property(e => e.Smcrypt).HasColumnName("smcrypt");

            //    entity.Property(e => e.Sourcetype).HasColumnName("sourcetype");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Waste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("waste");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewModelparam>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_modelparam");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.ColorName)
            //        .HasMaxLength(193)
            //        .IsUnicode(false)
            //        .HasColumnName("color_name");

            //    entity.Property(e => e.Colorfilter)
            //        .IsUnicode(false)
            //        .HasColumnName("colorfilter");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrtypelist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("constrtypelist");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Furnsystemlist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("furnsystemlist");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcolor).HasColumnName("idcolor");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelparamgroup).HasColumnName("idmodelparamgroup");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idmodelpartroot).HasColumnName("idmodelpartroot");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Iscolor).HasColumnName("iscolor");

            //    entity.Property(e => e.Isdesignerprocess).HasColumnName("isdesignerprocess");

            //    entity.Property(e => e.Isint1).HasColumnName("isint1");

            //    entity.Property(e => e.Isint2).HasColumnName("isint2");

            //    entity.Property(e => e.Isstr1).HasColumnName("isstr1");

            //    entity.Property(e => e.Isstr2).HasColumnName("isstr2");

            //    entity.Property(e => e.ModelpartName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Namecolor)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namecolor");

            //    entity.Property(e => e.Nameint1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("nameint1");

            //    entity.Property(e => e.Nameint2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("nameint2");

            //    entity.Property(e => e.Namestr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namestr1");

            //    entity.Property(e => e.Namestr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("namestr2");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Onlyfromlist).HasColumnName("onlyfromlist");

            //    entity.Property(e => e.Opentypelist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("opentypelist");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Strvalue2Strkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue2_strkey");

            //    entity.Property(e => e.StrvalueStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("strvalue_strkey");

            //    entity.Property(e => e.Systemlist)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("systemlist");

            //    entity.Property(e => e.Tomodel).HasColumnName("tomodel");

            //    entity.Property(e => e.UiVisible).HasColumnName("ui_visible");

            //    entity.Property(e => e.Unvisibleintvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("unvisibleintvalue");

            //    entity.Property(e => e.Unvisiblestrvalue)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("unvisiblestrvalue");

            //    entity.Property(e => e.Unvisiblestrvalue2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("unvisiblestrvalue2");

            //    entity.Property(e => e.Unvisiblestrvalue2Strkey)
            //        .HasMaxLength(512)
            //        .HasColumnName("unvisiblestrvalue2_strkey");

            //    entity.Property(e => e.UnvisiblestrvalueStrkey)
            //        .HasMaxLength(512)
            //        .HasColumnName("unvisiblestrvalue_strkey");

            //    entity.Property(e => e.Useunvisible).HasColumnName("useunvisible");
            //});

            //modelBuilder.Entity<ViewModelparamcalc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_modelparamcalc");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Id).HasColumnName("id");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelparamcalc).HasColumnName("idmodelparamcalc");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.ModelparamName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelparam_name");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.Visible).HasColumnName("visible");
            //});

            //modelBuilder.Entity<ViewModelpic>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_modelpic");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelpic).HasColumnName("idmodelpic");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Markingshpross)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("markingshpross");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewModelscript>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_modelscript");

            //    entity.Property(e => e.Activescript).HasColumnName("activescript");

            //    entity.Property(e => e.Codescript)
            //        .HasColumnType("text")
            //        .HasColumnName("codescript");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Compiled).HasColumnName("compiled");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Dtcompile)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcompile");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idmodelscript).HasColumnName("idmodelscript");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.ModelpartName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart_name");

            //    entity.Property(e => e.ModelpartNumpos).HasColumnName("modelpart_numpos");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Pdb).HasColumnName("pdb");

            //    entity.Property(e => e.Scriptgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("scriptgroup");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewMyRand>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_my_rand");
            //});

            //modelBuilder.Entity<ViewNewid>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_newid");

            //    entity.Property(e => e.NewId).HasColumnName("new_id");
            //});

            //modelBuilder.Entity<ViewNopaper>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_nopaper");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defect).HasColumnName("defect");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtship)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtship");

            //    entity.Property(e => e.Idnopaper).HasColumnName("idnopaper");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople1).HasColumnName("idpeople1");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Nodefect).HasColumnName("nodefect");

            //    entity.Property(e => e.People1Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people1_fio");

            //    entity.Property(e => e.People2Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people2_fio");

            //    entity.Property(e => e.People3Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people3_fio");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Quship).HasColumnName("quship");

            //    entity.Property(e => e.Ship).HasColumnName("ship");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewOptimdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idmanufactdoc).HasColumnName("idmanufactdoc");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgroup).HasColumnName("idoptimdocgroup");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.Property(e => e.StoredocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedoc_name");
            //});

            //modelBuilder.Entity<ViewOptimdocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocdiraction).HasColumnName("idoptimdocdiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleexec).HasColumnName("idpeopleexec");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.PeopleexecFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleexec_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewOptimdocdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocdiraction).HasColumnName("idoptimdocdiraction");

            //    entity.Property(e => e.Idoptimdocdiractionpeople).HasColumnName("idoptimdocdiractionpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewOptimdocgoodin>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocgoodin");

            //    entity.Property(e => e.ColorinName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin_name");

            //    entity.Property(e => e.ColoroutName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolorbase).HasColumnName("idcolorbase");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgoodin).HasColumnName("idoptimdocgoodin");

            //    entity.Property(e => e.Idoptimdocgoodout).HasColumnName("idoptimdocgoodout");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOptimdocgoodout>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocgoodout");

            //    entity.Property(e => e.ColorinName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin_name");

            //    entity.Property(e => e.ColoroutName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolorbase).HasColumnName("idcolorbase");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgoodout).HasColumnName("idoptimdocgoodout");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOptimdocpic>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocpic");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodbuffer).HasColumnName("idgoodbuffer");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocgoodin).HasColumnName("idoptimdocgoodin");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Thickost).HasColumnName("thickost");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Whiplen).HasColumnName("whiplen");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOptimdocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(40)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Cart).HasColumnName("cart");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodIdgoodoptim).HasColumnName("good_idgoodoptim");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodoptimBuffer).HasColumnName("goodoptim_buffer");

            //    entity.Property(e => e.GoodoptimCanrotate).HasColumnName("goodoptim_canrotate");

            //    entity.Property(e => e.GoodoptimDb).HasColumnName("goodoptim_db");

            //    entity.Property(e => e.GoodoptimDl).HasColumnName("goodoptim_dl");

            //    entity.Property(e => e.GoodoptimDopuskoptim).HasColumnName("goodoptim_dopuskoptim");

            //    entity.Property(e => e.GoodoptimDr).HasColumnName("goodoptim_dr");

            //    entity.Property(e => e.GoodoptimDrez).HasColumnName("goodoptim_drez");

            //    entity.Property(e => e.GoodoptimDt).HasColumnName("goodoptim_dt");

            //    entity.Property(e => e.GoodoptimFreza).HasColumnName("goodoptim_freza");

            //    entity.Property(e => e.GoodoptimHeight).HasColumnName("goodoptim_height");

            //    entity.Property(e => e.GoodoptimMaxrez).HasColumnName("goodoptim_maxrez");

            //    entity.Property(e => e.GoodoptimMinost).HasColumnName("goodoptim_minost");

            //    entity.Property(e => e.GoodoptimOstmax).HasColumnName("goodoptim_ostmax");

            //    entity.Property(e => e.GoodoptimOstmin).HasColumnName("goodoptim_ostmin");

            //    entity.Property(e => e.GoodoptimQuality).HasColumnName("goodoptim_quality");

            //    entity.Property(e => e.GoodoptimStep).HasColumnName("goodoptim_step");

            //    entity.Property(e => e.GoodoptimTyp).HasColumnName("goodoptim_typ");

            //    entity.Property(e => e.GoodoptimTypeoptimend).HasColumnName("goodoptim_typeoptimend");

            //    entity.Property(e => e.GoodoptimTyperez).HasColumnName("goodoptim_typerez");

            //    entity.Property(e => e.GoodoptimWhiplen).HasColumnName("goodoptim_whiplen");

            //    entity.Property(e => e.GoodoptimWidth).HasColumnName("goodoptim_width");

            //    entity.Property(e => e.GoodoptimWorklen).HasColumnName("goodoptim_worklen");

            //    entity.Property(e => e.GoodoptimWorklenHeight).HasColumnName("goodoptim_worklen_height");

            //    entity.Property(e => e.GoodoptimWorklenWidth).HasColumnName("goodoptim_worklen_width");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodoptim).HasColumnName("idgoodoptim");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocpic).HasColumnName("idoptimdocpic");

            //    entity.Property(e => e.Idoptimdocpos).HasColumnName("idoptimdocpos");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.MaxWorkrests).HasColumnName("max_workrests");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpair).HasColumnName("numpair");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Numpos2).HasColumnName("numpos2");

            //    entity.Property(e => e.Numpos3).HasColumnName("numpos3");

            //    entity.Property(e => e.Numposbalka).HasColumnName("numposbalka");

            //    entity.Property(e => e.Numwhip).HasColumnName("numwhip");

            //    entity.Property(e => e.OptimType).HasColumnName("optim_type");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Profilemarking)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("profilemarking");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Row).HasColumnName("row");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOptimdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_optimdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idoptimdoc).HasColumnName("idoptimdoc");

            //    entity.Property(e => e.Idoptimdocsign).HasColumnName("idoptimdocsign");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewOrder>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orders");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Adddt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt2");

            //    entity.Property(e => e.Adddt3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt3");

            //    entity.Property(e => e.Addinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Addtext)
            //        .HasColumnType("text")
            //        .HasColumnName("addtext");

            //    entity.Property(e => e.AdvertisingactionName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("advertisingaction_name");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreedate2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("_agreedate2");

            //    entity.Property(e => e.AgreementName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreement_name");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerDiscount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("customer_discount");

            //    entity.Property(e => e.CustomerDiscount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("customer_discount2");

            //    entity.Property(e => e.CustomerDiscount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("customer_discount3");

            //    entity.Property(e => e.CustomerFace).HasColumnName("customer_face");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.CustomerName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name2");

            //    entity.Property(e => e.CustomerName3)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name3");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DepartmentName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("department_name");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DiscardName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("discard_name");

            //    entity.Property(e => e.DocoperAddint).HasColumnName("docoper_addint");

            //    entity.Property(e => e.DocoperAddstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_addstr");

            //    entity.Property(e => e.DocoperGroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_group");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idadvertisingaction).HasColumnName("idadvertisingaction");

            //    entity.Property(e => e.Idagree).HasColumnName("idagree");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Idcustomer3).HasColumnName("idcustomer3");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordersgroup).HasColumnName("idordersgroup");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeople4).HasColumnName("idpeople4");

            //    entity.Property(e => e.Idpeopledesigner).HasColumnName("idpeopledesigner");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsourceinfo).HasColumnName("idsourceinfo");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Installinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("installinfo");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrdersgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("ordersgroup_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleFio2)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio2");

            //    entity.Property(e => e.PeopleFio3)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio3");

            //    entity.Property(e => e.PeopleFio4)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio4");

            //    entity.Property(e => e.PeopleFioDesigner)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio_designer");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Productinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("productinfo");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Saved2).HasColumnName("saved2");

            //    entity.Property(e => e.SellerDiscount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("seller_discount");

            //    entity.Property(e => e.SellerDiscount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("seller_discount2");

            //    entity.Property(e => e.SellerDiscount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("seller_discount3");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sizeinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("sizeinfo");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.SourceinfoName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sourceinfo_name");

            //    entity.Property(e => e.Supplyinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("supplyinfo");

            //    entity.Property(e => e.Transportinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("transportinfo");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewOrderbudget>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderbudget");

            //    entity.Property(e => e.BudgetD)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("budget_d");

            //    entity.Property(e => e.BudgetK)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("budget_k");

            //    entity.Property(e => e.BudgetName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("budget_name");

            //    entity.Property(e => e.BudgetNumpos).HasColumnName("budget_numpos");

            //    entity.Property(e => e.BudgetPart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("budget_part");

            //    entity.Property(e => e.BudgetPerc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("budget_perc");

            //    entity.Property(e => e.BudgetgroupName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("budgetgroup_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.D)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("d");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idbudget).HasColumnName("idbudget");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderbudget).HasColumnName("idorderbudget");

            //    entity.Property(e => e.K)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("k");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");
            //});

            //modelBuilder.Entity<ViewOrderdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionAutosave).HasColumnName("diraction_autosave");

            //    entity.Property(e => e.DiractionDuration).HasColumnName("diraction_duration");

            //    entity.Property(e => e.DiractionGuid).HasColumnName("diraction_guid");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.DiractionNumpos).HasColumnName("diraction_numpos");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderdiraction).HasColumnName("idorderdiraction");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleFio3)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio3");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");

            //    entity.Property(e => e.Poolnum).HasColumnName("poolnum");

            //    entity.Property(e => e.Poolnumcustom).HasColumnName("poolnumcustom");

            //    entity.Property(e => e.Posgroup).HasColumnName("posgroup");

            //    entity.Property(e => e.Sortnum).HasColumnName("sortnum");

            //    entity.Property(e => e.Workshop).HasColumnName("workshop");
            //});

            //modelBuilder.Entity<ViewOrderdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderdiraction).HasColumnName("idorderdiraction");

            //    entity.Property(e => e.Idorderdiractionpeople).HasColumnName("idorderdiractionpeople");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewOrdererror>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_ordererror");

            //    entity.Property(e => e.Addinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.ErrorCode)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("error_code");

            //    entity.Property(e => e.ErrorIderrortype).HasColumnName("error_iderrortype");

            //    entity.Property(e => e.ErrorIssave).HasColumnName("error_issave");

            //    entity.Property(e => e.ErrorMessage1)
            //        .IsUnicode(false)
            //        .HasColumnName("error_message1");

            //    entity.Property(e => e.ErrorMessage2)
            //        .IsUnicode(false)
            //        .HasColumnName("error_message2");

            //    entity.Property(e => e.ErrorMessage3)
            //        .IsUnicode(false)
            //        .HasColumnName("error_message3");

            //    entity.Property(e => e.ErrorName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("error_name");

            //    entity.Property(e => e.ErrorShowtype).HasColumnName("error_showtype");

            //    entity.Property(e => e.ErrortypeName)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("errortype_name");

            //    entity.Property(e => e.Iderror).HasColumnName("iderror");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordererror).HasColumnName("idordererror");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.ShowtypeName)
            //        .HasMaxLength(13)
            //        .IsUnicode(false)
            //        .HasColumnName("showtype_name");

            //    entity.Property(e => e.UnpackPicture).HasColumnName("unpack_picture");
            //});

            //modelBuilder.Entity<ViewOrdergood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_ordergood");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.ColorinName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin_name");

            //    entity.Property(e => e.ColoroutName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodIdcolor1).HasColumnName("good_idcolor1");

            //    entity.Property(e => e.GoodIdcolor2).HasColumnName("good_idcolor2");

            //    entity.Property(e => e.GoodIdgoodgroup).HasColumnName("good_idgoodgroup");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodIdgoodtype2).HasColumnName("good_idgoodtype2");

            //    entity.Property(e => e.GoodIsmy).HasColumnName("good_ismy");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.GoodtypeNumpos2).HasColumnName("goodtype_numpos2");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact).HasColumnName("quinmanufact");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOrdergoodservice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_ordergoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Date1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date1");

            //    entity.Property(e => e.Date2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date2");

            //    entity.Property(e => e.Date3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("date3");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodserviceComment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_comment");

            //    entity.Property(e => e.GoodserviceGoodservicegroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_goodservicegroup");

            //    entity.Property(e => e.GoodserviceGroupname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_groupname");

            //    entity.Property(e => e.GoodserviceGuid).HasColumnName("goodservice_guid");

            //    entity.Property(e => e.GoodserviceIdvalut1).HasColumnName("goodservice_idvalut1");

            //    entity.Property(e => e.GoodserviceIdvalut2).HasColumnName("goodservice_idvalut2");

            //    entity.Property(e => e.GoodserviceIdvalut3).HasColumnName("goodservice_idvalut3");

            //    entity.Property(e => e.GoodserviceIdvalut4).HasColumnName("goodservice_idvalut4");

            //    entity.Property(e => e.GoodserviceIdvalut5).HasColumnName("goodservice_idvalut5");

            //    entity.Property(e => e.GoodserviceIsmy).HasColumnName("goodservice_ismy");

            //    entity.Property(e => e.GoodserviceIsperc).HasColumnName("goodservice_isperc");

            //    entity.Property(e => e.GoodserviceName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_name");

            //    entity.Property(e => e.GoodservicePrice1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price1");

            //    entity.Property(e => e.GoodservicePrice2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price2");

            //    entity.Property(e => e.GoodservicePrice3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price3");

            //    entity.Property(e => e.GoodservicePrice4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price4");

            //    entity.Property(e => e.GoodservicePrice5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price5");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergoodservice).HasColumnName("idordergoodservice");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewOrderitem>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderitem");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addnum6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum6");

            //    entity.Property(e => e.Addnum7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum7");

            //    entity.Property(e => e.Addnum8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum8");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.ColorinName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorin_name");

            //    entity.Property(e => e.ColorinNameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("colorin_name_strkey");

            //    entity.Property(e => e.ColoroutName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorout_name");

            //    entity.Property(e => e.ColoroutNameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("colorout_name_strkey");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrnum).HasColumnName("constrnum");

            //    entity.Property(e => e.ConstrtypeName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("constrtype_name");

            //    entity.Property(e => e.ConstrtypeNameStrkey)
            //        .HasMaxLength(64)
            //        .HasColumnName("constrtype_name_strkey");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.FurnsysName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("furnsys_name");

            //    entity.Property(e => e.FurnsysNameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("furnsys_name_strkey");

            //    entity.Property(e => e.GoodIdcolor1).HasColumnName("good_idcolor1");

            //    entity.Property(e => e.GoodIdcolor2).HasColumnName("good_idcolor2");

            //    entity.Property(e => e.GoodIdgoodgroup).HasColumnName("good_idgoodgroup");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodIdgoodtype2).HasColumnName("good_idgoodtype2");

            //    entity.Property(e => e.GoodIsmy).HasColumnName("good_ismy");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.GoodtypeNumpos).HasColumnName("goodtype_numpos");

            //    entity.Property(e => e.GoodtypeNumpos2).HasColumnName("goodtype_numpos2");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Hide).HasColumnName("hide");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfurnsys).HasColumnName("idfurnsys");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idorderitemold).HasColumnName("idorderitemold");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isaddgood).HasColumnName("isaddgood");

            //    entity.Property(e => e.Isglass).HasColumnName("isglass");

            //    entity.Property(e => e.Ismoskit).HasColumnName("ismoskit");

            //    entity.Property(e => e.Ispf).HasColumnName("ispf");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Isstandart).HasColumnName("isstandart");

            //    entity.Property(e => e.MdocDt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("mdoc_dt");

            //    entity.Property(e => e.MdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("mdoc_name");

            //    entity.Property(e => e.MdocQu)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("mdoc_qu");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.ModelName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("model_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.PowerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("power_name");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.ProductiontypeProductiontypegroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_productiontypegroup");

            //    entity.Property(e => e.ProductiontypeTyp).HasColumnName("productiontype_typ");

            //    entity.Property(e => e.ProfsysName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("profsys_name");

            //    entity.Property(e => e.ProfsysNameStrkey)
            //        .HasMaxLength(128)
            //        .HasColumnName("profsys_name_strkey");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact).HasColumnName("quinmanufact");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Sqrtotal)
            //        .HasColumnType("numeric(31, 6)")
            //        .HasColumnName("sqrtotal");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Vdfield1).HasColumnName("vdfield1");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.Property(e => e.Winue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue2");

            //    entity.Property(e => e.Winue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue3");
            //});

            //modelBuilder.Entity<ViewOrderitemModel>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderitem_model");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addnum6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum6");

            //    entity.Property(e => e.Addnum7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum7");

            //    entity.Property(e => e.Addnum8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum8");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrnum).HasColumnName("constrnum");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.FurnsysName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("furnsys_name");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Hide).HasColumnName("hide");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfurnsys).HasColumnName("idfurnsys");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idorderitemold).HasColumnName("idorderitemold");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isaddgood).HasColumnName("isaddgood");

            //    entity.Property(e => e.Isglass).HasColumnName("isglass");

            //    entity.Property(e => e.Ismoskit).HasColumnName("ismoskit");

            //    entity.Property(e => e.Ispf).HasColumnName("ispf");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Isstandart).HasColumnName("isstandart");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.ModelClass).HasColumnName("model_class");

            //    entity.Property(e => e.ModelColorin)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("model_colorin");

            //    entity.Property(e => e.ModelColorout)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("model_colorout");

            //    entity.Property(e => e.ModelCt)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("model_ct");

            //    entity.Property(e => e.ModelName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("model_name");

            //    entity.Property(e => e.ModelPicture).HasColumnName("model_picture");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.ProfsysName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("profsys_name");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact).HasColumnName("quinmanufact");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.SqrModel).HasColumnName("sqr_model");

            //    entity.Property(e => e.SqrRama).HasColumnName("sqr_rama");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.Property(e => e.Winue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue2");

            //    entity.Property(e => e.Winue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue3");
            //});

            //modelBuilder.Entity<ViewOrderitemOrdergood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderitem_ordergood");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.PricechangeOiNac)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_oi_nac");

            //    entity.Property(e => e.PricechangeOrderNac)
            //        .HasColumnType("numeric(38, 6)")
            //        .HasColumnName("pricechange_order_nac");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(17, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewOrderitemPcGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderitem_pc_good");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addnum6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum6");

            //    entity.Property(e => e.Addnum7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum7");

            //    entity.Property(e => e.Addnum8)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum8");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Assemblyunit)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("assemblyunit");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Constrnum).HasColumnName("constrnum");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.GoodIdgoodtype).HasColumnName("good_idgoodtype");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodWaste)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("good_waste");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Hide).HasColumnName("hide");

            //    entity.Property(e => e.Idcolorin).HasColumnName("idcolorin");

            //    entity.Property(e => e.Idcolorout).HasColumnName("idcolorout");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idfurnsys).HasColumnName("idfurnsys");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgoodkit).HasColumnName("idgoodkit");

            //    entity.Property(e => e.Idgoodkitdetail).HasColumnName("idgoodkitdetail");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idorderitemold).HasColumnName("idorderitemold");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofsys).HasColumnName("idprofsys");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isaddgood).HasColumnName("isaddgood");

            //    entity.Property(e => e.Isglass).HasColumnName("isglass");

            //    entity.Property(e => e.Ismoskit).HasColumnName("ismoskit");

            //    entity.Property(e => e.Ispf).HasColumnName("ispf");

            //    entity.Property(e => e.Isready).HasColumnName("isready");

            //    entity.Property(e => e.Isstandart).HasColumnName("isstandart");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.ModelName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("model_name");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrdergoodSm)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("ordergood_sm");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.PricechangeNac)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_nac");

            //    entity.Property(e => e.PricechangeOrdernac)
            //        .HasColumnType("numeric(38, 6)")
            //        .HasColumnName("pricechange_ordernac");

            //    entity.Property(e => e.PricechangeSkidka)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_skidka");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Quinmanufact).HasColumnName("quinmanufact");

            //    entity.Property(e => e.Quready).HasColumnName("quready");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smbase2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase2");

            //    entity.Property(e => e.Smbase3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase3");

            //    entity.Property(e => e.Smbase4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase4");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");

            //    entity.Property(e => e.Winue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue2");

            //    entity.Property(e => e.Winue3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue3");
            //});

            //modelBuilder.Entity<ViewOrderpricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orderpricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Fororder).HasColumnName("fororder");

            //    entity.Property(e => e.FororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("fororder_typ");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idorderpricechange).HasColumnName("idorderpricechange");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.PricechangeIsperc).HasColumnName("pricechange_isperc");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.PricechangeTyp)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangeTyp2).HasColumnName("pricechange_typ2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewOrdersPricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_orders_pricechange");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Adddt2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt2");

            //    entity.Property(e => e.Adddt3)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt3");

            //    entity.Property(e => e.Addinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Addtext)
            //        .HasColumnType("text")
            //        .HasColumnName("addtext");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerDiscount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("customer_discount");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Floor).HasColumnName("floor");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idadvertisingaction).HasColumnName("idadvertisingaction");

            //    entity.Property(e => e.Idagree).HasColumnName("idagree");

            //    entity.Property(e => e.Idagreement).HasColumnName("idagreement");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Idcustomer3).HasColumnName("idcustomer3");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddiscard).HasColumnName("iddiscard");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordersgroup).HasColumnName("idordersgroup");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpeople4).HasColumnName("idpeople4");

            //    entity.Property(e => e.Idpeopledesigner).HasColumnName("idpeopledesigner");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsourceinfo).HasColumnName("idsourceinfo");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Installinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("installinfo");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrdersgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("ordersgroup_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.PricechangeNac)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_nac");

            //    entity.Property(e => e.PricechangeSkidka)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_skidka");

            //    entity.Property(e => e.PricechangeSkidkaOi)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("pricechange_skidka_oi");

            //    entity.Property(e => e.Productinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("productinfo");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.Saved2).HasColumnName("saved2");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sizeinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("sizeinfo");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.SumPositionPrice)
            //        .HasColumnType("numeric(38, 4)")
            //        .HasColumnName("sum_position_price");

            //    entity.Property(e => e.Supplyinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("supplyinfo");

            //    entity.Property(e => e.Transportinfo)
            //        .IsUnicode(false)
            //        .HasColumnName("transportinfo");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewOrdersign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_ordersign");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idordersign).HasColumnName("idordersign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueGuid).HasColumnName("signvalue_guid");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewOrdersmodelpic>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_ordersmodelpic");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");
            //});

            //modelBuilder.Entity<ViewPayment>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_payment");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.CashboxName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cashbox_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpayment).HasColumnName("idpayment");

            //    entity.Property(e => e.Idpaymentdocgroup).HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.PaymentgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("paymentgroup_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.SupplydocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("supplydoc_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewPaymentdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_paymentdoc");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.CashboxName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("cashbox_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcashbox).HasColumnName("idcashbox");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpaymentdoc).HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Idpaymentdocgroup).HasColumnName("idpaymentdocgroup");

            //    entity.Property(e => e.Idpaymentgroup).HasColumnName("idpaymentgroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PaymentgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("paymentgroup_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Saved).HasColumnName("saved");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.SupplydocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("supplydoc_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewPaymentdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_paymentdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpaymentdoc).HasColumnName("idpaymentdoc");

            //    entity.Property(e => e.Idpaymentdocsign).HasColumnName("idpaymentdocsign");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewPeoplegrouplist>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_peoplegrouplist");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpeoplegrouplist).HasColumnName("idpeoplegrouplist");

            //    entity.Property(e => e.PeopleAdress)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_adress");

            //    entity.Property(e => e.PeopleAlienorder).HasColumnName("people_alienorder");

            //    entity.Property(e => e.PeopleComment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("people_comment");

            //    entity.Property(e => e.PeopleEmail)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("people_email");

            //    entity.Property(e => e.PeopleIsadmin).HasColumnName("people_isadmin");

            //    entity.Property(e => e.PeopleLastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_lastname");

            //    entity.Property(e => e.PeopleMiddlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_middlename");

            //    entity.Property(e => e.PeopleName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("people_name");

            //    entity.Property(e => e.PeopleOneconnect).HasColumnName("people_oneconnect");

            //    entity.Property(e => e.PeoplePassport)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_passport");

            //    entity.Property(e => e.PeoplePeoplegroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("people_peoplegroup");

            //    entity.Property(e => e.PeoplePhone)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("people_phone");

            //    entity.Property(e => e.PeopleUserlogin)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_userlogin");

            //    entity.Property(e => e.PeopleUserpassword)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("people_userpassword");

            //    entity.Property(e => e.PeoplegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup_name");
            //});

            //modelBuilder.Entity<ViewPerson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_people");

            //    entity.Property(e => e.AdAuthorization).HasColumnName("ad_authorization");

            //    entity.Property(e => e.Addinfo)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addinfo");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Alienorder).HasColumnName("alienorder");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Fio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("fio");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplepost).HasColumnName("idpeoplepost");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isadmin).HasColumnName("isadmin");

            //    entity.Property(e => e.Iscrypt).HasColumnName("iscrypt");

            //    entity.Property(e => e.Lastname)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("lastname");

            //    entity.Property(e => e.Middlename)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("middlename");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Oneconnect).HasColumnName("oneconnect");

            //    entity.Property(e => e.Passport)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("passport");

            //    entity.Property(e => e.Peoplegroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup");

            //    entity.Property(e => e.PeoplegroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplegroup_name");

            //    entity.Property(e => e.PeoplepostName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplepost_name");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Tabno)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("tabno");

            //    entity.Property(e => e.Userlogin)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userlogin");

            //    entity.Property(e => e.Userpassword)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("userpassword");
            //});

            //modelBuilder.Entity<ViewPokDiractionDate>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pok_diraction_date");

            //    entity.Property(e => e.CommentEndMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentEndMont");

            //    entity.Property(e => e.CommentMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentMont");

            //    entity.Property(e => e.CommentOtgr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentOtgr");

            //    entity.Property(e => e.CommentPrin)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentPrin");

            //    entity.Property(e => e.CommentProizv)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentProizv");

            //    entity.Property(e => e.CommentZamer)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentZamer");

            //    entity.Property(e => e.FactEndMont).HasColumnType("datetime");

            //    entity.Property(e => e.FactMont).HasColumnType("datetime");

            //    entity.Property(e => e.FactOtgr).HasColumnType("datetime");

            //    entity.Property(e => e.FactPrin).HasColumnType("datetime");

            //    entity.Property(e => e.FactProizv).HasColumnType("datetime");

            //    entity.Property(e => e.FactZamer).HasColumnType("datetime");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.PlanEndMont).HasColumnType("datetime");

            //    entity.Property(e => e.PlanMont).HasColumnType("datetime");

            //    entity.Property(e => e.PlanOtgr).HasColumnType("datetime");

            //    entity.Property(e => e.PlanPrin).HasColumnType("datetime");

            //    entity.Property(e => e.PlanProizv).HasColumnType("datetime");

            //    entity.Property(e => e.PlanZamer).HasColumnType("datetime");
            //});

            //modelBuilder.Entity<ViewPoll>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_poll");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollgroup).HasColumnName("idpollgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PollgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pollgroup_name");
            //});

            //modelBuilder.Entity<ViewPollanswer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollanswer");

            //    entity.Property(e => e.Answer)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("answer");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollanswer).HasColumnName("idpollanswer");

            //    entity.Property(e => e.Weightanswer)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weightanswer");
            //});

            //modelBuilder.Entity<ViewPollexecuting>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollexecuting");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Customer2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer2_name");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplecreate).HasColumnName("idpeoplecreate");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollexecutinggroup).HasColumnName("idpollexecutinggroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplecreateFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplecreate_fio");

            //    entity.Property(e => e.PollName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("poll_name");

            //    entity.Property(e => e.PollexecutinggroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pollexecutinggroup_name");

            //    entity.Property(e => e.State).HasColumnName("state");
            //});

            //modelBuilder.Entity<ViewPollexecutingdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollexecutingdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollexecutingdiraction).HasColumnName("idpollexecutingdiraction");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewPollexecutingitem>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollexecutingitem");

            //    entity.Property(e => e.Checkvalue).HasColumnName("checkvalue");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollexecutingitem).HasColumnName("idpollexecutingitem");

            //    entity.Property(e => e.Idpollrelation).HasColumnName("idpollrelation");

            //    entity.Property(e => e.Numvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numvalue");

            //    entity.Property(e => e.PollexecutingName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pollexecuting_name");

            //    entity.Property(e => e.PollquestionExplanation)
            //        .IsUnicode(false)
            //        .HasColumnName("pollquestion_explanation");

            //    entity.Property(e => e.PollquestionObligatory).HasColumnName("pollquestion_obligatory");

            //    entity.Property(e => e.PollquestionPicture).HasColumnName("pollquestion_picture");

            //    entity.Property(e => e.PollquestionQuery)
            //        .IsUnicode(false)
            //        .HasColumnName("pollquestion_query");

            //    entity.Property(e => e.PollquestionQuestion)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pollquestion_question");

            //    entity.Property(e => e.PollquestionTypeanswer)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("pollquestion_typeanswer");

            //    entity.Property(e => e.PollrelationNumpos).HasColumnName("pollrelation_numpos");

            //    entity.Property(e => e.ShowRow).HasColumnName("show_row");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.SumAnswer)
            //        .IsUnicode(false)
            //        .HasColumnName("sum_answer");
            //});

            //modelBuilder.Entity<ViewPollexecutingitemanswer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollexecutingitemanswer");

            //    entity.Property(e => e.Checkedstate).HasColumnName("checkedstate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollexecutingitem).HasColumnName("idpollexecutingitem");

            //    entity.Property(e => e.Idpollexecutingitemanswer).HasColumnName("idpollexecutingitemanswer");

            //    entity.Property(e => e.Idpollrelation).HasColumnName("idpollrelation");

            //    entity.Property(e => e.PollanswerAnswer)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pollanswer_answer");
            //});

            //modelBuilder.Entity<ViewPollexecutingsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollexecutingsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpollexecuting).HasColumnName("idpollexecuting");

            //    entity.Property(e => e.Idpollexecutingsign).HasColumnName("idpollexecutingsign");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewPollquestion>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollquestion");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Explanation)
            //        .IsUnicode(false)
            //        .HasColumnName("explanation");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollquestion).HasColumnName("idpollquestion");

            //    entity.Property(e => e.Obligatory).HasColumnName("obligatory");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.PollName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("poll_name");

            //    entity.Property(e => e.Query)
            //        .IsUnicode(false)
            //        .HasColumnName("query");

            //    entity.Property(e => e.Question)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("question");

            //    entity.Property(e => e.Typeanswer)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("typeanswer");
            //});

            //modelBuilder.Entity<ViewPollrelation>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pollrelation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpoll).HasColumnName("idpoll");

            //    entity.Property(e => e.Idpollanswer).HasColumnName("idpollanswer");

            //    entity.Property(e => e.Idpollquestion).HasColumnName("idpollquestion");

            //    entity.Property(e => e.Idpollrelation).HasColumnName("idpollrelation");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PollanswerAnswer)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pollanswer_answer");

            //    entity.Property(e => e.PollquestionQuestion)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pollquestion_question");
            //});

            //modelBuilder.Entity<ViewPower>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_power");

            //    entity.Property(e => e.Checkpower).HasColumnName("checkpower");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.GanttchartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("ganttchart_name");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddiraction1).HasColumnName("iddiraction1");

            //    entity.Property(e => e.Iddiraction2).HasColumnName("iddiraction2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idganttchart).HasColumnName("idganttchart");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Limit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("limit");

            //    entity.Property(e => e.Maxval)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxval");

            //    entity.Property(e => e.Model)
            //        .IsUnicode(false)
            //        .HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NeedMorePrecise).HasColumnName("need_more_precise");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Powergroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("powergroup");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");
            //});

            //modelBuilder.Entity<ViewPowergrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_powergrant");

            //    entity.Property(e => e.Checkpower).HasColumnName("checkpower");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.Duration).HasColumnName("duration");

            //    entity.Property(e => e.GanttchartName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("ganttchart_name");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Iddiraction1).HasColumnName("iddiraction1");

            //    entity.Property(e => e.Iddiraction2).HasColumnName("iddiraction2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idfinparam).HasColumnName("idfinparam");

            //    entity.Property(e => e.Idganttchart).HasColumnName("idganttchart");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Limit)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("limit");

            //    entity.Property(e => e.Maxval)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxval");

            //    entity.Property(e => e.Model)
            //        .IsUnicode(false)
            //        .HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NeedMorePrecise).HasColumnName("need_more_precise");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Powergroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("powergroup");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");
            //});

            //modelBuilder.Entity<ViewPricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defaultvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("defaultvalue");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Fororder).HasColumnName("fororder");

            //    entity.Property(e => e.FororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("fororder_typ");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idpricechangegroup).HasColumnName("idpricechangegroup");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isperc).HasColumnName("isperc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PricechangeGroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_group");

            //    entity.Property(e => e.PricechangeTyp)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangegroupFullname)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechangegroup_fullname");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Visibledealer).HasColumnName("visibledealer");
            //});

            //modelBuilder.Entity<ViewPricechangegrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pricechangegrant");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Defaultvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("defaultvalue");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Fororder).HasColumnName("fororder");

            //    entity.Property(e => e.FororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("fororder_typ");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idpricechangegroup).HasColumnName("idpricechangegroup");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isedit).HasColumnName("_isedit");

            //    entity.Property(e => e.Isperc).HasColumnName("isperc");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PricechangeGroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_group");

            //    entity.Property(e => e.PricechangeTyp)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangegroupFullname)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechangegroup_fullname");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.Visibledealer).HasColumnName("visibledealer");
            //});

            //modelBuilder.Entity<ViewPricelist>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pricelist");

            //    entity.Property(e => e.Class).HasColumnName("class");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorderdocoper).HasColumnName("idorderdocoper");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Idpricelistgroup).HasColumnName("idpricelistgroup");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Idversion2).HasColumnName("idversion2");

            //    entity.Property(e => e.ModelFurnituresystem)
            //        .HasMaxLength(4000)
            //        .HasColumnName("model_furnituresystem");

            //    entity.Property(e => e.ModelProfilesystem)
            //        .HasMaxLength(4000)
            //        .HasColumnName("model_profilesystem");

            //    entity.Property(e => e.Modeltype).HasColumnName("modeltype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderdocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("orderdocoper_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.VersionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("version_name");

            //    entity.Property(e => e.VersionName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("version_name2");
            //});

            //modelBuilder.Entity<ViewPricelistgoodservice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pricelistgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodserviceComment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_comment");

            //    entity.Property(e => e.GoodserviceGoodservicegroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_goodservicegroup");

            //    entity.Property(e => e.GoodserviceGroupname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_groupname");

            //    entity.Property(e => e.GoodserviceGuid).HasColumnName("goodservice_guid");

            //    entity.Property(e => e.GoodserviceIdvalut1).HasColumnName("goodservice_idvalut1");

            //    entity.Property(e => e.GoodserviceIdvalut2).HasColumnName("goodservice_idvalut2");

            //    entity.Property(e => e.GoodserviceIdvalut3).HasColumnName("goodservice_idvalut3");

            //    entity.Property(e => e.GoodserviceIdvalut4).HasColumnName("goodservice_idvalut4");

            //    entity.Property(e => e.GoodserviceIdvalut5).HasColumnName("goodservice_idvalut5");

            //    entity.Property(e => e.GoodserviceIsmy).HasColumnName("goodservice_ismy");

            //    entity.Property(e => e.GoodserviceIsperc).HasColumnName("goodservice_isperc");

            //    entity.Property(e => e.GoodserviceName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_name");

            //    entity.Property(e => e.GoodservicePrice1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price1");

            //    entity.Property(e => e.GoodservicePrice2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price2");

            //    entity.Property(e => e.GoodservicePrice3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price3");

            //    entity.Property(e => e.GoodservicePrice4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price4");

            //    entity.Property(e => e.GoodservicePrice5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("goodservice_price5");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Idpricelistgoodservice).HasColumnName("idpricelistgoodservice");

            //    entity.Property(e => e.Idpricelistitem).HasColumnName("idpricelistitem");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Iscalc).HasColumnName("iscalc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.PricelistitemNumpos).HasColumnName("pricelistitem_numpos");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewPricelistpricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pricelistpricechange");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Fororder).HasColumnName("fororder");

            //    entity.Property(e => e.FororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("fororder_typ");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idpricelist).HasColumnName("idpricelist");

            //    entity.Property(e => e.Idpricelistpricechange).HasColumnName("idpricelistpricechange");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.PricechangeIsperc).HasColumnName("pricechange_isperc");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.PricechangeTyp)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangeTyp2).HasColumnName("pricechange_typ2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");
            //});

            //modelBuilder.Entity<ViewProductiondoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiondoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocoperStoretyp).HasColumnName("docoper_storetyp");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idproductiondocgroup).HasColumnName("idproductiondocgroup");

            //    entity.Property(e => e.Idstoredepart1).HasColumnName("idstoredepart1");

            //    entity.Property(e => e.Idstoredepart2).HasColumnName("idstoredepart2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.StoredepartName1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name1");

            //    entity.Property(e => e.StoredepartName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name2");
            //});

            //modelBuilder.Entity<ViewProductiondocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiondocpos");

            //    entity.Property(e => e.Barnumpos)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barnumpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idproductiondocpos).HasColumnName("idproductiondocpos");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemQu)
            //        .HasColumnType("numeric(31, 8)")
            //        .HasColumnName("orderitem_qu");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewProductiondocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiondocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductiondoc).HasColumnName("idproductiondoc");

            //    entity.Property(e => e.Idproductiondocsign).HasColumnName("idproductiondocsign");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewProductiontype>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontype");

            //    entity.Property(e => e.ColorgroupcustomName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroupcustom_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.ConstructiontypeName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("constructiontype_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypegroup).HasColumnName("idproductiontypegroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Onlytemplate).HasColumnName("onlytemplate");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.PowerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("power_name");

            //    entity.Property(e => e.Productiontypegroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontypegroup");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName).HasColumnName("typ_name");
            //});

            //modelBuilder.Entity<ViewProductiontypeconstruction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypeconstruction");

            //    entity.Property(e => e.Active).HasColumnName("_active");

            //    entity.Property(e => e.ConstructiontypeIdconstructiontype).HasColumnName("constructiontype_idconstructiontype");

            //    entity.Property(e => e.ConstructiontypeName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("constructiontype_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypeconstruction).HasColumnName("idproductiontypeconstruction");

            //    entity.Property(e => e.ProductiontypeIdproductiontype).HasColumnName("productiontype_idproductiontype");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.SystemNumpos).HasColumnName("system_numpos");

            //    entity.Property(e => e.SystemType).HasColumnName("system_type");
            //});

            //modelBuilder.Entity<ViewProductiontypegrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypegrant");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idmeasure).HasColumnName("idmeasure");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypegrant).HasColumnName("idproductiontypegrant");

            //    entity.Property(e => e.Idproductiontypegroup).HasColumnName("idproductiontypegroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.NameStrkey)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name_strkey");

            //    entity.Property(e => e.Onlytemplate).HasColumnName("onlytemplate");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Productiontypegroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontypegroup");

            //    entity.Property(e => e.ProductiontypegroupName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontypegroup_name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewProductiontypegroup>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypegroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idproductiontypegroup).HasColumnName("idproductiontypegroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewProductiontypeparam>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypeparam");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelparamvalue).HasColumnName("idmodelparamvalue");

            //    entity.Property(e => e.Idmodelparamvalue2).HasColumnName("idmodelparamvalue2");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypeparam).HasColumnName("idproductiontypeparam");

            //    entity.Property(e => e.Isnumeric1).HasColumnName("isnumeric1");

            //    entity.Property(e => e.Isnumeric2).HasColumnName("isnumeric2");

            //    entity.Property(e => e.Isstr1).HasColumnName("isstr1");

            //    entity.Property(e => e.Isstr2).HasColumnName("isstr2");

            //    entity.Property(e => e.ModelparamName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelparam_name");

            //    entity.Property(e => e.ModelparamNumpos).HasColumnName("modelparam_numpos");

            //    entity.Property(e => e.Numericvalue1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numericvalue1");

            //    entity.Property(e => e.Numericvalue2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("numericvalue2");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.Strvalue1)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue1");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");
            //});

            //modelBuilder.Entity<ViewProductiontypesetting>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypesetting");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypesetting).HasColumnName("idproductiontypesetting");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.ProductiontypeIsactive).HasColumnName("productiontype_isactive");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.SettingAddmodel).HasColumnName("setting_addmodel");

            //    entity.Property(e => e.SettingAddorder).HasColumnName("setting_addorder");

            //    entity.Property(e => e.SettingName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("setting_name");

            //    entity.Property(e => e.SettingNamecrypt).HasColumnName("setting_namecrypt");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");
            //});

            //modelBuilder.Entity<ViewProductiontypesystem>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_productiontypesystems");

            //    entity.Property(e => e.Active).HasColumnName("_active");

            //    entity.Property(e => e.ColorgroupcustomName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("colorgroupcustom_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idcolorgroupcustom).HasColumnName("idcolorgroupcustom");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idproductiontypesystems).HasColumnName("idproductiontypesystems");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.ProductiontypeIdproductiontype).HasColumnName("productiontype_idproductiontype");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.SystemIdsystem).HasColumnName("system_idsystem");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.SystemNumpos).HasColumnName("system_numpos");

            //    entity.Property(e => e.SystemType).HasColumnName("system_type");
            //});

            //modelBuilder.Entity<ViewPyramid>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pyramid");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Depth).HasColumnName("depth");

            //    entity.Property(e => e.Doublesided).HasColumnName("doublesided");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcar).HasColumnName("idcar");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Length).HasColumnName("length");

            //    entity.Property(e => e.Maxheightfirstrow).HasColumnName("maxheightfirstrow");

            //    entity.Property(e => e.Maxrowwidth).HasColumnName("maxrowwidth");

            //    entity.Property(e => e.Maxvolume).HasColumnName("maxvolume");

            //    entity.Property(e => e.Maxweight).HasColumnName("maxweight");

            //    entity.Property(e => e.Maxwiwidth).HasColumnName("maxwiwidth");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Priority).HasColumnName("priority");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Qufirstrow).HasColumnName("qufirstrow");

            //    entity.Property(e => e.Qurow).HasColumnName("qurow");

            //    entity.Property(e => e.Rowlen).HasColumnName("rowlen");

            //    entity.Property(e => e.Selfdepth).HasColumnName("selfdepth");

            //    entity.Property(e => e.State).HasColumnName("state");

            //    entity.Property(e => e.StateName)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("state_name");

            //    entity.Property(e => e.Type)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("type");

            //    entity.Property(e => e.Weight).HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewPyramidfact>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pyramidfact");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Dtbegin)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtbegin");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtend)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtend");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeople3).HasColumnName("idpeople3");

            //    entity.Property(e => e.Idpyramid).HasColumnName("idpyramid");

            //    entity.Property(e => e.Idpyramidfact).HasColumnName("idpyramidfact");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleFio2)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio2");

            //    entity.Property(e => e.PeopleFio3)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio3");

            //    entity.Property(e => e.PyramidName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pyramid_name");

            //    entity.Property(e => e.Qubag).HasColumnName("qubag");
            //});

            //modelBuilder.Entity<ViewPyramidfactpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_pyramidfactpos");

            //    entity.Property(e => e.Barcode)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("barcode");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpyramidfact).HasColumnName("idpyramidfact");

            //    entity.Property(e => e.Idpyramidfactpos).HasColumnName("idpyramidfactpos");

            //    entity.Property(e => e.OrderDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_dtdoc");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(21)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewReport>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_report");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dll).HasColumnName("dll");

            //    entity.Property(e => e.Filename)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("filename");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Idreportgroup).HasColumnName("idreportgroup");

            //    entity.Property(e => e.Idreportscript).HasColumnName("idreportscript");

            //    entity.Property(e => e.Indealerbase).HasColumnName("indealerbase");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Loadtype).HasColumnName("loadtype");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Report).HasColumnName("report");

            //    entity.Property(e => e.Reportgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("reportgroup");

            //    entity.Property(e => e.ReportgroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("reportgroup_name");

            //    entity.Property(e => e.ReportscriptActivescript).HasColumnName("reportscript_activescript");

            //    entity.Property(e => e.ReportscriptCompiled).HasColumnName("reportscript_compiled");

            //    entity.Property(e => e.ReportscriptDll).HasColumnName("reportscript_dll");

            //    entity.Property(e => e.Tomenu).HasColumnName("tomenu");
            //});

            //modelBuilder.Entity<ViewReportkitdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_reportkitdetail");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Idreportkit).HasColumnName("idreportkit");

            //    entity.Property(e => e.Idreportkitdetail).HasColumnName("idreportkitdetail");

            //    entity.Property(e => e.Isprint).HasColumnName("isprint");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.ReportName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("report_name");
            //});

            //modelBuilder.Entity<ViewReportsave>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_reportsave");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idreport).HasColumnName("idreport");

            //    entity.Property(e => e.Idreportsave).HasColumnName("idreportsave");

            //    entity.Property(e => e.Report).HasColumnName("report");

            //    entity.Property(e => e.ReportName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("report_name");
            //});

            //modelBuilder.Entity<ViewRespower>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_respower");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpower).HasColumnName("idpower");

            //    entity.Property(e => e.Idrespower).HasColumnName("idrespower");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleFio2)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio2");

            //    entity.Property(e => e.PowerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("power_name");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Val)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("val");
            //});

            //modelBuilder.Entity<ViewSeller>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_seller");

            //    entity.Property(e => e.Account)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account");

            //    entity.Property(e => e.Addclassification1Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification1_name");

            //    entity.Property(e => e.Addclassification2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification2_name");

            //    entity.Property(e => e.Addclassification3Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification3_name");

            //    entity.Property(e => e.Addclassification4Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification4_name");

            //    entity.Property(e => e.Addclassification5Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification5_name");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addresslegal)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addresslegal");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contactpeople)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contactpeople");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Directorfio)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfio");

            //    entity.Property(e => e.Directorfounding)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfounding");

            //    entity.Property(e => e.Discount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount");

            //    entity.Property(e => e.Discount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount2");

            //    entity.Property(e => e.Discount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount3");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddclassification1).HasColumnName("idaddclassification1");

            //    entity.Property(e => e.Idaddclassification2).HasColumnName("idaddclassification2");

            //    entity.Property(e => e.Idaddclassification3).HasColumnName("idaddclassification3");

            //    entity.Property(e => e.Idaddclassification4).HasColumnName("idaddclassification4");

            //    entity.Property(e => e.Idaddclassification5).HasColumnName("idaddclassification5");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsellergroup).HasColumnName("idsellergroup");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kaccount)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("kaccount");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name2");

            //    entity.Property(e => e.Okonh)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okonh");

            //    entity.Property(e => e.Okpo)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okpo");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Pyrgrouping).HasColumnName("pyrgrouping");

            //    entity.Property(e => e.Sellercode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("sellercode");
            //});

            //modelBuilder.Entity<ViewSellerdestanation>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sellerdestanation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsellerdestanation).HasColumnName("idsellerdestanation");
            //});

            //modelBuilder.Entity<ViewSellergrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sellergrant");

            //    entity.Property(e => e.Account)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("account");

            //    entity.Property(e => e.Addclassification1Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification1_name");

            //    entity.Property(e => e.Addclassification2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification2_name");

            //    entity.Property(e => e.Addclassification3Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification3_name");

            //    entity.Property(e => e.Addclassification4Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification4_name");

            //    entity.Property(e => e.Addclassification5Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addclassification5_name");

            //    entity.Property(e => e.Adddt1)
            //        .HasColumnType("datetime")
            //        .HasColumnName("adddt1");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addresslegal)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addresslegal");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Agreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("agreedate");

            //    entity.Property(e => e.Agreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("agreename");

            //    entity.Property(e => e.Bank)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("bank");

            //    entity.Property(e => e.Bik)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("bik");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contactpeople)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contactpeople");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.Directorfio)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfio");

            //    entity.Property(e => e.Directorfounding)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("directorfounding");

            //    entity.Property(e => e.Discount)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount");

            //    entity.Property(e => e.Discount2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount2");

            //    entity.Property(e => e.Discount3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("discount3");

            //    entity.Property(e => e.Email)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("email");

            //    entity.Property(e => e.Grant).HasColumnName("_grant");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddclassification1).HasColumnName("idaddclassification1");

            //    entity.Property(e => e.Idaddclassification2).HasColumnName("idaddclassification2");

            //    entity.Property(e => e.Idaddclassification3).HasColumnName("idaddclassification3");

            //    entity.Property(e => e.Idaddclassification4).HasColumnName("idaddclassification4");

            //    entity.Property(e => e.Idaddclassification5).HasColumnName("idaddclassification5");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idpreference).HasColumnName("idpreference");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsellergrant).HasColumnName("idsellergrant");

            //    entity.Property(e => e.Idsellergroup).HasColumnName("idsellergroup");

            //    entity.Property(e => e.Inn)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("inn");

            //    entity.Property(e => e.Kaccount)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("kaccount");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name2");

            //    entity.Property(e => e.Okonh)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okonh");

            //    entity.Property(e => e.Okpo)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("okpo");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Phonemobile)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("phonemobile");

            //    entity.Property(e => e.Picture)
            //        .HasColumnType("image")
            //        .HasColumnName("picture");

            //    entity.Property(e => e.Pyrgrouping).HasColumnName("pyrgrouping");

            //    entity.Property(e => e.Sellercode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("sellercode");

            //    entity.Property(e => e.Sellergroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sellergroup");
            //});

            //modelBuilder.Entity<ViewSellerpricechange>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sellerpricechange");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Enddate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("enddate");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpricechange).HasColumnName("idpricechange");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsellerpricechange).HasColumnName("idsellerpricechange");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(18, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price1crypt).HasColumnName("price1crypt");

            //    entity.Property(e => e.PricechangeComment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_comment");

            //    entity.Property(e => e.PricechangeFororder).HasColumnName("pricechange_fororder");

            //    entity.Property(e => e.PricechangeFororderTyp)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_fororder_typ");

            //    entity.Property(e => e.PricechangeIsperc).HasColumnName("pricechange_isperc");

            //    entity.Property(e => e.PricechangeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_name");

            //    entity.Property(e => e.PricechangeTyp).HasColumnName("pricechange_typ");

            //    entity.Property(e => e.PricechangeTypname)
            //        .HasMaxLength(7)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechange_typname");

            //    entity.Property(e => e.PricechangegroupFullname)
            //        .IsUnicode(false)
            //        .HasColumnName("pricechangegroup_fullname");

            //    entity.Property(e => e.Startdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("startdate");
            //});

            //modelBuilder.Entity<ViewServicedepartment>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedepartment");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DepartmentName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("department_name");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Idservicedepartment).HasColumnName("idservicedepartment");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 3)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.ServicedocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("servicedoc_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 3)")
            //        .HasColumnName("smbase");
            //});

            //modelBuilder.Entity<ViewServicedepartmentperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedepartmentpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedepartment).HasColumnName("idservicedepartment");

            //    entity.Property(e => e.Idservicedepartmentpeople).HasColumnName("idservicedepartmentpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Perc).HasColumnName("perc");

            //    entity.Property(e => e.Smbase).HasColumnName("smbase");
            //});

            //modelBuilder.Entity<ViewServicedoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedoc");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Addstr1)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DepartmentName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("department_name");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddepartment).HasColumnName("iddepartment");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idorderdest).HasColumnName("idorderdest");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idservicedocgroup).HasColumnName("idservicedocgroup");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderdestAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderdest_agreename");

            //    entity.Property(e => e.OrderdestName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderdest_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Phone)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.ReasonName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("reason_name");

            //    entity.Property(e => e.Resolution)
            //        .IsUnicode(false)
            //        .HasColumnName("resolution");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");
            //});

            //modelBuilder.Entity<ViewServicedocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleexec).HasColumnName("idpeopleexec");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idservicedocdiraction).HasColumnName("idservicedocdiraction");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.PeopleexecFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleexec_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewServicedocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedocpos");

            //    entity.Property(e => e.Addint1).HasColumnName("addint1");

            //    entity.Property(e => e.Addint2).HasColumnName("addint2");

            //    entity.Property(e => e.Addint3).HasColumnName("addint3");

            //    entity.Property(e => e.Addint4).HasColumnName("addint4");

            //    entity.Property(e => e.Addint5).HasColumnName("addint5");

            //    entity.Property(e => e.Addnum1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum1");

            //    entity.Property(e => e.Addnum2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum2");

            //    entity.Property(e => e.Addnum3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum3");

            //    entity.Property(e => e.Addnum4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum4");

            //    entity.Property(e => e.Addnum5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("addnum5");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(59)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Addstr2)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idservicedocpos).HasColumnName("idservicedocpos");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.ReasonName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("reason_name");

            //    entity.Property(e => e.Size)
            //        .HasMaxLength(30)
            //        .IsUnicode(false)
            //        .HasColumnName("size");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");
            //});

            //modelBuilder.Entity<ViewServicedocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicedocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicedoc).HasColumnName("idservicedoc");

            //    entity.Property(e => e.Idservicedocsign).HasColumnName("idservicedocsign");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewServicereason>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_servicereason");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idservicereason).HasColumnName("idservicereason");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Reasoncode)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("reasoncode");
            //});

            //modelBuilder.Entity<ViewSetting>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_setting");

            //    entity.Property(e => e.Addmodel).HasColumnName("addmodel");

            //    entity.Property(e => e.Addorder).HasColumnName("addorder");

            //    entity.Property(e => e.Blbvalue).HasColumnName("blbvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Commentcrypt).HasColumnName("commentcrypt");

            //    entity.Property(e => e.Customtable).HasColumnName("customtable");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Groupname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("groupname");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Hascustomtable).HasColumnName("hascustomtable");

            //    entity.Property(e => e.Idsetting).HasColumnName("idsetting");

            //    entity.Property(e => e.Idsettinggroup).HasColumnName("idsettinggroup");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.Intvalue2)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("intvalue2");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Namecrypt).HasColumnName("namecrypt");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvaluecrypt).HasColumnName("strvaluecrypt");

            //    entity.Property(e => e.Txtvalue)
            //        .HasColumnType("text")
            //        .HasColumnName("txtvalue");

            //    entity.Property(e => e.Txtvaluecrypt).HasColumnName("txtvaluecrypt");
            //});

            //modelBuilder.Entity<ViewSigngrantDatum>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_signgrant_data");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsigngrant).HasColumnName("idsigngrant");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Image).HasColumnName("image");

            //    entity.Property(e => e.Isadd).HasColumnName("isadd");

            //    entity.Property(e => e.Isedit).HasColumnName("isedit");

            //    entity.Property(e => e.Iseditcomment).HasColumnName("iseditcomment");

            //    entity.Property(e => e.Iseditint).HasColumnName("iseditint");

            //    entity.Property(e => e.Iseditstr).HasColumnName("iseditstr");

            //    entity.Property(e => e.Isremove).HasColumnName("isremove");

            //    entity.Property(e => e.Key)
            //        .HasMaxLength(36)
            //        .IsUnicode(false)
            //        .HasColumnName("key");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentkey)
            //        .HasMaxLength(36)
            //        .IsUnicode(false)
            //        .HasColumnName("parentkey");
            //});

            //modelBuilder.Entity<ViewSigngroupFromGrant>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_signgroup_from_grants");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Idpeoplegroup).HasColumnName("idpeoplegroup");

            //    entity.Property(e => e.Idsigngroup).HasColumnName("idsigngroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewSignvalue>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_signvalue");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.SignGuid).HasColumnName("sign_guid");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewSizedoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sizedoc");

            //    entity.Property(e => e.Address)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("address");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Contact)
            //        .IsUnicode(false)
            //        .HasColumnName("contact");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DestanationName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("destanation_name");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idaddress).HasColumnName("idaddress");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddestanation).HasColumnName("iddestanation");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeople2).HasColumnName("idpeople2");

            //    entity.Property(e => e.Idpeoplecreate).HasColumnName("idpeoplecreate");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocgroup).HasColumnName("idsizedocgroup");

            //    entity.Property(e => e.Isordered).HasColumnName("isordered");

            //    entity.Property(e => e.Isover).HasColumnName("isover");

            //    entity.Property(e => e.Isplaned).HasColumnName("isplaned");

            //    entity.Property(e => e.Isredirect).HasColumnName("isredirect");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderAddress)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("order_address");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderPhone)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("order_phone");

            //    entity.Property(e => e.OrderSizeifo)
            //        .IsUnicode(false)
            //        .HasColumnName("order_sizeifo");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleFio2)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio2");

            //    entity.Property(e => e.PeoplecreateFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplecreate_fio");

            //    entity.Property(e => e.Phone)
            //        .IsUnicode(false)
            //        .HasColumnName("phone");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Speackerphone)
            //        .IsUnicode(false)
            //        .HasColumnName("speackerphone");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");
            //});

            //modelBuilder.Entity<ViewSizedocconstrtype>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sizedocconstrtype");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.ConstructionName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("construction_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.EmbrasuretypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("embrasuretype_name");

            //    entity.Property(e => e.EmbrasuretypeShortname)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("embrasuretype_shortname");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idconstructiontype).HasColumnName("idconstructiontype");

            //    entity.Property(e => e.Idembrasuretype).HasColumnName("idembrasuretype");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocconstrtype).HasColumnName("idsizedocconstrtype");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.Qu).HasColumnName("qu");

            //    entity.Property(e => e.Sqr)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Winue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("winue");
            //});

            //modelBuilder.Entity<ViewSizedocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sizedocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleexec).HasColumnName("idpeopleexec");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocdiraction).HasColumnName("idsizedocdiraction");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.PeopleexecFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleexec_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewSizedocdiractionperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sizedocdiractionpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocdiraction).HasColumnName("idsizedocdiraction");

            //    entity.Property(e => e.Idsizedocdiractionpeople).HasColumnName("idsizedocdiractionpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewSizedocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sizedocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idsizedoc).HasColumnName("idsizedoc");

            //    entity.Property(e => e.Idsizedocsign).HasColumnName("idsizedocsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewStoredepart>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_storedepart");

            //    entity.Property(e => e.AvailabilitygroupName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("availabilitygroup_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Departgroup)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("departgroup");

            //    entity.Property(e => e.Idavailabilitygroup).HasColumnName("idavailabilitygroup");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idproductionsite).HasColumnName("idproductionsite");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.ProductionsiteName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("productionsite_name");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(17)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");
            //});

            //modelBuilder.Entity<ViewStoredepartGoodbuffer>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_storedepart_goodbuffer");

            //    entity.Property(e => e.Idstoredepart).HasColumnName("idstoredepart");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<ViewStoredoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_storedoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocoperStoretyp).HasColumnName("docoper_storetyp");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idstoredepart1).HasColumnName("idstoredepart1");

            //    entity.Property(e => e.Idstoredepart2).HasColumnName("idstoredepart2");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idstoredocgroup).HasColumnName("idstoredocgroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Logincre)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("logincre");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Outdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("outdate");

            //    entity.Property(e => e.Outname)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("outname");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qupos).HasColumnName("qupos");

            //    entity.Property(e => e.Reg).HasColumnName("reg");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.StoredepartName1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name1");

            //    entity.Property(e => e.StoredepartName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("storedepart_name2");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Withnds).HasColumnName("withnds");
            //});

            //modelBuilder.Entity<ViewStoredocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_storedocpos");

            //    entity.Property(e => e.Cell).HasColumnName("cell");

            //    entity.Property(e => e.Color1).HasColumnName("color1");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2).HasColumnName("color2");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Good2Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good2_marking");

            //    entity.Property(e => e.Good2Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good2_name");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodValutshortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("good_valutshortname");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodmeasureName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodmeasure_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.GoodtypeName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name2");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgood2).HasColumnName("idgood2");

            //    entity.Property(e => e.Idgoodmeasure).HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idproductiondocpos).HasColumnName("idproductiondocpos");

            //    entity.Property(e => e.Idstoragespace).HasColumnName("idstoragespace");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idstoredocpos).HasColumnName("idstoredocpos");

            //    entity.Property(e => e.Idsupplydocpos).HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.ManufactdocposNumpos).HasColumnName("manufactdocpos_numpos");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.OrdersName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orders_name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Part)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("part");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Pricebasends)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebasends");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 6)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Row).HasColumnName("row");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Storagespace)
            //        .HasMaxLength(35)
            //        .IsUnicode(false)
            //        .HasColumnName("storagespace");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewStoredocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_storedocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idstoredoc).HasColumnName("idstoredoc");

            //    entity.Property(e => e.Idstoredocpos).HasColumnName("idstoredocpos");

            //    entity.Property(e => e.Idstoredocsign).HasColumnName("idstoredocsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewSupplydoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_supplydoc");

            //    entity.Property(e => e.Addstr1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr1");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Customer2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer2_name");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Idcustomer2).HasColumnName("idcustomer2");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idseller).HasColumnName("idseller");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocgroup).HasColumnName("idsupplydocgroup");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.OrderAgreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_agreedate");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderDate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_date");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SellerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("seller_name");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.Valutrate)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("valutrate");

            //    entity.Property(e => e.Withnds).HasColumnName("withnds");
            //});

            //modelBuilder.Entity<ViewSupplydocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_supplydocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idpeopleсreate).HasColumnName("idpeopleсreate");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocdiraction).HasColumnName("idsupplydocdiraction");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewSupplydocgoodservice>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_supplydocgoodservice");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodserviceComment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_comment");

            //    entity.Property(e => e.GoodserviceIsperc).HasColumnName("goodservice_isperc");

            //    entity.Property(e => e.GoodserviceName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("goodservice_name");

            //    entity.Property(e => e.Idgoodservice).HasColumnName("idgoodservice");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocgoodservice).HasColumnName("idsupplydocgoodservice");

            //    entity.Property(e => e.Perc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("perc");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");
            //});

            //modelBuilder.Entity<ViewSupplydocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_supplydocpos");

            //    entity.Property(e => e.Addint)
            //        .HasColumnType("numeric(20, 5)")
            //        .HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Addstr2)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr2");

            //    entity.Property(e => e.Addstr3)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr3");

            //    entity.Property(e => e.Addstr4)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr4");

            //    entity.Property(e => e.Addstr5)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr5");

            //    entity.Property(e => e.Ang1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang1");

            //    entity.Property(e => e.Ang2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("ang2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Good2Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good2_marking");

            //    entity.Property(e => e.Good2Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good2_name");

            //    entity.Property(e => e.GoodColorinname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_colorinname");

            //    entity.Property(e => e.GoodColoroutname)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("good_coloroutname");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.GoodgroupName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodgroup_name");

            //    entity.Property(e => e.GoodmeasureName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("goodmeasure_name");

            //    entity.Property(e => e.GoodtypeName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("goodtype_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idgood2).HasColumnName("idgood2");

            //    entity.Property(e => e.Idgoodmeasure).HasColumnName("idgoodmeasure");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocpos).HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.ManufactdocName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("manufactdoc_name");

            //    entity.Property(e => e.ManufactdocNumpos).HasColumnName("manufactdoc_numpos");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.Nds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("nds");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderAgreedate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("order_agreedate");

            //    entity.Property(e => e.OrderAgreename)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_agreename");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.OrderitemNumpos).HasColumnName("orderitem_numpos");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.OrederDtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("oreder_dtdoc");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Pricebasends)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebasends");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Qustore)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qustore");

            //    entity.Property(e => e.Radius1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius1");

            //    entity.Property(e => e.Radius2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("radius2");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Sumnds)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sumnds");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewSupplydocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_supplydocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idsupplydoc).HasColumnName("idsupplydoc");

            //    entity.Property(e => e.Idsupplydocpos).HasColumnName("idsupplydocpos");

            //    entity.Property(e => e.Idsupplydocsign).HasColumnName("idsupplydocsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewSysconnect>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_sysconnect");

            //    entity.Property(e => e.Connected)
            //        .HasColumnType("datetime")
            //        .HasColumnName("connected");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsysconnect).HasColumnName("idsysconnect");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewSystemdetail>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_systemdetail");

            //    entity.Property(e => e.A)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("a");

            //    entity.Property(e => e.A1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("a1");

            //    entity.Property(e => e.A2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("a2");

            //    entity.Property(e => e.B)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("b");

            //    entity.Property(e => e.B1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("b1");

            //    entity.Property(e => e.B2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("b2");

            //    entity.Property(e => e.C)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("c");

            //    entity.Property(e => e.C1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("c1");

            //    entity.Property(e => e.C2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("c2");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.ConnectortypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("connectortype_name");

            //    entity.Property(e => e.D)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("d");

            //    entity.Property(e => e.D1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("d1");

            //    entity.Property(e => e.D2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("d2");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.E)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("e");

            //    entity.Property(e => e.E1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("e1");

            //    entity.Property(e => e.E2)
            //        .HasColumnType("numeric(25, 2)")
            //        .HasColumnName("e2");

            //    entity.Property(e => e.F)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f");

            //    entity.Property(e => e.F1)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f1");

            //    entity.Property(e => e.F2)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("f2");

            //    entity.Property(e => e.G)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("g");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idconnectortype).HasColumnName("idconnectortype");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Israck).HasColumnName("israck");

            //    entity.Property(e => e.Israil).HasColumnName("israil");

            //    entity.Property(e => e.Maxang)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("maxang");

            //    entity.Property(e => e.Maxr).HasColumnName("maxr");

            //    entity.Property(e => e.Minang)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("minang");

            //    entity.Property(e => e.Minr).HasColumnName("minr");

            //    entity.Property(e => e.ModelpartName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart_name");

            //    entity.Property(e => e.ModelpartNumpos).HasColumnName("modelpart_numpos");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Profilesection).HasColumnName("profilesection");

            //    entity.Property(e => e.Sqr1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr1");

            //    entity.Property(e => e.Sqr2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sqr2");

            //    entity.Property(e => e.Steel)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("steel");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.Systemdetailgroup)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetailgroup");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Thickness).HasColumnName("thickness");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.Z)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("z");
            //});

            //modelBuilder.Entity<ViewSystemdetailrel>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_systemdetailrel");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Idsystemdetailrel).HasColumnName("idsystemdetailrel");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.SdModelpart).HasColumnName("sd_modelpart");

            //    entity.Property(e => e.SystemdetailName1)
            //        .HasMaxLength(257)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetail_name1");

            //    entity.Property(e => e.SystemdetailName2)
            //        .HasMaxLength(257)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetail_name2");
            //});

            //modelBuilder.Entity<ViewSystemdetailrelation>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_systemdetailrelation");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idsystemdetail).HasColumnName("idsystemdetail");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Idsystemdetailrel).HasColumnName("idsystemdetailrel");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Name1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name1");

            //    entity.Property(e => e.Name2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name2");

            //    entity.Property(e => e.SystemName1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name1");

            //    entity.Property(e => e.SystemName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name2");
            //});

            //modelBuilder.Entity<ViewSystemdetailrelationship>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_systemdetailrelationship");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idsystem).HasColumnName("idsystem");

            //    entity.Property(e => e.Idsystemdetail1).HasColumnName("idsystemdetail1");

            //    entity.Property(e => e.Idsystemdetail2).HasColumnName("idsystemdetail2");

            //    entity.Property(e => e.Idsystemdetailrelationship).HasColumnName("idsystemdetailrelationship");

            //    entity.Property(e => e.Indent).HasColumnName("indent");

            //    entity.Property(e => e.SystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("system_name");

            //    entity.Property(e => e.SystemdetailName1)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetail_name1");

            //    entity.Property(e => e.SystemdetailName2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("systemdetail_name2");
            //});

            //modelBuilder.Entity<ViewTechdoc>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_techdoc");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.CustomerName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("customer_name");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DocoperName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docoper_name");

            //    entity.Property(e => e.DocstateName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("docstate_name");

            //    entity.Property(e => e.Dtcre)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcre");

            //    entity.Property(e => e.Dtdoc)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtdoc");

            //    entity.Property(e => e.Idcustomer).HasColumnName("idcustomer");

            //    entity.Property(e => e.Iddocoper).HasColumnName("iddocoper");

            //    entity.Property(e => e.Iddocstate).HasColumnName("iddocstate");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Idtechdocgroup).HasColumnName("idtechdocgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Smdoc)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smdoc");
            //});

            //modelBuilder.Entity<ViewTechdocdiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_techdocdiraction");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.DiractionName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("diraction_name");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtedit)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtedit");

            //    entity.Property(e => e.Factdate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("factdate");

            //    entity.Property(e => e.Iddiraction).HasColumnName("iddiraction");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idpeoplecreate).HasColumnName("idpeoplecreate");

            //    entity.Property(e => e.Idpeopleedit).HasColumnName("idpeopleedit");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Idtechdocdiraction).HasColumnName("idtechdocdiraction");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.PeoplecreateFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peoplecreate_fio");

            //    entity.Property(e => e.PeopleeditFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("peopleedit_fio");

            //    entity.Property(e => e.Plandate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("plandate");
            //});

            //modelBuilder.Entity<ViewTechdocpo>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_techdocpos");

            //    entity.Property(e => e.Addint).HasColumnName("addint");

            //    entity.Property(e => e.Addstr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("addstr");

            //    entity.Property(e => e.Barnumpos)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("barnumpos");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.GoodMarking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("good_marking");

            //    entity.Property(e => e.GoodName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("good_name");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idequipmentprofile).HasColumnName("idequipmentprofile");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Idmanufactdocpos).HasColumnName("idmanufactdocpos");

            //    entity.Property(e => e.Idmodel).HasColumnName("idmodel");

            //    entity.Property(e => e.Idmodelcalc).HasColumnName("idmodelcalc");

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.Idordergood).HasColumnName("idordergood");

            //    entity.Property(e => e.Idorderitem).HasColumnName("idorderitem");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Idtechdocpos).HasColumnName("idtechdocpos");

            //    entity.Property(e => e.MeasureFactor)
            //        .HasColumnType("numeric(15, 2)")
            //        .HasColumnName("measure_factor");

            //    entity.Property(e => e.MeasureShortname)
            //        .HasMaxLength(12)
            //        .IsUnicode(false)
            //        .HasColumnName("measure_shortname");

            //    entity.Property(e => e.MeasureTyp).HasColumnName("measure_typ");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.OrderName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("order_name");

            //    entity.Property(e => e.OrderitemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderitem_name");

            //    entity.Property(e => e.Orderitemnum).HasColumnName("orderitemnum");

            //    entity.Property(e => e.Price)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Pricebase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("pricebase");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.Sm2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm2");

            //    entity.Property(e => e.Smbase)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("smbase");

            //    entity.Property(e => e.Thick).HasColumnName("thick");

            //    entity.Property(e => e.Weight)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("weight");

            //    entity.Property(e => e.Width).HasColumnName("width");
            //});

            //modelBuilder.Entity<ViewTechdocsign>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_techdocsign");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dtcreate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtcreate");

            //    entity.Property(e => e.Dtvalue)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue");

            //    entity.Property(e => e.Dtvalue2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dtvalue2");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idsign).HasColumnName("idsign");

            //    entity.Property(e => e.Idsignvalue).HasColumnName("idsignvalue");

            //    entity.Property(e => e.Idtechdoc).HasColumnName("idtechdoc");

            //    entity.Property(e => e.Idtechdocpos).HasColumnName("idtechdocpos");

            //    entity.Property(e => e.Idtechdocsign).HasColumnName("idtechdocsign");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 5)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.SignName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("sign_name");

            //    entity.Property(e => e.SignvalueInt)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("signvalue_int");

            //    entity.Property(e => e.SignvalueStr)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("signvalue_str");

            //    entity.Property(e => e.Strvalue)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");
            //});

            //modelBuilder.Entity<ViewTemplate>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_template");

            //    entity.Property(e => e.Classnative).HasColumnName("classnative");

            //    entity.Property(e => e.Color1Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color1_name");

            //    entity.Property(e => e.Color2Name)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("color2_name");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.FurnituresystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("furnituresystem_name");

            //    entity.Property(e => e.Idcolor1).HasColumnName("idcolor1");

            //    entity.Property(e => e.Idcolor2).HasColumnName("idcolor2");

            //    entity.Property(e => e.Idfurnituresystem).HasColumnName("idfurnituresystem");

            //    entity.Property(e => e.Idparent).HasColumnName("idparent");

            //    entity.Property(e => e.Idproductiontype).HasColumnName("idproductiontype");

            //    entity.Property(e => e.Idprofilesystem).HasColumnName("idprofilesystem");

            //    entity.Property(e => e.Idtemplate).HasColumnName("idtemplate");

            //    entity.Property(e => e.Idtemplategroup).HasColumnName("idtemplategroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Picture).HasColumnName("picture");

            //    entity.Property(e => e.ProductiontypeName)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("productiontype_name");

            //    entity.Property(e => e.ProductiontypeTyp).HasColumnName("productiontype_typ");

            //    entity.Property(e => e.ProfilesystemName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("profilesystem_name");

            //    entity.Property(e => e.Templatetype).HasColumnName("templatetype");

            //    entity.Property(e => e.Typ).HasColumnName("typ");
            //});

            //modelBuilder.Entity<ViewTemplateparam>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_templateparam");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idmodelparam).HasColumnName("idmodelparam");

            //    entity.Property(e => e.Idmodelpart).HasColumnName("idmodelpart");

            //    entity.Property(e => e.Idtemplate).HasColumnName("idtemplate");

            //    entity.Property(e => e.Idtemplateparam).HasColumnName("idtemplateparam");

            //    entity.Property(e => e.Intvalue)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("intvalue");

            //    entity.Property(e => e.ModelparamName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelparam_name");

            //    entity.Property(e => e.Modelpart)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart");

            //    entity.Property(e => e.ModelpartName)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("modelpart_name");

            //    entity.Property(e => e.Strvalue)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue");

            //    entity.Property(e => e.Strvalue2)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("strvalue2");

            //    entity.Property(e => e.TemplateIdproductiontype).HasColumnName("template_idproductiontype");
            //});

            //modelBuilder.Entity<ViewTigDiraction>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_tig_diraction");

            //    entity.Property(e => e.CommentEndMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentEndMont");

            //    entity.Property(e => e.CommentMont)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentMont");

            //    entity.Property(e => e.CommentOtgr)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentOtgr");

            //    entity.Property(e => e.CommentPrin)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentPrin");

            //    entity.Property(e => e.CommentProizv)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentProizv");

            //    entity.Property(e => e.CommentProizvMosk)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("commentProizvMosk");

            //    entity.Property(e => e.CommentZamer)
            //        .HasMaxLength(256)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactEndMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactOtgr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactPrin)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactProizv)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactProizvMosk)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.FactZamer)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Idorder).HasColumnName("idorder");

            //    entity.Property(e => e.PlanEndMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanMont)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanOtgr)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanPrin)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanProizv)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanProizvMosk)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);

            //    entity.Property(e => e.PlanZamer)
            //        .HasMaxLength(30)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ViewValutrate>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_valutrate");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idvalut).HasColumnName("idvalut");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalutrate).HasColumnName("idvalutrate");

            //    entity.Property(e => e.Sm)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("sm");

            //    entity.Property(e => e.ValutShortname)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname");

            //    entity.Property(e => e.ValutShortname2)
            //        .HasMaxLength(16)
            //        .IsUnicode(false)
            //        .HasColumnName("valut_shortname2");
            //});

            //modelBuilder.Entity<ViewVectorpicture>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_vectorpicture");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Height).HasColumnName("height");

            //    entity.Property(e => e.Idvectorpicture).HasColumnName("idvectorpicture");

            //    entity.Property(e => e.Model).HasColumnName("model");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Using).HasColumnName("using");

            //    entity.Property(e => e.UsingName)
            //        .HasMaxLength(26)
            //        .IsUnicode(false)
            //        .HasColumnName("using_name");

            //    entity.Property(e => e.Vectorpicture).HasColumnName("vectorpicture");

            //    entity.Property(e => e.Width).HasColumnName("width");

            //    entity.Property(e => e.XPos).HasColumnName("x_pos");

            //    entity.Property(e => e.YPos).HasColumnName("y_pos");
            //});

            //modelBuilder.Entity<ViewVersion>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_versions");

            //    entity.Property(e => e.Comment)
            //        .HasColumnType("text")
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idversion).HasColumnName("idversion");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Serial)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("serial");

            //    entity.Property(e => e.Typ).HasColumnName("typ");

            //    entity.Property(e => e.TypName)
            //        .HasMaxLength(11)
            //        .IsUnicode(false)
            //        .HasColumnName("typ_name");

            //    entity.Property(e => e.Versiondate)
            //        .HasColumnType("datetime")
            //        .HasColumnName("versiondate");

            //    entity.Property(e => e.Versiondate2)
            //        .HasColumnType("datetime")
            //        .HasColumnName("versiondate2");

            //    entity.Property(e => e.Versiongroup)
            //        .HasMaxLength(32)
            //        .IsUnicode(false)
            //        .HasColumnName("versiongroup");
            //});

            //modelBuilder.Entity<ViewWdlog>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_wdlog");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idwdlog).HasColumnName("idwdlog");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<ViewWork>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_work");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Idworkgroup).HasColumnName("idworkgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Workgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("workgroup");
            //});

            //modelBuilder.Entity<ViewWorkgroup>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_workgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idworkgroup).HasColumnName("idworkgroup");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<ViewWorkoper>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_workoper");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idvalut1).HasColumnName("idvalut1");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Idvalut6).HasColumnName("idvalut6");

            //    entity.Property(e => e.Idvalut7).HasColumnName("idvalut7");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Idworkoper).HasColumnName("idworkoper");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Valut1Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut1_name");

            //    entity.Property(e => e.Valut2Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut2_name");

            //    entity.Property(e => e.Valut3Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut3_name");

            //    entity.Property(e => e.Valut4Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut4_name");

            //    entity.Property(e => e.Valut5Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut5_name");

            //    entity.Property(e => e.Valut6Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut6_name");

            //    entity.Property(e => e.Valut7Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("valut7_name");

            //    entity.Property(e => e.WorkName)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("work_name");

            //    entity.Property(e => e.Worktime)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("worktime");
            //});

            //modelBuilder.Entity<ViewWorkperson>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("view_workpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid).HasColumnName("guid");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Idworkpeople).HasColumnName("idworkpeople");

            //    entity.Property(e => e.PeopleFio)
            //        .HasMaxLength(194)
            //        .IsUnicode(false)
            //        .HasColumnName("people_fio");
            //});

            //modelBuilder.Entity<VwMontajGood>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToView("vw_montaj_goods");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Idgood).HasColumnName("idgood");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");
            //});

            //modelBuilder.Entity<Wdlog>(entity =>
            //{
            //    entity.HasKey(e => e.Idwdlog);

            //    entity.ToTable("wdlog");

            //    entity.HasIndex(e => new { e.Dt, e.Code }, "NonClusteredIndex-20190131-115004");

            //    entity.HasIndex(e => e.Idpeople, "idx_wdlog_idpeople");

            //    entity.Property(e => e.Idwdlog)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idwdlog");

            //    entity.Property(e => e.Code)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("code");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Wdlogs)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_wdlog_people");
            //});

            //modelBuilder.Entity<WebSynchCatalogsDatum>(entity =>
            //{
            //    entity.HasKey(e => e.IdWebSynchCatalogsData)
            //        .HasName("PK_websynchcatalogsdata");

            //    entity.ToTable("web_synch_catalogs_data");

            //    entity.Property(e => e.IdWebSynchCatalogsData)
            //        .ValueGeneratedNever()
            //        .HasColumnName("id_web_synch_catalogs_data");

            //    entity.Property(e => e.ActionName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("action_name");

            //    entity.Property(e => e.CatalogName)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("catalog_name");

            //    entity.Property(e => e.IdCatalog).HasColumnName("id_catalog");

            //    entity.Property(e => e.SynchDataId).HasColumnName("synch_data_id");
            //});

            //modelBuilder.Entity<Weborderprice>(entity =>
            //{
            //    entity.HasKey(e => e.Orderidentifire);

            //    entity.ToTable("weborderprice");

            //    entity.Property(e => e.Orderidentifire)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("orderidentifire");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(512)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted).HasColumnName("deleted");

            //    entity.Property(e => e.Dt)
            //        .HasColumnType("datetime")
            //        .HasColumnName("dt");

            //    entity.Property(e => e.Pricejson)
            //        .IsUnicode(false)
            //        .HasColumnName("pricejson");
            //});

            //modelBuilder.Entity<Work>(entity =>
            //{
            //    entity.HasKey(e => e.Idwork);

            //    entity.ToTable("work");

            //    entity.HasIndex(e => e.Idpeople, "idx_work_idpeople");

            //    entity.HasIndex(e => e.Idworkgroup, "idx_work_idworkgroup");

            //    entity.Property(e => e.Idwork)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idwork");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idworkgroup).HasColumnName("idworkgroup");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Workgroup)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("workgroup");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Works)
            //        .HasForeignKey(d => d.Idpeople)
            //        .HasConstraintName("FK_work_people");

            //    entity.HasOne(d => d.IdworkgroupNavigation)
            //        .WithMany(p => p.Works)
            //        .HasForeignKey(d => d.Idworkgroup)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_work_workgroup");
            //});

            //modelBuilder.Entity<WorkersFrom1c>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("workers_from_1c");

            //    entity.Property(e => e.Бригада)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Должность)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Имя)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Код)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Наименование)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Отчество)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Подразделение)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.ПодразделениеКод)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);

            //    entity.Property(e => e.Фамилия)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<Workgroup>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkgroup);

            //    entity.ToTable("workgroup");

            //    entity.HasIndex(e => e.Guid, "UQ__workgroup__4CB708A9")
            //        .IsUnique();

            //    entity.HasIndex(e => e.Parentid, "idx_workgroup_parentid");

            //    entity.Property(e => e.Idworkgroup)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkgroup");

            //    entity.Property(e => e.Comment)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Isactive).HasColumnName("isactive");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Parentid).HasColumnName("parentid");
            //});

            //modelBuilder.Entity<Workoper>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkoper);

            //    entity.ToTable("workoper");

            //    entity.HasIndex(e => e.Idpeople, "idx_workoper_idpeople");

            //    entity.HasIndex(e => e.Idwork, "idx_workoper_idwork");

            //    entity.Property(e => e.Idworkoper)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkoper");

            //    entity.Property(e => e.Comment)
            //        .HasMaxLength(256)
            //        .IsUnicode(false)
            //        .HasColumnName("comment");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idvalut1).HasColumnName("idvalut1");

            //    entity.Property(e => e.Idvalut2).HasColumnName("idvalut2");

            //    entity.Property(e => e.Idvalut3).HasColumnName("idvalut3");

            //    entity.Property(e => e.Idvalut4).HasColumnName("idvalut4");

            //    entity.Property(e => e.Idvalut5).HasColumnName("idvalut5");

            //    entity.Property(e => e.Idvalut6).HasColumnName("idvalut6");

            //    entity.Property(e => e.Idvalut7).HasColumnName("idvalut7");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.Numpos).HasColumnName("numpos");

            //    entity.Property(e => e.Price1)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price1");

            //    entity.Property(e => e.Price2)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price2");

            //    entity.Property(e => e.Price3)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price3");

            //    entity.Property(e => e.Price4)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price4");

            //    entity.Property(e => e.Price5)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price5");

            //    entity.Property(e => e.Price6)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price6");

            //    entity.Property(e => e.Price7)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("price7");

            //    entity.Property(e => e.Qu)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("qu");

            //    entity.Property(e => e.Worktime)
            //        .HasColumnType("numeric(15, 4)")
            //        .HasColumnName("worktime");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Workopers)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_workoper_people");

            //    entity.HasOne(d => d.IdworkNavigation)
            //        .WithMany(p => p.Workopers)
            //        .HasForeignKey(d => d.Idwork)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_workoper_work");
            //});

            //modelBuilder.Entity<Workperson>(entity =>
            //{
            //    entity.HasKey(e => e.Idworkpeople);

            //    entity.ToTable("workpeople");

            //    entity.HasIndex(e => e.Idpeople, "idx_workpeople_idpeople");

            //    entity.HasIndex(e => e.Idwork, "idx_workpeople_idwork");

            //    entity.Property(e => e.Idworkpeople)
            //        .ValueGeneratedNever()
            //        .HasColumnName("idworkpeople");

            //    entity.Property(e => e.Deleted)
            //        .HasColumnType("datetime")
            //        .HasColumnName("deleted");

            //    entity.Property(e => e.Guid)
            //        .HasColumnName("guid")
            //        .HasDefaultValueSql("(newid())");

            //    entity.Property(e => e.Idpeople).HasColumnName("idpeople");

            //    entity.Property(e => e.Idwork).HasColumnName("idwork");

            //    entity.HasOne(d => d.IdpeopleNavigation)
            //        .WithMany(p => p.Workpeople)
            //        .HasForeignKey(d => d.Idpeople)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_workpeople_people");

            //    entity.HasOne(d => d.IdworkNavigation)
            //        .WithMany(p => p.Workpeople)
            //        .HasForeignKey(d => d.Idwork)
            //        .OnDelete(DeleteBehavior.Cascade)
            //        .HasConstraintName("FK_workpeople_work");
            //});

            //modelBuilder.Entity<_1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("1");

            //    entity.Property(e => e.Binblob).HasColumnName("BINBLOB");

            //    entity.Property(e => e.Grgoodsid).HasColumnName("GRGOODSID");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(128)
            //        .IsUnicode(false)
            //        .HasColumnName("NAME");
            //});

            //modelBuilder.Entity<_11>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("11");

            //    entity.Property(e => e.Cast)
            //        .HasColumnType("text")
            //        .HasColumnName("CAST");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(64)
            //        .IsUnicode(false)
            //        .HasColumnName("MARKING");
            //});

            //modelBuilder.Entity<МатериалыИзКаталога1>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Материалы из каталога1");

            //    entity.Property(e => e.Артикул)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<МатериалыИзКаталога2>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Материалы из каталога2");

            //    entity.Property(e => e.Артикул)
            //        .HasMaxLength(50)
            //        .IsUnicode(false);
            //});

            //modelBuilder.Entity<ЦеныУслуги>(entity =>
            //{
            //    entity.HasNoKey();

            //    entity.ToTable("Цены услуги");

            //    entity.Property(e => e.Brand101)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brand_1_0_1");

            //    entity.Property(e => e.Brand102)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brand_1_0_2");

            //    entity.Property(e => e.Brand201)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brand_2_0_1");

            //    entity.Property(e => e.Brand202)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brand_2_0_2");

            //    entity.Property(e => e.Brand801)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("brand_8_0_1");

            //    entity.Property(e => e.Group)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("group");

            //    entity.Property(e => e.Marking)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("marking");

            //    entity.Property(e => e.Name)
            //        .HasMaxLength(255)
            //        .IsUnicode(false)
            //        .HasColumnName("name");

            //    entity.Property(e => e.ЦеноваяГруппа)
            //        .HasMaxLength(50)
            //        .IsUnicode(false)
            //        .HasColumnName("Ценовая_группа");
            //});

            modelBuilder.HasSequence<int>("gen_actionhistory");

            modelBuilder.HasSequence<int>("gen_addarea").StartsAt(553);

            modelBuilder.HasSequence<int>("gen_addbuild");

            modelBuilder.HasSequence<int>("gen_addcity").StartsAt(2469);

            modelBuilder.HasSequence<int>("gen_addcityregion").StartsAt(51508);

            modelBuilder.HasSequence<int>("gen_addclassification").StartsAt(28);

            modelBuilder.HasSequence<int>("gen_addclassificationgroup").StartsAt(8);

            modelBuilder.HasSequence<int>("gen_addregion").StartsAt(28);

            modelBuilder.HasSequence<int>("gen_address").StartsAt(178);

            modelBuilder.HasSequence<int>("gen_addstreet").StartsAt(314771);

            modelBuilder.HasSequence<int>("gen_advertisingaction");

            modelBuilder.HasSequence<int>("gen_advertisingactiongroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_agree");

            modelBuilder.HasSequence<int>("gen_agreement");

            modelBuilder.HasSequence<int>("gen_agreementcondition").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_agreementconditionrel");

            modelBuilder.HasSequence<int>("gen_agreementgrant");

            modelBuilder.HasSequence<int>("gen_allowreportedit");

            modelBuilder.HasSequence("gen_alumparts").HasMin(0);

            modelBuilder.HasSequence<int>("gen_audit");

            modelBuilder.HasSequence<int>("gen_availabilitygroup").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_box");

            modelBuilder.HasSequence<int>("gen_boxitem");

            modelBuilder.HasSequence<int>("gen_budget");

            modelBuilder.HasSequence<int>("gen_budgetgroup");

            modelBuilder.HasSequence<int>("gen_car").StartsAt(88);

            modelBuilder.HasSequence<int>("gen_carmarking").StartsAt(10);

            modelBuilder.HasSequence<int>("gen_carmarkingroute").StartsAt(421);

            modelBuilder.HasSequence<int>("gen_cartariff");

            modelBuilder.HasSequence<int>("gen_cashbox").StartsAt(9);

            modelBuilder.HasSequence<int>("gen_changegood");

            modelBuilder.HasSequence("gen_changesP7").HasMin(0);

            modelBuilder.HasSequence<int>("gen_citytime");

            modelBuilder.HasSequence<int>("gen_coatdoc");

            modelBuilder.HasSequence<int>("gen_coatdocgroup");

            modelBuilder.HasSequence<int>("gen_coatdocpos");

            modelBuilder.HasSequence<int>("gen_coatdocsign");

            modelBuilder.HasSequence<int>("gen_color").StartsAt(352);

            modelBuilder.HasSequence<int>("gen_coloraccordance").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_coloraccordancedetail");

            modelBuilder.HasSequence<int>("gen_colorgroup").StartsAt(15);

            modelBuilder.HasSequence<int>("gen_colorgroupcustom").StartsAt(81);

            modelBuilder.HasSequence<int>("gen_colorgroupprice").StartsAt(232);

            modelBuilder.HasSequence<int>("gen_colorgrouppriceitem").StartsAt(12634);

            modelBuilder.HasSequence<int>("gen_commongroupgrant").StartsAt(635);

            modelBuilder.HasSequence<int>("gen_connection").StartsAt(542);

            modelBuilder.HasSequence<int>("gen_connectortype").StartsAt(15);

            modelBuilder.HasSequence<int>("gen_constructiontype").StartsAt(37);

            modelBuilder.HasSequence<int>("gen_constructiontypedetail").StartsAt(32950);

            modelBuilder.HasSequence<int>("gen_customer").StartsAt(50108);

            modelBuilder.HasSequence<int>("gen_customeraccount");

            modelBuilder.HasSequence<int>("gen_customeraddress");

            modelBuilder.HasSequence<int>("gen_customeragreement");

            modelBuilder.HasSequence<int>("gen_customercategory").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_customerclaim");

            modelBuilder.HasSequence<int>("gen_customerdestanation");

            modelBuilder.HasSequence<int>("gen_customerdiraction");

            modelBuilder.HasSequence<int>("gen_customerdiscard");

            modelBuilder.HasSequence<int>("gen_customerevent");

            modelBuilder.HasSequence<int>("gen_customerfile");

            modelBuilder.HasSequence<int>("gen_customerform").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_customergroup").StartsAt(21);

            modelBuilder.HasSequence<int>("gen_customergroupgrant");

            modelBuilder.HasSequence<int>("gen_customerpeople");

            modelBuilder.HasSequence<int>("gen_customerplan");

            modelBuilder.HasSequence<int>("gen_customerpricechange");

            modelBuilder.HasSequence<int>("gen_customerpricechangehistory");

            modelBuilder.HasSequence<int>("gen_customerpricepolicy");

            modelBuilder.HasSequence<int>("gen_customerpricepolicyhistory");

            modelBuilder.HasSequence<int>("gen_customerrel");

            modelBuilder.HasSequence<int>("gen_customerrelation");

            modelBuilder.HasSequence<int>("gen_customersign");

            modelBuilder.HasSequence<int>("gen_customertyperel").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_delivdoc");

            modelBuilder.HasSequence<int>("gen_delivdocdiraction");

            modelBuilder.HasSequence<int>("gen_delivdocdiractionpeople");

            modelBuilder.HasSequence<int>("gen_delivdocfile");

            modelBuilder.HasSequence<int>("gen_delivdocgroup").StartsAt(7);

            modelBuilder.HasSequence("gen_delivdoclog").StartsAt(0);

            modelBuilder.HasSequence<int>("gen_delivdocpeople");

            modelBuilder.HasSequence<int>("gen_delivdocpos");

            modelBuilder.HasSequence<int>("gen_delivdocsign");

            modelBuilder.HasSequence<int>("gen_department").StartsAt(109);

            modelBuilder.HasSequence<int>("gen_departmentmember").StartsAt(1098);

            modelBuilder.HasSequence<int>("gen_designerevent").StartsAt(14);

            modelBuilder.HasSequence<int>("gen_destanation").StartsAt(412);

            modelBuilder.HasSequence<int>("gen_destanationcustomer");

            modelBuilder.HasSequence<int>("gen_destanationroute").StartsAt(415);

            modelBuilder.HasSequence<int>("gen_destanationseller");

            modelBuilder.HasSequence<int>("gen_diraction").StartsAt(84);

            modelBuilder.HasSequence<int>("gen_diractiongrant").StartsAt(200);

            modelBuilder.HasSequence<int>("gen_diractiongroup").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_discard").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_discardgroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_docappearance").StartsAt(18);

            modelBuilder.HasSequence<int>("gen_docgroupgrant").StartsAt(757);

            modelBuilder.HasSequence<int>("gen_doclock").StartsAt(138);

            modelBuilder.HasSequence<int>("gen_docoper").StartsAt(101);

            modelBuilder.HasSequence<int>("gen_docopergrant").StartsAt(663);

            modelBuilder.HasSequence<int>("gen_docrelation").StartsAt(192);

            modelBuilder.HasSequence<int>("gen_docscript").StartsAt(1097);

            modelBuilder.HasSequence<int>("gen_docscriptgrant").StartsAt(945);

            modelBuilder.HasSequence<int>("gen_docscriptgroup").StartsAt(20);

            modelBuilder.HasSequence<int>("gen_docstate").StartsAt(77);

            modelBuilder.HasSequence<int>("gen_docwork").StartsAt(39243);

            modelBuilder.HasSequence<int>("gen_docworkpeople");

            modelBuilder.HasSequence<int>("gen_embrasuretype");

            modelBuilder.HasSequence<int>("gen_embrasuretypegroup");

            modelBuilder.HasSequence<int>("gen_equipment");

            modelBuilder.HasSequence<int>("gen_equipmentdoc");

            modelBuilder.HasSequence<int>("gen_equipmentdocfile");

            modelBuilder.HasSequence<int>("gen_equipmentglass");

            modelBuilder.HasSequence<int>("gen_equipmentgroup");

            modelBuilder.HasSequence<int>("gen_equipmentper").StartsAt(27);

            modelBuilder.HasSequence<int>("gen_equipmentprofile");

            modelBuilder.HasSequence<int>("gen_equipmentprofilein");

            modelBuilder.HasSequence<int>("gen_equipmentprofileout");

            modelBuilder.HasSequence<int>("gen_error").StartsAt(109);

            modelBuilder.HasSequence<int>("gen_errorgroup").StartsAt(14);

            modelBuilder.HasSequence<int>("gen_errortype").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_files").StartsAt(59);

            modelBuilder.HasSequence<int>("gen_finparam").StartsAt(109);

            modelBuilder.HasSequence<int>("gen_finparamcalc").StartsAt(360340456);

            modelBuilder.HasSequence<int>("gen_finparamgroup").StartsAt(9);

            modelBuilder.HasSequence<int>("gen_ganttchart").StartsAt(8);

            modelBuilder.HasSequence<int>("gen_glass").StartsAt(300);

            modelBuilder.HasSequence<int>("gen_glassdetail").StartsAt(39);

            modelBuilder.HasSequence<int>("gen_glasselement").StartsAt(316);

            modelBuilder.HasSequence<int>("gen_glasselementgroup").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_glassgroup").StartsAt(29);

            modelBuilder.HasSequence<int>("gen_good").StartsAt(17625);

            modelBuilder.HasSequence<int>("gen_goodanalog").StartsAt(4667);

            modelBuilder.HasSequence<int>("gen_goodanalogdetail").StartsAt(6719);

            modelBuilder.HasSequence<int>("gen_goodanaloggroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_goodbuffer").StartsAt(12);

            modelBuilder.HasSequence<int>("gen_goodcolorgroupprice").StartsAt(14679);

            modelBuilder.HasSequence<int>("gen_goodcolorparam").StartsAt(1497);

            modelBuilder.HasSequence<int>("gen_goodgroup").StartsAt(1500);

            modelBuilder.HasSequence<int>("gen_goodkit").StartsAt(118);

            modelBuilder.HasSequence<int>("gen_goodkitdetail").StartsAt(334);

            modelBuilder.HasSequence<int>("gen_goodkitgroup").StartsAt(22);

            modelBuilder.HasSequence<int>("gen_goodmeasure").StartsAt(10365);

            modelBuilder.HasSequence<int>("gen_goodoptim").StartsAt(73);

            modelBuilder.HasSequence<int>("gen_goodost").StartsAt(3489);

            modelBuilder.HasSequence<int>("gen_goodparam").StartsAt(50217);

            modelBuilder.HasSequence<int>("gen_goodparamname").StartsAt(26);

            modelBuilder.HasSequence<int>("gen_goodplanpricehistory");

            modelBuilder.HasSequence<int>("gen_goodprice").StartsAt(512);

            modelBuilder.HasSequence<int>("gen_goodpricegroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_goodpricehistory").StartsAt(4134);

            modelBuilder.HasSequence<int>("gen_goodservice").StartsAt(8);

            modelBuilder.HasSequence<int>("gen_goodservicegroup").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_goodtype").StartsAt(34);

            modelBuilder.HasSequence<int>("gen_insertion").StartsAt(146);

            modelBuilder.HasSequence<int>("gen_insertiondetail").StartsAt(608);

            modelBuilder.HasSequence<int>("gen_insertionparam").StartsAt(4674);

            modelBuilder.HasSequence<int>("gen_insertionparamdetail").StartsAt(26366);

            modelBuilder.HasSequence<int>("gen_installdoc").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_installdocdiraction");

            modelBuilder.HasSequence<int>("gen_installdocdiractionpeople");

            modelBuilder.HasSequence<int>("gen_installdocfile");

            modelBuilder.HasSequence<int>("gen_installdocgoodservice");

            modelBuilder.HasSequence<int>("gen_installdocgroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_installdocpos");

            modelBuilder.HasSequence<int>("gen_installdocsign");

            modelBuilder.HasSequence<int>("gen_localizedstring");

            modelBuilder.HasSequence<int>("gen_lockexcept").StartsAt(13850);

            modelBuilder.HasSequence<int>("gen_mailinglist");

            modelBuilder.HasSequence<int>("gen_mailinglistondemand");

            modelBuilder.HasSequence<int>("gen_mailinglistsettings");

            modelBuilder.HasSequence<int>("gen_mailinglistusers");

            modelBuilder.HasSequence<int>("gen_manufactdiraction");

            modelBuilder.HasSequence<int>("gen_manufactdiractionpeople");

            modelBuilder.HasSequence<int>("gen_manufactdoc");

            modelBuilder.HasSequence<int>("gen_manufactdoc_error");

            modelBuilder.HasSequence<int>("gen_manufactdoccar");

            modelBuilder.HasSequence<int>("gen_manufactdoccomment");

            modelBuilder.HasSequence<int>("gen_manufactdocgoodin");

            modelBuilder.HasSequence<int>("gen_manufactdocgroup").StartsAt(49);

            modelBuilder.HasSequence<int>("gen_manufactdocnopyramid");

            modelBuilder.HasSequence<int>("gen_manufactdocorder");

            modelBuilder.HasSequence<int>("gen_manufactdocpos").StartsAt(3426840);

            modelBuilder.HasSequence("gen_manufactdocpossign");

            modelBuilder.HasSequence<int>("gen_manufactdocpyramid");

            modelBuilder.HasSequence<int>("gen_manufactdocpyramidpos");

            modelBuilder.HasSequence<int>("gen_manufactdocpyramidsign");

            modelBuilder.HasSequence<int>("gen_manufactdocsign").StartsAt(19);

            modelBuilder.HasSequence<int>("gen_markingfilter");

            modelBuilder.HasSequence<int>("gen_markingfilterdetail");

            modelBuilder.HasSequence<int>("gen_measure").StartsAt(34);

            modelBuilder.HasSequence<int>("gen_messages");

            modelBuilder.HasSequence<int>("gen_messagetype").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_model").StartsAt(1388);

            modelBuilder.HasSequence<int>("gen_modelcalc").StartsAt(48416385);

            modelBuilder.HasSequence<int>("gen_modelparam").StartsAt(341);

            modelBuilder.HasSequence<int>("gen_modelparamcalc").StartsAt(670925913);

            modelBuilder.HasSequence<int>("gen_modelparamcondition").StartsAt(28);

            modelBuilder.HasSequence("gen_modelparamconditiondetail");

            modelBuilder.HasSequence<int>("gen_modelparamgroup").StartsAt(17);

            modelBuilder.HasSequence<int>("gen_modelparamvalue").StartsAt(1133);

            modelBuilder.HasSequence<int>("gen_modelpart").StartsAt(38);

            modelBuilder.HasSequence<int>("gen_modelpic").StartsAt(1453);

            modelBuilder.HasSequence<int>("gen_modelscript").StartsAt(15);

            modelBuilder.HasSequence<int>("gen_my_apdexkey");

            modelBuilder.HasSequence<int>("gen_my_apdexlog");

            modelBuilder.HasSequence("gen_my_belt").StartsAt(0);

            modelBuilder.HasSequence("gen_my_belt_sign");

            modelBuilder.HasSequence<int>("gen_my_causerdepart");

            modelBuilder.HasSequence<int>("gen_my_delivschedule");

            modelBuilder.HasSequence<int>("gen_my_delivscheduleitem");

            modelBuilder.HasSequence<int>("gen_my_geolog");

            modelBuilder.HasSequence<int>("gen_my_lam_sort_detail");

            modelBuilder.HasSequence("gen_my_lam_sort_group").StartsAt(43);

            modelBuilder.HasSequence<int>("gen_my_load_testing");

            modelBuilder.HasSequence("gen_my_logist_otgr_fact");

            modelBuilder.HasSequence<int>("gen_My_LogistItem").StartsAt(3115438);

            modelBuilder.HasSequence("gen_my_logistitemsign");

            modelBuilder.HasSequence<int>("gen_my_logistroute");

            modelBuilder.HasSequence<int>("gen_my_logistrouteitem");

            modelBuilder.HasSequence("gen_my_orderpricehistory");

            modelBuilder.HasSequence<int>("gen_my_perfomancelog");

            modelBuilder.HasSequence<int>("gen_my_porter").StartsAt(64);

            modelBuilder.HasSequence<int>("gen_my_porteritem");

            modelBuilder.HasSequence<int>("gen_my_portershift");

            modelBuilder.HasSequence<int>("gen_my_portershift_plan");

            modelBuilder.HasSequence("gen_my_portershiftsign");

            modelBuilder.HasSequence<int>("gen_my_servicereasondepart");

            modelBuilder.HasSequence<int>("gen_my_shuttlepyramid").StartsAt(274);

            modelBuilder.HasSequence<int>("gen_my_shuttlepyramidaddress");

            modelBuilder.HasSequence<int>("gen_my_storageaddress").StartsAt(173);

            modelBuilder.HasSequence<int>("gen_my_syncha").StartsAt(180000);

            modelBuilder.HasSequence("gen_my_workstation").StartsAt(200);

            modelBuilder.HasSequence<int>("gen_my_workstation_activity");

            modelBuilder.HasSequence("gen_my_workstation_sign");

            modelBuilder.HasSequence("gen_my_workstationlayout");

            modelBuilder.HasSequence<int>("gen_my_zapak").StartsAt(10);

            modelBuilder.HasSequence<int>("gen_myglasstrash");

            modelBuilder.HasSequence<int>("gen_myzakazgood");

            modelBuilder.HasSequence<int>("gen_nopaper");

            modelBuilder.HasSequence<int>("gen_optimdoc");

            modelBuilder.HasSequence<int>("gen_optimdocdiraction");

            modelBuilder.HasSequence<int>("gen_optimdocdiractionpeople");

            modelBuilder.HasSequence<int>("gen_optimdocgoodin");

            modelBuilder.HasSequence<int>("gen_optimdocgoodout");

            modelBuilder.HasSequence<int>("gen_optimdocgroup").StartsAt(18);

            modelBuilder.HasSequence<int>("gen_optimdocpic");

            modelBuilder.HasSequence<int>("gen_optimdocpos");

            modelBuilder.HasSequence<int>("gen_optimdocsign");

            modelBuilder.HasSequence<int>("gen_orderbudget");

            modelBuilder.HasSequence<int>("gen_orderchange");

            modelBuilder.HasSequence<int>("gen_orderchangeapproved");

            modelBuilder.HasSequence<int>("gen_orderdiraction").StartsAt(1821500);

            modelBuilder.HasSequence<int>("gen_orderdiractionpeople");

            modelBuilder.HasSequence<int>("gen_ordererror").StartsAt(375);

            modelBuilder.HasSequence<int>("gen_orderevent").StartsAt(279);

            modelBuilder.HasSequence<int>("gen_ordereventgroup").StartsAt(17);

            modelBuilder.HasSequence<int>("gen_orderfile");

            modelBuilder.HasSequence<int>("gen_ordergood");

            modelBuilder.HasSequence<int>("gen_ordergoodservice");

            modelBuilder.HasSequence<int>("gen_orderitem").StartsAt(6511446);

            modelBuilder.HasSequence<int>("gen_orderpricechange").StartsAt(3313);

            modelBuilder.HasSequence<int>("gen_orders").StartsAt(129265);

            modelBuilder.HasSequence<int>("gen_ordersetting");

            modelBuilder.HasSequence<int>("gen_ordersgroup").StartsAt(88);

            modelBuilder.HasSequence<int>("gen_ordersign").StartsAt(1449);

            modelBuilder.HasSequence<int>("gen_paymentdoc");

            modelBuilder.HasSequence<int>("gen_paymentdocgroup").StartsAt(15);

            modelBuilder.HasSequence<int>("gen_paymentdocsign");

            modelBuilder.HasSequence<int>("gen_paymentgroup").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_people").StartsAt(171);

            modelBuilder.HasSequence<int>("gen_peoplegroup").StartsAt(109);

            modelBuilder.HasSequence<int>("gen_peoplegrouplist").StartsAt(2074);

            modelBuilder.HasSequence<int>("gen_peoplepost").StartsAt(31);

            modelBuilder.HasSequence<int>("gen_peoplepostgroup").StartsAt(11);

            modelBuilder.HasSequence("gen_peoplesettinggrouplist");

            modelBuilder.HasSequence<int>("gen_pf_glass").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pf_glass_ct_source").StartsAt(9);

            modelBuilder.HasSequence<int>("gen_pf_glass_source_ge");

            modelBuilder.HasSequence<int>("gen_pf_glass_source_glass").StartsAt(97);

            modelBuilder.HasSequence<int>("gen_pf_ms").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pf_ms_ct_source").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pf_ms_mp_filtr").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pf_ms_mp_set");

            modelBuilder.HasSequence<int>("gen_pf_pt");

            modelBuilder.HasSequence<int>("gen_pf_pt_ct_source");

            modelBuilder.HasSequence<int>("gen_pf_pt_mp_filtr");

            modelBuilder.HasSequence<int>("gen_pf_pt_mp_set");

            modelBuilder.HasSequence<int>("gen_pf_stv").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_pf_stv_ct_source").StartsAt(5);

            modelBuilder.HasSequence<int>("gen_pf_stv_mp");

            modelBuilder.HasSequence<int>("gen_picture").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_poll").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pollanswer").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_pollexecuting");

            modelBuilder.HasSequence<int>("gen_pollexecutingdiraction");

            modelBuilder.HasSequence<int>("gen_pollexecutinggroup").StartsAt(7);

            modelBuilder.HasSequence<int>("gen_pollexecutingitem");

            modelBuilder.HasSequence<int>("gen_pollexecutingitemanswer");

            modelBuilder.HasSequence<int>("gen_pollexecutingsign");

            modelBuilder.HasSequence<int>("gen_pollgroup").StartsAt(208);

            modelBuilder.HasSequence<int>("gen_pollquestion").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_pollrelation").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_power").StartsAt(162);

            modelBuilder.HasSequence("gen_powergrant");

            modelBuilder.HasSequence<int>("gen_powerplan").StartsAt(84181);

            modelBuilder.HasSequence<int>("gen_powerplanchanges");

            modelBuilder.HasSequence<int>("gen_powerrel").StartsAt(90);

            modelBuilder.HasSequence<int>("gen_preference").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_pricechange").StartsAt(12);

            modelBuilder.HasSequence<int>("gen_pricechangegrant").StartsAt(48);

            modelBuilder.HasSequence<int>("gen_pricechangegroup").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_pricelist");

            modelBuilder.HasSequence<int>("gen_pricelisterror");

            modelBuilder.HasSequence<int>("gen_pricelistgoodservice");

            modelBuilder.HasSequence<int>("gen_pricelistgroup").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_pricelistitem");

            modelBuilder.HasSequence<int>("gen_pricelistmodel");

            modelBuilder.HasSequence<int>("gen_pricelistpricechange");

            modelBuilder.HasSequence<int>("gen_productiondoc");

            modelBuilder.HasSequence<int>("gen_productiondocgroup").StartsAt(7);

            modelBuilder.HasSequence<int>("gen_productiondocpos");

            modelBuilder.HasSequence<int>("gen_productiondocsign");

            modelBuilder.HasSequence<int>("gen_productionsite").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_productiontype").StartsAt(843);

            modelBuilder.HasSequence<int>("gen_productiontypeconstruction").StartsAt(257);

            modelBuilder.HasSequence<int>("gen_productiontypegrant").StartsAt(4027);

            modelBuilder.HasSequence<int>("gen_productiontypegroup").StartsAt(47);

            modelBuilder.HasSequence<int>("gen_productiontypeparam").StartsAt(412);

            modelBuilder.HasSequence<int>("gen_productiontypesetting").StartsAt(1184);

            modelBuilder.HasSequence<int>("gen_productiontypesystems").StartsAt(413);

            modelBuilder.HasSequence<int>("gen_productiontypetemplate").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_pyramid").StartsAt(279);

            modelBuilder.HasSequence<int>("gen_pyramidfact");

            modelBuilder.HasSequence<int>("gen_pyramidfactpos");

            modelBuilder.HasSequence<int>("gen_report").StartsAt(341);

            modelBuilder.HasSequence<int>("gen_reportdocoper").StartsAt(3926);

            modelBuilder.HasSequence<int>("gen_reportgroup").StartsAt(13);

            modelBuilder.HasSequence<int>("gen_reportkit").StartsAt(7);

            modelBuilder.HasSequence<int>("gen_reportkitdetail").StartsAt(33);

            modelBuilder.HasSequence<int>("gen_reportsave");

            modelBuilder.HasSequence<int>("gen_reportscript").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_respower");

            modelBuilder.HasSequence<int>("gen_revisiongp").StartsAt(36);

            modelBuilder.HasSequence<int>("gen_revisiongpitem");

            modelBuilder.HasSequence<int>("gen_rotoxflugel");

            modelBuilder.HasSequence<int>("gen_rotoxhouse");

            modelBuilder.HasSequence<int>("gen_route").StartsAt(386);

            modelBuilder.HasSequence<int>("gen_ruleoptim");

            modelBuilder.HasSequence<int>("gen_rulescheme");

            modelBuilder.HasSequence<int>("gen_seller").StartsAt(607);

            modelBuilder.HasSequence<int>("gen_sellerdestanation");

            modelBuilder.HasSequence<int>("gen_sellergrant").StartsAt(2079);

            modelBuilder.HasSequence<int>("gen_sellergroup").StartsAt(5);

            modelBuilder.HasSequence<int>("gen_sellerpricechange").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_servicedepartment");

            modelBuilder.HasSequence<int>("gen_servicedepartmentpeople");

            modelBuilder.HasSequence<int>("gen_servicedoc").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_servicedocdiraction");

            modelBuilder.HasSequence<int>("gen_servicedocgroup").StartsAt(21);

            modelBuilder.HasSequence<int>("gen_servicedocpos");

            modelBuilder.HasSequence<int>("gen_servicedocsign");

            modelBuilder.HasSequence<int>("gen_servicereason").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_setting").StartsAt(1878);

            modelBuilder.HasSequence<int>("gen_settingchanges");

            modelBuilder.HasSequence<int>("gen_settinggroup").StartsAt(17);

            modelBuilder.HasSequence<int>("gen_shtapikgroup").StartsAt(16);

            modelBuilder.HasSequence<int>("gen_shtapikgroupdetail").StartsAt(3316);

            modelBuilder.HasSequence<int>("gen_shtapikgroupparamdetail").StartsAt(7669);

            modelBuilder.HasSequence<int>("gen_shtapikgroupprofile").StartsAt(75);

            modelBuilder.HasSequence<int>("gen_sign").StartsAt(212);

            modelBuilder.HasSequence<int>("gen_signgrant").StartsAt(4118);

            modelBuilder.HasSequence<int>("gen_signgroup").StartsAt(6);

            modelBuilder.HasSequence<int>("gen_signvalue").StartsAt(1210);

            modelBuilder.HasSequence<int>("gen_sizedoc").StartsAt(36);

            modelBuilder.HasSequence<int>("gen_sizedocconstrtype");

            modelBuilder.HasSequence<int>("gen_sizedocdiraction").StartsAt(96);

            modelBuilder.HasSequence<int>("gen_sizedocdiractionpeople");

            modelBuilder.HasSequence<int>("gen_sizedocfile");

            modelBuilder.HasSequence<int>("gen_sizedocgroup").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_sizedocsign").StartsAt(94);

            modelBuilder.HasSequence<int>("gen_sourceinfo");

            modelBuilder.HasSequence<int>("gen_sourceinfogroup").StartsAt(3);

            modelBuilder.HasSequence<int>("gen_storagespace").StartsAt(2100046780);

            modelBuilder.HasSequence<int>("gen_storedepart").StartsAt(124);

            modelBuilder.HasSequence<int>("gen_storedepartdocoper").StartsAt(92);

            modelBuilder.HasSequence<int>("gen_storedepartrel").StartsAt(35);

            modelBuilder.HasSequence<int>("gen_storedoc").StartsAt(250904);

            modelBuilder.HasSequence<int>("gen_storedocbarcode");

            modelBuilder.HasSequence<int>("gen_storedocgroup").StartsAt(30);

            modelBuilder.HasSequence<int>("gen_storedocpos").StartsAt(21956475);

            modelBuilder.HasSequence<int>("gen_storedocscomplect").StartsAt(34586);

            modelBuilder.HasSequence<int>("gen_storedocsign").StartsAt(5080487);

            modelBuilder.HasSequence<int>("gen_supplydoc").StartsAt(25);

            modelBuilder.HasSequence<int>("gen_supplydocdiraction");

            modelBuilder.HasSequence<int>("gen_supplydocgoodservice");

            modelBuilder.HasSequence<int>("gen_supplydocgroup").StartsAt(25);

            modelBuilder.HasSequence<int>("gen_supplydocpos").StartsAt(192);

            modelBuilder.HasSequence<int>("gen_supplydocsign").StartsAt(23);

            modelBuilder.HasSequence<int>("gen_sysconnect");

            modelBuilder.HasSequence<int>("gen_sysinfo");

            modelBuilder.HasSequence<int>("gen_system").StartsAt(106);

            modelBuilder.HasSequence<int>("gen_systemdetail").StartsAt(1413);

            modelBuilder.HasSequence<int>("gen_systemdetailrel").StartsAt(433);

            modelBuilder.HasSequence<int>("gen_systemdetailrelationship");

            modelBuilder.HasSequence<int>("gen_sysupdate").StartsAt(725);

            modelBuilder.HasSequence("gen_tariff");

            modelBuilder.HasSequence<int>("gen_techdoc").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_techdocdiraction");

            modelBuilder.HasSequence<int>("gen_techdocgroup").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_techdocpos");

            modelBuilder.HasSequence<int>("gen_techdocsign");

            modelBuilder.HasSequence<int>("gen_template").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_templategroup").StartsAt(2);

            modelBuilder.HasSequence<int>("gen_templateparam");

            modelBuilder.HasSequence<int>("gen_totalgoods");

            modelBuilder.HasSequence<int>("gen_trash");

            modelBuilder.HasSequence<int>("gen_valut").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_valutrate").StartsAt(4);

            modelBuilder.HasSequence<int>("gen_variant").StartsAt(306);

            modelBuilder.HasSequence<int>("gen_variantdetail").StartsAt(417);

            modelBuilder.HasSequence<int>("gen_variantparam").StartsAt(330);

            modelBuilder.HasSequence<int>("gen_variantparamdetail").StartsAt(673);

            modelBuilder.HasSequence<int>("gen_variantparamtype").StartsAt(145);

            modelBuilder.HasSequence<int>("gen_variantparamtypevalue").StartsAt(119);

            modelBuilder.HasSequence<int>("gen_varianttype").StartsAt(8);

            modelBuilder.HasSequence<int>("gen_vectorpicture").StartsAt(4);

            modelBuilder.HasSequence("gen_vectorpicturedetail");

            modelBuilder.HasSequence<int>("gen_wdlog").StartsAt(24208);

            modelBuilder.HasSequence<int>("gen_web_synch_catalogs_data");

            modelBuilder.HasSequence<int>("gen_work").StartsAt(51);

            modelBuilder.HasSequence<int>("gen_workgroup").StartsAt(20);

            modelBuilder.HasSequence<int>("gen_workoper").StartsAt(281);

            modelBuilder.HasSequence<int>("gen_workpeople");

        }

    }
}
